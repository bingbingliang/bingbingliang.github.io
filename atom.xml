<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>bingbingliang</title>
  <icon>https://www.gravatar.com/avatar/ab04916d7ac84ac21f8313db78f7f1d7</icon>
  <subtitle>bingbingliang&#39;notes</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://bingbingliang.github.io/"/>
  <updated>2019-06-20T17:49:19.751Z</updated>
  <id>https://bingbingliang.github.io/</id>
  
  <author>
    <name>冰冰凉</name>
    <email>93669448@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PHP上传大文件 - 配置upload_max_filesize和post_max_size</title>
    <link href="https://bingbingliang.github.io//posts/ac09b59e/"/>
    <id>https://bingbingliang.github.io//posts/ac09b59e/</id>
    <published>2019-06-19T16:34:54.000Z</published>
    <updated>2019-06-20T17:49:19.751Z</updated>
    
    <content type="html"><![CDATA[<p>简介：<br>PHP上传大文件所涉及到的 php.ini 配置详解。</p><h3 id="upload-max-filesize-2M"><a href="#upload-max-filesize-2M" class="headerlink" title="upload_max_filesize = 2M"></a>upload_max_filesize = 2M</h3><p>该配置是指文件上传大小默认是 2M ，如果超过则会失败。必须更改upload_max_filesize的值，例如：upload_max_filesize = 20M。</p><h3 id="post-max-size-8M"><a href="#post-max-size-8M" class="headerlink" title="post_max_size = 8M"></a>post_max_size = 8M</h3><p>该配置是指 POST 的数据最大字节长度是8M。索性将这个也改为20M，让它与 upload_max_filesize 相等即可。</p><h3 id="max-execution-time-30"><a href="#max-execution-time-30" class="headerlink" title="max_execution_time = 30"></a>max_execution_time = 30</h3><p>该配置是指每个脚本运行的最长时间，单位：秒。在传大文件的时候，必然传输时间变长，当时间超过30秒时，会报脚本执行超过30秒的错误。所以需要适当调高一点，比如 max_execution_time=60。</p><h3 id="max-input-time-60"><a href="#max-input-time-60" class="headerlink" title="max_input_time = 60"></a>max_input_time = 60</h3><p>该配置是指每个脚本可以消耗的时间，单位：秒。也需要适当调高一点，比如 max_input_time=120。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简介：&lt;br&gt;PHP上传大文件所涉及到的 php.ini 配置详解。&lt;/p&gt;
&lt;h3 id=&quot;upload-max-filesize-2M&quot;&gt;&lt;a href=&quot;#upload-max-filesize-2M&quot; class=&quot;headerlink&quot; title=&quot;upload
      
    
    </summary>
    
      <category term="PHP" scheme="https://bingbingliang.github.io/categories/PHP/"/>
    
    
      <category term="PHP" scheme="https://bingbingliang.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>微信公众号 - 获取所有关注者的信息</title>
    <link href="https://bingbingliang.github.io//posts/8aac5384/"/>
    <id>https://bingbingliang.github.io//posts/8aac5384/</id>
    <published>2019-06-18T16:34:54.000Z</published>
    <updated>2019-06-19T14:58:29.779Z</updated>
    
    <content type="html"><![CDATA[<p>简介：<br>使用微信公众号接口一键获取全部关注用户的信息。（openid,nickname,city,country,groupid,targetlist）</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    //Get all user infors method with wechat PHP API</span><br><span class="line">    set_time_limit(0);</span><br><span class="line">    <span class="variable">$count</span> = 0;</span><br><span class="line"></span><br><span class="line">    //appid of wechat</span><br><span class="line">    <span class="variable">$appid</span> = <span class="string">'您的APPID'</span>;</span><br><span class="line">    //appsecret of wechat</span><br><span class="line">    <span class="variable">$appsecret</span> = <span class="string">'您的appsecret'</span>;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    //@description: convert the unicode to Chinese characters</span><br><span class="line">    //@para:target string</span><br><span class="line">    //@<span class="built_in">return</span>:handled string</span><br><span class="line">    <span class="keyword">function</span> decodeUnicode(<span class="variable">$str</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">return</span> preg_replace_callback(<span class="string">'/\\\\u([0-9a-f]{4})/i'</span>,</span><br><span class="line">            create_function(</span><br><span class="line">                <span class="string">'$matches'</span>,</span><br><span class="line">                <span class="string">'return mb_convert_encoding(pack("H*", $matches[1]), "UTF-8", "UCS-2BE");'</span></span><br><span class="line">            ),<span class="variable">$str</span>);</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    //@description: <span class="keyword">if</span> the access_token is invaild, retrive the access_token and assign to global access_token</span><br><span class="line">    <span class="keyword">function</span> isErr(<span class="variable">$data</span>){</span><br><span class="line">        <span class="keyword">if</span>(array_key_exists(<span class="string">'errcode'</span>,<span class="variable">$data</span>)){</span><br><span class="line">            //the <span class="built_in">limit</span> <span class="built_in">times</span> to retrive access_token(<span class="keyword">for</span> there is a upper <span class="built_in">limit</span> 2000 one day)</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$GLOBALS</span>[<span class="string">'ERRCount'</span>] > <span class="variable">$GLOBALS</span>[<span class="string">'UpperLimit'</span>]){</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$data</span>[<span class="string">'errcode'</span>] == 40001){</span><br><span class="line">                <span class="variable">$GLOBALS</span>[<span class="string">'ERRCount'</span>] = <span class="variable">$GLOBALS</span>[<span class="string">'ERRCount'</span>] + 1;</span><br><span class="line">                <span class="variable">$GLOBALS</span>[<span class="string">'access_token'</span>] = getaccess_token(<span class="variable">$appid</span>,<span class="variable">$appsecret</span>);</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span>{</span><br><span class="line">                //other error but not access_token invaild</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">      //@description:get the access_token</span><br><span class="line">     <span class="keyword">function</span> getaccess_token(<span class="variable">$appid</span>,<span class="variable">$appsecret</span>){</span><br><span class="line">        //the access_token request url</span><br><span class="line">        <span class="variable">$url</span> = <span class="string">"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid={<span class="variable">$appid</span>}&secret={<span class="variable">$appsecret</span>}"</span>;</span><br><span class="line">        <span class="variable">$ch</span> = curl_init();</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_URL,<span class="variable">$url</span>);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER,1);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYPEER,0);</span><br><span class="line">        <span class="variable">$data</span> = curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">        curl_close(<span class="variable">$ch</span>);</span><br><span class="line">        //convert json to array</span><br><span class="line">        <span class="variable">$data</span> = json_decode(<span class="variable">$data</span>,<span class="literal">true</span>);</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$data</span>[<span class="string">'access_token'</span>];</span><br><span class="line">     }</span><br><span class="line">    //@description: post method of get 100 user infors(<span class="built_in">limit</span>:100 once)</span><br><span class="line">    //@para:the first is access_token,the second is the post data <span class="built_in">which</span> is a json string(format see wechat API website)</span><br><span class="line">    //@<span class="built_in">return</span>: the array of user infors</span><br><span class="line">    <span class="keyword">function</span> post(<span class="variable">$access_token</span>, <span class="variable">$post_data</span> = <span class="string">''</span>){</span><br><span class="line">        <span class="variable">$url</span> = <span class="string">"https://api.weixin.qq.com/cgi-bin/user/info/batchget?access_token={<span class="variable">$access_token</span>}"</span>;</span><br><span class="line">        <span class="variable">$ch</span> = curl_init();</span><br><span class="line">        curl_setopt (<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">        curl_setopt (<span class="variable">$ch</span>, CURLOPT_POST, 1);</span><br><span class="line">        curl_setopt (<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="variable">$post_data</span>);</span><br><span class="line">        curl_setopt (<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, 1);</span><br><span class="line">        curl_setopt (<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="literal">false</span>);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYPEER,0);</span><br><span class="line">        // the response data <span class="built_in">which</span> is the infor json string</span><br><span class="line">        <span class="variable">$data</span> = curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">        curl_close(<span class="variable">$ch</span>);</span><br><span class="line">        // replace error json string to avoid decode error</span><br><span class="line">        <span class="variable">$data</span> = preg_replace(<span class="string">'/[\x00-\x1F]/'</span>,<span class="string">''</span>, <span class="variable">$data</span>);</span><br><span class="line">        <span class="variable">$data</span> = json_decode(<span class="variable">$data</span>,<span class="literal">true</span>);</span><br><span class="line">        //var_dump(<span class="variable">$data</span>);</span><br><span class="line">        <span class="keyword">if</span>(isErr(<span class="variable">$data</span>)){</span><br><span class="line">            //<span class="keyword">if</span> the access_token is invaild, retrive the new access_token and try again</span><br><span class="line">            <span class="built_in">return</span> post(<span class="variable">$GLOBALS</span>[<span class="string">'access_token'</span>],<span class="variable">$post_data</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(array_key_exists(<span class="string">'user_info_list'</span>,<span class="variable">$data</span>)){</span><br><span class="line">            <span class="built_in">return</span> <span class="variable">$data</span>[<span class="string">'user_info_list'</span>];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    //@description: get the openids list of users(<span class="built_in">limit</span>:10000 once)</span><br><span class="line">    //@para: the first is the access_token,the second is the next_openid <span class="built_in">which</span> could be empty as the default</span><br><span class="line">    //@<span class="built_in">return</span>: <span class="built_in">return</span> the openid list</span><br><span class="line">    <span class="keyword">function</span> getOpenid(<span class="variable">$access_token</span>,<span class="variable">$openid</span>=<span class="string">''</span>){</span><br><span class="line">        //获取access_token</span><br><span class="line">        <span class="variable">$url</span> = <span class="string">"https://api.weixin.qq.com/cgi-bin/user/get?access_token={<span class="variable">$access_token</span>}&next_openid={<span class="variable">$openid</span>}"</span>;</span><br><span class="line">        <span class="variable">$ch</span> = curl_init();</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_URL,<span class="variable">$url</span>);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER,1);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYPEER,0);</span><br><span class="line">        <span class="variable">$data</span> = curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">        curl_close(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="variable">$data</span> = json_decode(<span class="variable">$data</span>,<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">if</span>(isErr(<span class="variable">$data</span>)){</span><br><span class="line">            <span class="built_in">return</span> getOpenid(<span class="variable">$GLOBALS</span>[<span class="string">'access_token'</span>],<span class="variable">$openid</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$data</span>;</span><br><span class="line">    }</span><br><span class="line">    //@description: write the user infor to file or <span class="keyword">do</span> other handle</span><br><span class="line">    //para: user infor array</span><br><span class="line">    <span class="keyword">function</span> handInfors(<span class="variable">$data</span>){</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$data</span> == null){</span><br><span class="line">            <span class="built_in">return</span>;</span><br><span class="line">        }</span><br><span class="line">        foreach(<span class="variable">$data</span> as <span class="variable">$infor</span>){</span><br><span class="line">            //number count of all users</span><br><span class="line">            <span class="variable">$GLOBALS</span>[<span class="string">'InforCount'</span>] = <span class="variable">$GLOBALS</span>[<span class="string">'InforCount'</span>] + 1;</span><br><span class="line">            //unicode convert</span><br><span class="line">            <span class="variable">$inforJson</span> = decodeUnicode(json_encode(<span class="variable">$infor</span>));</span><br><span class="line">            //write each line(each user infor) to info.txt</span><br><span class="line">            <span class="variable">$file</span> = <span class="string">'info.txt'</span>;</span><br><span class="line">            <span class="variable">$current</span> = file_get_contents(<span class="variable">$file</span>);            </span><br><span class="line">            <span class="variable">$current</span> .= <span class="variable">$inforJson</span>;</span><br><span class="line">            <span class="variable">$current</span> .= <span class="string">"\r\n"</span>;</span><br><span class="line">            file_put_contents(<span class="variable">$file</span>, <span class="variable">$current</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    //@description: send model message to Specified openid</span><br><span class="line">    //@<span class="built_in">return</span>: the send response</span><br><span class="line">    <span class="keyword">function</span> set_msg(<span class="variable">$access_token</span>,<span class="variable">$openid</span>){</span><br><span class="line">    <span class="variable">$formwork</span> = <span class="string">'{</span></span><br><span class="line"><span class="string">           "touser":"'</span>.<span class="variable">$openid</span>.<span class="string">'",</span></span><br><span class="line"><span class="string">           "template_id":"GkChFMRCGYvGoNUzusXX3qnOOV-6U0L801L3lmp6NYo",</span></span><br><span class="line"><span class="string">           "url":"http://mp.weixin.qq.com/s/Nn7-KIVOR3S8SFBOV3Qw8Q",            </span></span><br><span class="line"><span class="string">           "data":{</span></span><br><span class="line"><span class="string">                   "first": {</span></span><br><span class="line"><span class="string">                       "value":"缠论运行报告",</span></span><br><span class="line"><span class="string">                       "color":"#173177"</span></span><br><span class="line"><span class="string">                   },</span></span><br><span class="line"><span class="string">                   "keyword1":{</span></span><br><span class="line"><span class="string">                       "value":"缠论",</span></span><br><span class="line"><span class="string">                       "color":"#173177"</span></span><br><span class="line"><span class="string">                   },</span></span><br><span class="line"><span class="string">                   "keyword2":{</span></span><br><span class="line"><span class="string">                       "value":"国信TradeStation缠论全市场扫描",</span></span><br><span class="line"><span class="string">                       "color":"#173177"</span></span><br><span class="line"><span class="string">                   },</span></span><br><span class="line"><span class="string">                   "keyword3":{</span></span><br><span class="line"><span class="string">                       "value":"每天",</span></span><br><span class="line"><span class="string">                       "color":"#173177"</span></span><br><span class="line"><span class="string">                   },</span></span><br><span class="line"><span class="string">                   "remark": {</span></span><br><span class="line"><span class="string">                       "value":"2017-3-13：本日，\n第一类买点：2只，第二类买点：1只，第三类买点：0只；\n第一类卖点：1只，第二类卖点：0只，第三类卖点：2只；\n点击查看详情。",</span></span><br><span class="line"><span class="string">                       "color":"#FF0000"</span></span><br><span class="line"><span class="string">                    }</span></span><br><span class="line"><span class="string">            }</span></span><br><span class="line"><span class="string">        }'</span>;</span><br><span class="line">        <span class="variable">$url</span> = <span class="string">"https://api.weixin.qq.com/cgi-bin/message/template/send?access_token={<span class="variable">$access_token</span>}"</span>;</span><br><span class="line">        <span class="variable">$ch</span> = curl_init();</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_URL,<span class="variable">$url</span>);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER,1);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYPEER,0);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_POST,1);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS,<span class="variable">$formwork</span>);</span><br><span class="line">        <span class="variable">$data</span> = curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">        curl_close(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$data</span>;</span><br><span class="line">    }</span><br><span class="line">    //@description:get user infor by openid</span><br><span class="line">    //@<span class="built_in">return</span>: the user infor Json string</span><br><span class="line">    <span class="keyword">function</span> getUserByID(<span class="variable">$access_token</span>,<span class="variable">$openid</span>){</span><br><span class="line">        <span class="variable">$url</span> = <span class="string">"https://api.weixin.qq.com/cgi-bin/user/info?access_token={<span class="variable">$access_token</span>}&openid={<span class="variable">$openid</span>}&lang=zh_CN"</span>;</span><br><span class="line">        <span class="variable">$ch</span> = curl_init();</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_URL,<span class="variable">$url</span>);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER,1);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYPEER,0);</span><br><span class="line">        <span class="variable">$data</span> = curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">        curl_close(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$data</span>;//<span class="built_in">return</span> the infor json string</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    //main method:</span><br><span class="line">    <span class="built_in">echo</span> date(<span class="string">'Y-m-d H:i:s'</span>,time());</span><br><span class="line">    <span class="built_in">echo</span>(<span class="string">"&lt;br&gt;&lt;/br&gt;"</span>);</span><br><span class="line">    <span class="variable">$access_token</span> = getaccess_token(<span class="variable">$appid</span>,<span class="variable">$appsecret</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"access_token："</span>.<span class="variable">$access_token</span>;</span><br><span class="line">    <span class="built_in">echo</span>(<span class="string">"&lt;br&gt;&lt;/br&gt;"</span>);</span><br><span class="line">    <span class="variable">$ERRCount</span> = 0;</span><br><span class="line">    <span class="variable">$UpperLimit</span> = 10;</span><br><span class="line">    <span class="variable">$InforCount</span> = 0;</span><br><span class="line">    <span class="variable">$data</span> = getOpenid(<span class="variable">$access_token</span>);</span><br><span class="line">    //print_r(<span class="variable">$data</span>);</span><br><span class="line">    //<span class="built_in">echo</span>(<span class="string">"&lt;br&gt;&lt;/br&gt;"</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>){</span><br><span class="line">        //getOpenid</span><br><span class="line">        <span class="variable">$count</span> = <span class="variable">$data</span>[<span class="string">'count'</span>]; //openids count(10000 or trim)</span><br><span class="line">        <span class="variable">$nextopenid</span> = <span class="variable">$data</span>[<span class="string">'next_openid'</span>];</span><br><span class="line">        <span class="variable">$list</span> = array();</span><br><span class="line">        <span class="variable">$tempCount</span> = 0;</span><br><span class="line">        <span class="keyword">if</span>(array_key_exists(<span class="string">'data'</span>,<span class="variable">$data</span>) == <span class="literal">false</span>){</span><br><span class="line">            <span class="built_in">break</span>;</span><br><span class="line">        }</span><br><span class="line">        foreach(<span class="variable">$data</span>[<span class="string">'data'</span>][<span class="string">'openid'</span>] as <span class="variable">$openid</span>){</span><br><span class="line">            <span class="variable">$tempCount</span> = <span class="variable">$tempCount</span> + 1;</span><br><span class="line">            <span class="variable">$idArray</span> =array(  </span><br><span class="line">                    <span class="string">'openid'</span> => <span class="variable">$openid</span>,</span><br><span class="line">                     <span class="string">"lang"</span> => <span class="string">"zh-CN"</span></span><br><span class="line">                );</span><br><span class="line">            Array_push(<span class="variable">$list</span>,<span class="variable">$idArray</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(count(<span class="variable">$list</span>) == 100 or <span class="variable">$tempCount</span> == <span class="variable">$count</span>){</span><br><span class="line">                <span class="variable">$arra</span> = array(</span><br><span class="line">                <span class="string">'user_list'</span> => <span class="variable">$list</span></span><br><span class="line">                );</span><br><span class="line">                //<span class="built_in">echo</span>(json_encode(<span class="variable">$arra</span>));</span><br><span class="line">                //print_r(<span class="variable">$arra</span>);</span><br><span class="line">                <span class="variable">$infors</span> = post(<span class="variable">$access_token</span>,json_encode(<span class="variable">$arra</span>));</span><br><span class="line">                print_r(<span class="variable">$infors</span>);</span><br><span class="line">                <span class="built_in">echo</span>(<span class="string">"&lt;br&gt;&lt;/br&gt;"</span>);</span><br><span class="line">                //write infors to files</span><br><span class="line">                handInfors(<span class="variable">$infors</span>);</span><br><span class="line">                <span class="variable">$list</span> = array();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="variable">$data</span> = getOpenid(<span class="variable">$access_token</span>,<span class="variable">$nextopenid</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">echo</span> date(<span class="string">'Y-m-d H:i:s'</span>,time());</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简介：&lt;br&gt;使用微信公众号接口一键获取全部关注用户的信息。（openid,nickname,city,country,groupid,targetlist）&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td 
      
    
    </summary>
    
      <category term="PHP" scheme="https://bingbingliang.github.io/categories/PHP/"/>
    
    
      <category term="PHP" scheme="https://bingbingliang.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>微信公众号 - 自定义token对接</title>
    <link href="https://bingbingliang.github.io//posts/e20321f4/"/>
    <id>https://bingbingliang.github.io//posts/e20321f4/</id>
    <published>2019-06-17T17:55:46.000Z</published>
    <updated>2019-06-18T16:12:39.650Z</updated>
    
    <content type="html"><![CDATA[<p>简介：<br>开发微信公众号之前需要先给“微信公众平台”与“自己的服务器”建立一个关系，本篇内容就是“自己的服务器”与“微信公众平台”对接的文件内容。</p><p>由于“微信公众号-被动回复用户消息”不需要 appID 和 appsecret ，所以我把该功能也引进了这篇文章。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">/**</span><br><span class="line">  * wechat php <span class="built_in">test</span></span><br><span class="line">  */</span><br><span class="line"></span><br><span class="line">//define your token</span><br><span class="line">define(<span class="string">"TOKEN"</span>, <span class="string">"weixin"</span>); // 自定义‘与微信公众平台-接口配置信息中的 token 一致才能对接成功’</span><br><span class="line"><span class="variable">$wechatObj</span> = new wechatCallbackapiTest();</span><br><span class="line"><span class="variable">$wechatObj</span>->valid();</span><br><span class="line"></span><br><span class="line">class wechatCallbackapiTest {</span><br><span class="line"></span><br><span class="line">public <span class="keyword">function</span> <span class="function"><span class="title">valid</span></span>() {</span><br><span class="line"><span class="variable">$echoStr</span> = <span class="variable">$_GET</span>[<span class="string">"echostr"</span>];</span><br><span class="line"></span><br><span class="line">//valid signature , option</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$this</span>->checkSignature() && <span class="variable">$echoStr</span>){</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$echoStr</span>;</span><br><span class="line"><span class="built_in">exit</span>;</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line"><span class="variable">$this</span> -> responseMsg();</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">public <span class="keyword">function</span> <span class="function"><span class="title">responseMsg</span></span>() {</span><br><span class="line">//get post data, May be due to the different environments</span><br><span class="line">//<span class="variable">$postStr</span> = <span class="variable">$GLOBALS</span>[<span class="string">"HTTP_RAW_POST_DATA"</span>];</span><br><span class="line"><span class="variable">$postStr</span> = file_get_contents(<span class="string">"php://input"</span>);</span><br><span class="line">//extract post data</span><br><span class="line"><span class="keyword">if</span> (!empty(<span class="variable">$postStr</span>)){</span><br><span class="line"></span><br><span class="line"><span class="variable">$postObj</span> = simplexml_load_string(<span class="variable">$postStr</span>, <span class="string">'SimpleXMLElement'</span>, LIBXML_NOCDATA);</span><br><span class="line"><span class="keyword">if</span>( strtolower(<span class="variable">$postObj</span>->MsgType) == <span class="string">'text'</span> && trim(<span class="variable">$postObj</span>->Content)==<span class="string">'tuwen'</span> ){</span><br><span class="line"><span class="variable">$fromUsername</span> = <span class="variable">$postObj</span>->FromUserName;</span><br><span class="line"><span class="variable">$toUsername</span> = <span class="variable">$postObj</span>->ToUserName;</span><br><span class="line"><span class="variable">$arr</span> = array(</span><br><span class="line">array(</span><br><span class="line"><span class="string">'title'</span>=><span class="string">'hao123'</span>,</span><br><span class="line"><span class="string">'description'</span>=><span class="string">"hao123 is very cool"</span>,</span><br><span class="line"><span class="string">'picUrl'</span>=><span class="string">'https://www.baidu.com/img/bdlogo.png'</span>,</span><br><span class="line"><span class="string">'url'</span>=><span class="string">'http://www.hao123.com'</span>,</span><br><span class="line">),</span><br><span class="line">array(</span><br><span class="line"><span class="string">'title'</span>=><span class="string">'qq'</span>,</span><br><span class="line"><span class="string">'description'</span>=><span class="string">"qq is very cool"</span>,</span><br><span class="line"><span class="string">'picUrl'</span>=><span class="string">'http://www.imooc.com/static/img/common/logo.png'</span>,</span><br><span class="line"><span class="string">'url'</span>=><span class="string">'http://www.qq.com'</span>,</span><br><span class="line">),</span><br><span class="line">array(</span><br><span class="line"><span class="string">'title'</span>=><span class="string">'imooc'</span>,</span><br><span class="line"><span class="string">'description'</span>=><span class="string">"imooc is very cool"</span>,</span><br><span class="line"><span class="string">'picUrl'</span>=><span class="string">'http://www.imooc.com/static/img/common/logo.png'</span>,</span><br><span class="line"><span class="string">'url'</span>=><span class="string">'http://www.imooc.com'</span>,</span><br><span class="line">),</span><br><span class="line">);</span><br><span class="line"><span class="variable">$template</span> = <span class="string">"&lt;xml&gt;</span></span><br><span class="line"><span class="string">&lt;ToUserName&gt&lt;![CDATA[%s]]&gt&lt;/ToUserName&gt</span></span><br><span class="line"><span class="string">&lt;FromUserName&gt&lt;![CDATA[%s]]&gt&lt;/FromUserName&gt</span></span><br><span class="line"><span class="string">&lt;CreateTime&gt%s&lt;/CreateTime&gt</span></span><br><span class="line"><span class="string">&lt;MsgType&gt&lt;![CDATA[%s]]&gt&lt;/MsgType&gt</span></span><br><span class="line"><span class="string">&lt;ArticleCount&gt3&lt;/ArticleCount&gt</span></span><br><span class="line"><span class="string">&lt;Articles&gt"</span>;</span><br><span class="line">foreach(<span class="variable">$arr</span> as <span class="variable">$k</span>=><span class="variable">$v</span>){</span><br><span class="line"><span class="variable">$template</span> .=<span class="string">"&#60;item&gt;</span></span><br><span class="line"><span class="string">&lt;Title&gt;&lt;![CDATA["</span>.<span class="variable">$v</span>[<span class="string">'title'</span>].<span class="string">"]]&gt;&lt;/Title&gt;</span></span><br><span class="line"><span class="string">&lt;Description&gt;&lt;![CDATA["</span>.<span class="variable">$v</span>[<span class="string">'description'</span>].<span class="string">"]]&gt;&lt;/Description&gt;</span></span><br><span class="line"><span class="string">&lt;PicUrl&gt;&lt;![CDATA["</span>.<span class="variable">$v</span>[<span class="string">'picUrl'</span>].<span class="string">"]]&gt;&lt;/PicUrl&gt;</span></span><br><span class="line"><span class="string">&lt;Url&gt;&lt;![CDATA["</span>.<span class="variable">$v</span>[<span class="string">'url'</span>].<span class="string">"]]&gt;&lt;/Url&gt;</span></span><br><span class="line"><span class="string">&lt;/item&gt;"</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="variable">$template</span> .=<span class="string">"&lt;/Articles&gt;</span></span><br><span class="line"><span class="string">&lt;/xml&gt;"</span>;</span><br><span class="line"><span class="built_in">echo</span> sprintf(<span class="variable">$template</span>, <span class="variable">$fromUsername</span>, <span class="variable">$toUsername</span>, time(), <span class="string">'news'</span>);</span><br><span class="line"></span><br><span class="line">//注意：进行多图文发送时，子图文个数不能超过10个</span><br><span class="line">}<span class="keyword">else</span>{</span><br><span class="line"><span class="variable">$fromUsername</span> = <span class="variable">$postObj</span>->FromUserName;</span><br><span class="line"><span class="variable">$toUsername</span> = <span class="variable">$postObj</span>->ToUserName;</span><br><span class="line"><span class="variable">$keyword</span> = trim(<span class="variable">$postObj</span>->Content);</span><br><span class="line"><span class="variable">$time</span> = time();</span><br><span class="line"><span class="variable">$textTpl</span> = <span class="string">"&lt;xml&gt;</span></span><br><span class="line"><span class="string">&lt;ToUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/ToUserName&gt;</span></span><br><span class="line"><span class="string">&lt;FromUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/FromUserName&gt;</span></span><br><span class="line"><span class="string">&lt;CreateTime&gt;%s&lt;/CreateTime&gt;</span></span><br><span class="line"><span class="string">&lt;MsgType&gt;&lt;![CDATA[%s]]&gt;&lt;/MsgType&gt;</span></span><br><span class="line"><span class="string">&lt;Content&gt;&lt;![CDATA[%s]]&gt;&lt;/Content&gt;</span></span><br><span class="line"><span class="string">&lt;FuncFlag&gt;0&lt;/FuncFlag&gt;</span></span><br><span class="line"><span class="string">&lt;/xml&gt;"</span>; </span><br><span class="line"><span class="variable">$msgType</span> = <span class="string">"text"</span>;</span><br><span class="line">// 判断该数据包是否是订阅的事件推送</span><br><span class="line"><span class="keyword">if</span>( strtolower( <span class="variable">$postObj</span>->MsgType) == <span class="string">'event'</span>){</span><br><span class="line">// 如果是关注 subscribe 事件</span><br><span class="line"><span class="keyword">if</span>( strtolower( <span class="variable">$postObj</span>->Event == <span class="string">'subscribe'</span>)){</span><br><span class="line">// 回复用户消息</span><br><span class="line"><span class="variable">$contentStr</span> = <span class="string">"欢迎关注我们的微信公众号"</span>;</span><br><span class="line">}</span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">if</span>( strtolower( <span class="variable">$postObj</span>->MsgType) == <span class="string">'text'</span>){</span><br><span class="line">switch (<span class="variable">$keyword</span>) {</span><br><span class="line"><span class="keyword">case</span> 1:</span><br><span class="line"><span class="variable">$contentStr</span> = <span class="string">"您输入了数字1"</span>;</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> 2:</span><br><span class="line"><span class="variable">$contentStr</span> = <span class="string">"您输入了数字2"</span>;</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">'冰冰凉'</span>:</span><br><span class="line"><span class="variable">$contentStr</span> = <span class="string">"&lt;a href='https://bingbingliang.github.io'&gt;冰冰凉&lt;/a&gt;"</span>;</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line"></span><br><span class="line">default:</span><br><span class="line"><span class="variable">$contentStr</span> = <span class="string">"未匹配到您的输入"</span>;</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="variable">$resultStr</span> = sprintf(<span class="variable">$textTpl</span>, <span class="variable">$fromUsername</span>, <span class="variable">$toUsername</span>, <span class="variable">$time</span>, <span class="variable">$msgType</span>, <span class="variable">$contentStr</span>);</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$resultStr</span>;</span><br><span class="line">}</span><br><span class="line">}<span class="keyword">else</span> {</span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span>;</span><br><span class="line"><span class="built_in">exit</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">private <span class="keyword">function</span> <span class="function"><span class="title">checkSignature</span></span>() {</span><br><span class="line"><span class="variable">$signature</span> = <span class="variable">$_GET</span>[<span class="string">"signature"</span>];</span><br><span class="line"><span class="variable">$timestamp</span> = <span class="variable">$_GET</span>[<span class="string">"timestamp"</span>];</span><br><span class="line"><span class="variable">$nonce</span> = <span class="variable">$_GET</span>[<span class="string">"nonce"</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$token</span> = TOKEN;</span><br><span class="line"><span class="variable">$tmpArr</span> = array(<span class="variable">$token</span>, <span class="variable">$timestamp</span>, <span class="variable">$nonce</span>);</span><br><span class="line">sort(<span class="variable">$tmpArr</span>);</span><br><span class="line"><span class="variable">$tmpStr</span> = implode( <span class="variable">$tmpArr</span> );</span><br><span class="line"><span class="variable">$tmpStr</span> = sha1( <span class="variable">$tmpStr</span> );</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="variable">$tmpStr</span> == <span class="variable">$signature</span> ){</span><br><span class="line"><span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">}<span class="keyword">else</span>{</span><br><span class="line"><span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简介：&lt;br&gt;开发微信公众号之前需要先给“微信公众平台”与“自己的服务器”建立一个关系，本篇内容就是“自己的服务器”与“微信公众平台”对接的文件内容。&lt;/p&gt;
&lt;p&gt;由于“微信公众号-被动回复用户消息”不需要 appID 和 appsecret ，所以我把该功能也引进了这篇
      
    
    </summary>
    
      <category term="PHP" scheme="https://bingbingliang.github.io/categories/PHP/"/>
    
    
      <category term="PHP" scheme="https://bingbingliang.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>oAuth2.0 协议 — PHP第三方登录</title>
    <link href="https://bingbingliang.github.io//posts/20764040/"/>
    <id>https://bingbingliang.github.io//posts/20764040/</id>
    <published>2019-06-13T16:05:46.000Z</published>
    <updated>2019-06-21T18:12:36.881Z</updated>
    
    <content type="html"><![CDATA[<p>oAuth2.0 协议就是网站在不知道用户 第三方平台（比如：QQ、微博……）账号、密码的情况下，通过 oAuth2.0协议 让第三方平台授权给本网站的能力。<br>此过程中 网站不会知道用户的 QQ账号、QQ密码。所以对于用户而言，他的第三方账户是安全的。<br>之所以说网站不知道用户的 QQ账号和 QQ密码，是因为 用户在输入 QQ账号和 QQ密码的网站弹框页面。不是本网站的页面，而是第三方授权页。从url链接就可以看出来 <a href="https://graph.qq.com/oauth2.0/show……" target="_blank" rel="noopener">https://graph.qq.com/oauth2.0/show……</a> 里面有 oauth2.0 字样。</p><h2 id="1、什么是第三方登录？"><a href="#1、什么是第三方登录？" class="headerlink" title="1、什么是第三方登录？"></a>1、什么是第三方登录？</h2><ul><li>所谓的第三方登录就是利用用户在第三方平台上已有的账号快速完成自己应用的登录或注册功能。</li><li>而这里的第三方平台，一般是已经有大量用户的平台，如国内的新浪微博、QQ空间、微信、外国的Facebook、twitter等等。</li><li>第三方登录不是一个具体的接口，而是一种思想或者一套步骤。</li></ul><h2 id="2、为什么要使用第三方登录？"><a href="#2、为什么要使用第三方登录？" class="headerlink" title="2、为什么要使用第三方登录？"></a>2、为什么要使用第三方登录？</h2><ul><li>简单、方便、快捷、深受用户喜欢。</li><li>简化注册或登录流程。</li></ul><h2 id="3、第三方登录的优点？"><a href="#3、第三方登录的优点？" class="headerlink" title="3、第三方登录的优点？"></a>3、第三方登录的优点？</h2><ul><li>对网站而言无非是简化登陆过程，降低注册门槛，获取海量新用户。</li><li>对用户而言，注册简单，一键式的点击成为网站会员，深受用户喜欢。</li></ul><h2 id="4、第三方登录的缺点？"><a href="#4、第三方登录的缺点？" class="headerlink" title="4、第三方登录的缺点？"></a>4、第三方登录的缺点？</h2><ul><li>安全性不能保证。 可能造成个人信息泄露。</li><li>隐私性不能保证。</li><li>不能更详尽的统计用户信息，无法给用户发送本站消息。</li></ul><h2 id="5、第三方登录适用场景？"><a href="#5、第三方登录适用场景？" class="headerlink" title="5、第三方登录适用场景？"></a>5、第三方登录适用场景？</h2><ul><li>对于工具型、游戏型、内容型等应用，注重的是工具的使用、内容的提供，适合把第三方登录放在优先的位置，甚至只提供第三方登录就行，免去用户注册。</li><li>对于电商类应用，注重自己账号体系的建立、注重用户后续的营销，第三方登录只是作为补充，将第三方登录置于较弱的位置，为没有账号的用户提供快速登录。</li><li>对于支付类、金融类应用，强调安全性、强调隐私性，一般不提供第三方登录。如果这些类型应用提供第三方登录，让用户觉得不安全，感觉自己的信息会通过第三方授权泄露出去。</li></ul><h2 id="6、第三方登录实现流程。（QQ登录为例）"><a href="#6、第三方登录实现流程。（QQ登录为例）" class="headerlink" title="6、第三方登录实现流程。（QQ登录为例）"></a>6、第三方登录实现流程。（QQ登录为例）</h2><ul><li>第一步：用户点击网站第三方登录 - QQ登录，弹出 QQ登录授权页面。</li><li>第二步：用户输入 QQ账号和QQ密码点击提交授权。（默认登录成功，第三方QQ授权页返回 用户信息、以及code 参数，告诉网站您已经登录成功）。</li><li>第三步：为增加用户信息安全，code 存在的时间很短，所以还有一个隐藏步骤是用户不可见的。网站会通过该 code 参数在请求第三方，获取 Access Token。该 Access Token 是调用 QQ开放接口中的通关令牌，存在一定的有效时间。</li></ul><h2 id="7、如何看待第三方登录？"><a href="#7、如何看待第三方登录？" class="headerlink" title="7、如何看待第三方登录？"></a>7、如何看待第三方登录？</h2><ul><li>第一种：传统的注册的方式，注册门槛高，易在登录页面就流失用户。</li><li>可能很少app会用，没有留下用户的信息，无法跟踪用户的行为。</li><li>第三方注册后系统默认给用户分配一个ID，用户可见也不可见。</li><li>第三方注册后还要手动添加数据（给人一种欺骗注册的感觉，让用户讨厌）。</li></ul><h2 id="8、三个群体的思考"><a href="#8、三个群体的思考" class="headerlink" title="8、三个群体的思考"></a>8、三个群体的思考</h2><p>1）用户的角度</p><p>第三方登陆方便了用户日常的网络生活，身在一个离不开网络的时代，每天都面对着不同的登陆界面，能有一种简单的登陆方式显得很重要。第三方登陆方便快捷，且很多资料信息可以公用，并可以将自己在某个app的动态信息同步到各个sns平台。于是有些犯懒的用户可能会养成一种“一个账号走江湖”的 心里。</p><p>但话说回来，无论什么事只用一种方式处理肯定会在阴沟里翻船的，比如哪天你的微博号被封了，你的QQ号被盗了，株连下来的相关app也不能登录了，注册新账号的话，那么之前你在网络上记录的生活也都回归到零了，那个时候，你又该怎么办呢？</p><p>2）本地客户端角度</p><p>对本地应用而言无非是简化登录过程，降低注册门槛，获取海量新用户。 在争抢用户的竞争中，提高用户的转化率是决定能不能突出重围的重要因素。同样的事情都有两面性，我们利用第三方登陆的这种方式，在应程度上是依赖第三方的 一种行为，在知乎上看到一篇很有激情的文章，说的就是关于使用第三方登录都与app应用的限制，链接网址是<a href="http://www.zhihu.com/question/19618841；" target="_blank" rel="noopener">www.zhihu.com/question/19618841；</a> 虽然有些说的极端了点，但在某种程度上也是对app设计者或者投资人的一种警醒，而对于那种直接去掉本地注册的app，更应该好好思考一下自己app的未来发展，保重啊~~~再者就是用户本事对第三方登录的犹豫，就是关于隐私的暴漏，大家的潜意识下是不想在随便一个app上暴漏自己过多的信息的。</p><p>3）第三方角度</p><p>第三方账号貌似像个大老板一样，随便给你开个口就可以让你活的好点，把口一掐，估计你是活不太好了，而且可以很好的继续扩大它本身的用户 基数。我目前还没有想到这这种绑定对于这些大boss有什么坏处，在这场以用户数量定输赢的博弈当中，强大的第三方貌似永远是胜者。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;oAuth2.0 协议就是网站在不知道用户 第三方平台（比如：QQ、微博……）账号、密码的情况下，通过 oAuth2.0协议 让第三方平台授权给本网站的能力。&lt;br&gt;此过程中 网站不会知道用户的 QQ账号、QQ密码。所以对于用户而言，他的第三方账户是安全的。&lt;br&gt;之所以说
      
    
    </summary>
    
      <category term="PHP" scheme="https://bingbingliang.github.io/categories/PHP/"/>
    
    
      <category term="PHP" scheme="https://bingbingliang.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>递归方法</title>
    <link href="https://bingbingliang.github.io//posts/14182/"/>
    <id>https://bingbingliang.github.io//posts/14182/</id>
    <published>2019-01-04T16:00:00.000Z</published>
    <updated>2019-06-20T16:43:30.849Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">// 调用递归方法</span><br><span class="line">public <span class="keyword">function</span> <span class="function"><span class="title">sel</span></span>(){</span><br><span class="line"><span class="variable">$arr</span> = <span class="variable">$this</span>->Table(<span class="string">'region'</span>)->select();</span><br><span class="line"><span class="built_in">return</span> <span class="variable">$this</span>->level_sel(<span class="variable">$arr</span>,<span class="variable">$parent_id</span>=0,<span class="variable">$level</span>=0);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">// 递归</span><br><span class="line"><span class="keyword">function</span> level_sel(<span class="variable">$arr</span>,<span class="variable">$parent_id</span>=0,<span class="variable">$level</span>=0){</span><br><span class="line">// 定义一个静态数组</span><br><span class="line">static <span class="variable">$data</span> = array();</span><br><span class="line">foreach(<span class="variable">$arr</span> as <span class="variable">$key</span>=><span class="variable">$val</span>){</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$val</span>[<span class="string">'parent_id'</span>] == <span class="variable">$parent_id</span>){</span><br><span class="line"><span class="variable">$val</span>[<span class="string">'level'</span>] == <span class="variable">$level</span>;</span><br><span class="line"><span class="variable">$data</span>[] = <span class="variable">$val</span>;</span><br><span class="line"><span class="variable">$this</span>->level_sel(<span class="variable">$arr</span>,<span class="variable">$val</span>[<span class="string">'r_id'</span>],<span class="variable">$level</span>+1);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">return</span> <span class="variable">$data</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span
      
    
    </summary>
    
      <category term="PHP" scheme="https://bingbingliang.github.io/categories/PHP/"/>
    
    
      <category term="PHP" scheme="https://bingbingliang.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>PHPStorm 相关操作</title>
    <link href="https://bingbingliang.github.io//posts/13173/"/>
    <id>https://bingbingliang.github.io//posts/13173/</id>
    <published>2019-01-02T16:00:00.000Z</published>
    <updated>2019-06-20T16:42:55.212Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PHPStorm-设置-Ctrl-滚轮调整字体大小"><a href="#PHPStorm-设置-Ctrl-滚轮调整字体大小" class="headerlink" title="PHPStorm 设置 Ctrl + 滚轮调整字体大小"></a>PHPStorm 设置 Ctrl + 滚轮调整字体大小</h1><p>1.点击左上角的File，再点击setting；</p><p>2.Editor->General，选择Change font size (Zoom) with Ctrl+Mouse Wheel；</p><p>3.点击OK即可。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;PHPStorm-设置-Ctrl-滚轮调整字体大小&quot;&gt;&lt;a href=&quot;#PHPStorm-设置-Ctrl-滚轮调整字体大小&quot; class=&quot;headerlink&quot; title=&quot;PHPStorm 设置 Ctrl + 滚轮调整字体大小&quot;&gt;&lt;/a&gt;PHPStorm 
      
    
    </summary>
    
      <category term="PHP" scheme="https://bingbingliang.github.io/categories/PHP/"/>
    
    
      <category term="PHP" scheme="https://bingbingliang.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 数据库的常用命令</title>
    <link href="https://bingbingliang.github.io//posts/57951/"/>
    <id>https://bingbingliang.github.io//posts/57951/</id>
    <published>2018-12-31T16:00:00.000Z</published>
    <updated>2019-06-20T16:40:02.602Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何使用命令行把-sql-文件导入-MySql-数据库"><a href="#如何使用命令行把-sql-文件导入-MySql-数据库" class="headerlink" title="如何使用命令行把 sql 文件导入 MySql 数据库"></a>如何使用命令行把 sql 文件导入 MySql 数据库</h1><p>1.进入 MySql ：mysql -uroot -p；<br><span style="color:gray">（配置全局变量的情况下可直接进入，否则需要进入mysql的安装目录bin下进行进入）</span></p><p>2.使用需要导入到的数据库：use <库名></p><p>3.导入 sql 文件到当前数据库：source sql 文件路径</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;如何使用命令行把-sql-文件导入-MySql-数据库&quot;&gt;&lt;a href=&quot;#如何使用命令行把-sql-文件导入-MySql-数据库&quot; class=&quot;headerlink&quot; title=&quot;如何使用命令行把 sql 文件导入 MySql 数据库&quot;&gt;&lt;/a&gt;如何使用命
      
    
    </summary>
    
      <category term="MySql" scheme="https://bingbingliang.github.io/categories/MySql/"/>
    
    
      <category term="MySql" scheme="https://bingbingliang.github.io/tags/MySql/"/>
    
  </entry>
  
  <entry>
    <title>Laravel 数据库操作的三种方式</title>
    <link href="https://bingbingliang.github.io//posts/49682/"/>
    <id>https://bingbingliang.github.io//posts/49682/</id>
    <published>2017-12-31T16:00:00.000Z</published>
    <updated>2019-06-17T17:45:59.454Z</updated>
    
    <content type="html"><![CDATA[<p>Laravel提供了3种操作数据库方式：DB facade（原始方式）、查询构造器和Eloquent ORM。</p><h1 id="数据库操作之DB-facade"><a href="#数据库操作之DB-facade" class="headerlink" title="数据库操作之DB facade"></a>数据库操作之DB facade</h1><p>1.查询操作<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//返回一个二维数组</span><br><span class="line">DB::select(<span class="string">"select * from table"</span>);</span><br></pre></td></tr></tbody></table></figure><p></p><p>2.新增操作<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//新增成功则返回<span class="literal">true</span></span><br><span class="line">DB::insert(<span class="string">"insert into table(vip_ID,vip_name,vip_type,vip_fenshu) values(?,?,?,?)"</span>,[5,<span class="string">'小明'</span>,<span class="string">'出行'</span>,670]);</span><br></pre></td></tr></tbody></table></figure><p></p><p>3.更新操作<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//更新成功返回<span class="literal">true</span></span><br><span class="line">DB::update(<span class="string">'update vipinfo set vip_fenshu= ? where vip_ID= ? '</span>,[700,5]);</span><br></pre></td></tr></tbody></table></figure><p></p><p>4.删除操作<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 返回的是删除的行数。</span><br><span class="line">DB::delete(<span class="string">'delete from vipinfo where vip_ID= ?'</span>,[5]);</span><br></pre></td></tr></tbody></table></figure><p></p><h1 id="数据库操作之查询构造器"><a href="#数据库操作之查询构造器" class="headerlink" title="数据库操作之查询构造器"></a>数据库操作之查询构造器</h1><p>一、使用查询构造器实现增删改查<br>1.新增<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$bool</span>=DB::table(<span class="string">"vipinfo"</span>)->insert([<span class="string">'vip_ID'</span>=>6,<span class="string">'vip_name'</span>=><span class="string">'zls'</span>,<span class="string">'vip_type'</span>=><span class="string">"出行"</span>,<span class="string">'vip_fenshu'</span>=>800]);  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$bool</span>;  //返回bool值  </span><br><span class="line"> //如果想得到新增的id，则使用insertGetId方法  </span><br><span class="line">  <span class="variable">$id</span>=DB::table(<span class="string">"vipinfo"</span>)->insertGetId([<span class="string">'vip_ID'</span>=>5,<span class="string">'vip_name'</span>=><span class="string">'wyp'</span>,<span class="string">'vip_type'</span>=><span class="string">"出行"</span>,<span class="string">'vip_fenshu'</span>=>800]);  </span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$id</span>;  </span><br><span class="line"> //插入多条数据  </span><br><span class="line"> <span class="variable">$bool</span>=DB::table(<span class="string">"vipinfo"</span>)->insert([  </span><br><span class="line">        [<span class="string">'vip_ID'</span>=>5,<span class="string">'vip_name'</span>=><span class="string">'wyp'</span>,<span class="string">'vip_type'</span>=><span class="string">"出行"</span>,<span class="string">'vip_fenshu'</span>=>800],  </span><br><span class="line">        [<span class="string">'vip_ID'</span>=>6,<span class="string">'vip_name'</span>=><span class="string">'zls'</span>,<span class="string">'vip_type'</span>=><span class="string">"出行"</span>,<span class="string">'vip_fenshu'</span>=>800],  </span><br><span class="line">]);  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$bool</span>;  //返回bool值</span><br></pre></td></tr></tbody></table></figure><p></p><p>2.修改<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$bool</span>=DB::table(<span class="string">"vipinfo"</span>)-><span class="built_in">where</span>(<span class="string">'vip_ID'</span>,6)->update([<span class="string">'vip_fenshu'</span>=>500]);  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$bool</span>;  </span><br><span class="line">//自增  </span><br><span class="line"><span class="variable">$bool</span>=DB::table(<span class="string">"vipinfo"</span>)-><span class="built_in">where</span>(<span class="string">'vip_ID'</span>,6)->increment(<span class="string">"vip_fenshu"</span>);//自增1  </span><br><span class="line"><span class="variable">$bool</span>=DB::table(<span class="string">"vipinfo"</span>)-><span class="built_in">where</span>(<span class="string">'vip_ID'</span>,6)->increment(<span class="string">"vip_fenshu"</span>,3);//自增3  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$bool</span>;  </span><br><span class="line">//自减  </span><br><span class="line"><span class="variable">$bool</span>=DB::table(<span class="string">"vipinfo"</span>)-><span class="built_in">where</span>(<span class="string">'vip_ID'</span>,6)->decrement(<span class="string">"vip_fenshu"</span>);//自1  </span><br><span class="line"><span class="variable">$bool</span>=DB::table(<span class="string">"vipinfo"</span>)-><span class="built_in">where</span>(<span class="string">'vip_ID'</span>,6)->decrement(<span class="string">"vip_fenshu"</span>,3);//自增3  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$bool</span>;  </span><br><span class="line">//自增时再修改其他字段  </span><br><span class="line"><span class="variable">$bool</span>=DB::table(<span class="string">"vipinfo"</span>)-><span class="built_in">where</span>(<span class="string">'vip_ID'</span>,6)->increment(<span class="string">"vip_fenshu"</span>,3,[<span class="string">'vip_name'</span>=><span class="string">'dbdibi'</span>]);//自增3</span><br><span class="line">//两个字段同时自增 or 自减 increment</span><br><span class="line">// 第一种写法</span><br><span class="line"><span class="variable">$results</span> = DB::table(<span class="string">'articles'</span>)</span><br><span class="line">    -><span class="built_in">where</span>(<span class="string">'id'</span>, <span class="variable">$params</span>[<span class="string">'id'</span>])</span><br><span class="line">    ->increment(<span class="string">'vote'</span>, 1, array(<span class="string">'num'</span> => DB::raw(<span class="string">'`num` + 1'</span>)));</span><br><span class="line">// 第二种写法</span><br><span class="line"><span class="variable">$results</span> = DB::table(<span class="string">'articles'</span>)-><span class="built_in">where</span>(<span class="string">'id'</span>, <span class="variable">$params</span>[<span class="string">'id'</span>])</span><br><span class="line">->update(array(</span><br><span class="line">   <span class="string">'vote'</span> => DB::raw(<span class="string">'vote + 1'</span>),</span><br><span class="line">   <span class="string">'num'</span>  => DB::raw(<span class="string">'num + 1'</span>),</span><br><span class="line">));</span><br></pre></td></tr></tbody></table></figure><p></p><p>3.删除<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$num</span>=DB::table(<span class="string">"vipinfo"</span>)-><span class="built_in">where</span>(<span class="string">'vip_ID'</span>,6)->delete();//删除1条  </span><br><span class="line"><span class="variable">$num</span>=DB::table(<span class="string">"vipinfo"</span>)-><span class="built_in">where</span>(<span class="string">'vip_ID'</span>,<span class="string">'>'</span>,4)->delete();//删除多条  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$num</span>;  //删除的行数  </span><br><span class="line"><span class="variable">$num</span>=DB::table(<span class="string">"vipinfo"</span>)->truncate();//删除整表，不能恢复，谨慎使用</span><br></pre></td></tr></tbody></table></figure><p></p><p>4.查询<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">//get()返回多条数据  </span><br><span class="line"><span class="variable">$student</span>=DB::table(<span class="string">"vipinfo"</span>)->get();  </span><br><span class="line"> var_dump(<span class="variable">$student</span>);    </span><br><span class="line">//first()返回1条数据  </span><br><span class="line"><span class="variable">$student</span>=DB::table(<span class="string">"vipinfo"</span>)->first();  //结果集第一条记录  </span><br><span class="line"><span class="variable">$student</span>=DB::table(<span class="string">"vipinfo"</span>)->orderBy(<span class="string">'vip_ID'</span>,<span class="string">'desc'</span>)->first();//按vip_ID倒序排序  </span><br><span class="line">var_dump(<span class="variable">$student</span>);    </span><br><span class="line">//<span class="built_in">where</span>()条件查询  </span><br><span class="line"><span class="variable">$student</span>=DB::table(<span class="string">"vipinfo"</span>)-><span class="built_in">where</span>(<span class="string">'vip_ID'</span>,<span class="string">'>='</span>,2)->get(); //一个条件     </span><br><span class="line"><span class="variable">$student</span>=DB::table(<span class="string">"vipinfo"</span>)->whereRaw(<span class="string">'vip_ID> ? and vip_fenshu >= ?'</span>,[2,300])->get(); //多个条件  </span><br><span class="line">dd(<span class="variable">$student</span>);  </span><br><span class="line">//pluck()指定字段,后面不加get  </span><br><span class="line"><span class="variable">$student</span>=DB::table(<span class="string">"vipinfo"</span>)->pluck(<span class="string">'vip_name'</span>);  </span><br><span class="line">dd(<span class="variable">$student</span>);  </span><br><span class="line">//lists()指定字段，可以指定某个字段作为下标  </span><br><span class="line"><span class="variable">$student</span>=DB::table(<span class="string">"vipinfo"</span>)->lists(<span class="string">'vip_name'</span>,<span class="string">'vip_ID'</span>);   //指定vip_ID为下标  </span><br><span class="line">dd(<span class="variable">$student</span>);  </span><br><span class="line"><span class="variable">$student</span>=DB::table(<span class="string">"vipinfo"</span>)->lists(<span class="string">'vip_name'</span>);   //不指定下标，默认下标从0开始  </span><br><span class="line">//select()指定某个字段  </span><br><span class="line"><span class="variable">$student</span>=DB::table(<span class="string">"vipinfo"</span>)->select(<span class="string">'vip_name'</span>,<span class="string">'vip_ID'</span>)->get();  </span><br><span class="line">dd(<span class="variable">$student</span>);  </span><br><span class="line">//chunk()每次查n条  </span><br><span class="line"><span class="variable">$student</span>=DB::table(<span class="string">"vipinfo"</span>)->chunk(2,<span class="keyword">function</span>(<span class="variable">$students</span>){  //每次查2条  </span><br><span class="line">    var_dump(<span class="variable">$students</span>);  </span><br><span class="line">    <span class="keyword">if</span>(.......) <span class="built_in">return</span> <span class="literal">false</span>;  //在满足某个条件下使用<span class="built_in">return</span>就不会再往下查了  </span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure><p></p><p>二、使用聚合函数<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//count()统计记录条数  </span><br><span class="line"><span class="variable">$nums</span>=DB::table(<span class="string">"vipinfo"</span>)->count();  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$nums</span>;  </span><br><span class="line">//max()某个字段的最大值,同理min是最小值  </span><br><span class="line"><span class="variable">$max</span>=DB::table(<span class="string">"vipinfo"</span>)->max(<span class="string">"vip_fenshu"</span>);  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$max</span>;  </span><br><span class="line">//avg()某个字段的平均值  </span><br><span class="line"><span class="variable">$avg</span>=DB::table(<span class="string">"vipinfo"</span>)->avg(<span class="string">"vip_fenshu"</span>);  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$avg</span>;  </span><br><span class="line">//sum()某个字段的和  </span><br><span class="line"><span class="variable">$sum</span>=DB::table(<span class="string">"vipinfo"</span>)->sum(<span class="string">"vip_fenshu"</span>);  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$sum</span>;</span><br></pre></td></tr></tbody></table></figure><p></p><h1 id="数据库操作之-Eloquent-ORM"><a href="#数据库操作之-Eloquent-ORM" class="headerlink" title="数据库操作之 - Eloquent ORM"></a>数据库操作之 - Eloquent ORM</h1><p>一、简介 模型的建立及查询数据<br>简介：laravel所自带的Eloquent ORM 是一个ActiveRecord实现，用于数据库操作。每个数据表都有一个与之对应的模型，用于数据表交互。</p><p>建立模型，在app目录下建立一个Student模型，即Student.php，不需要带任何后缀。<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><?php </span><br><span class="line">namespace App;  </span><br><span class="line">use Illuminate\Database\Eloquent\Model;  </span><br><span class="line">class Student extends Model{  </span><br><span class="line">    //指定表名  </span><br><span class="line">    protected <span class="variable">$table</span>= <span class="string">'vipinfo'</span>;  </span><br><span class="line">    //指定主键  </span><br><span class="line">    protected <span class="variable">$primaryKey</span>= <span class="string">'vip_ID'</span>;  </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>在Student控制器里增加一个test3方法，配置路由<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'test3'</span>,[<span class="string">'uses'</span>=><span class="string">'StudentController@test3'</span>]);</span><br></pre></td></tr></tbody></table></figure><p></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public <span class="keyword">function</span> <span class="function"><span class="title">test3</span></span>(){  </span><br><span class="line">    // all()方法查询所有数据  </span><br><span class="line">    <span class="variable">$studnets</span>=Student::all();  </span><br><span class="line">    dd(<span class="variable">$studnets</span>);  </span><br><span class="line">    //find()查询一条，依据主键查询。findOrFail()查找不存在的记录时会抛出异常  </span><br><span class="line">    <span class="variable">$student</span>=Student::find(5);  //主键为5的记录  </span><br><span class="line">    var_dump(<span class="variable">$student</span>[<span class="string">'attributes'</span>]);  </span><br><span class="line">    //查询构造器的使用,省略了指定表名  </span><br><span class="line">    <span class="variable">$student</span>=Student::get();    </span><br><span class="line">    var_dump(<span class="variable">$student</span>);  </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>二、新增数据、自定义时间戳、批量赋值<br>1.新增数据<br>（1）使用save方法新增<br>laravel会默认维护<strong><em>created_at</em></strong>,<strong><em>updated_at</em></strong> 两个字段，这两个字段都是存储时间戳，整型11位的，因此使用时需要在数据库添加这两个字段。<br>如果不需要这个功能，只需要在模型里加一个属性：<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public <span class="variable">$timestamps</span>=<span class="literal">false</span>;</span><br></pre></td></tr></tbody></table></figure><p></p><p>以及一个方法，可以将当前时间戳存到数据库<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">protected <span class="keyword">function</span> <span class="function"><span class="title">getDateFormat</span></span>(){  </span><br><span class="line">    <span class="built_in">return</span> time();  </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>这样就不需要那两个字段了。<br>控制器里写：<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$student</span>=new Student();  </span><br><span class="line">//设定数据 </span><br><span class="line"><span class="variable">$student</span>->vip_name=<span class="string">'xiaoming'</span>;  </span><br><span class="line"><span class="variable">$student</span>->vip_type=<span class="string">'出行'</span>;  </span><br><span class="line"><span class="variable">$student</span>->vip_fenshu=900;  </span><br><span class="line"><span class="variable">$bool</span>=<span class="variable">$student</span>->save();  //保存  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$bool</span>;</span><br></pre></td></tr></tbody></table></figure><p></p><p>从数据库里取得某条记录的时间戳时，默认取得的是按日期格式化好的时间戳，如果想取得原本的时间戳，则在模型里增加asDateTime方法。<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">protected <span class="keyword">function</span> asDateTime(<span class="variable">$val</span>){  </span><br><span class="line">   <span class="built_in">return</span> <span class="variable">$val</span>;  </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>（2）使用create方法新增时，需要在模型里增加：<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">protected <span class="variable">$fillable</span>=[<span class="string">'vip_name'</span>,<span class="string">'vip_fenshu'</span>,<span class="string">'vip_type'</span>];   //允许批量赋值的字段</span><br></pre></td></tr></tbody></table></figure><p></p><p>控制器里写：<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Student::create([<span class="string">'vip_name'</span>=><span class="string">'mmm'</span>,<span class="string">'vip_fenshu'</span>=>999,<span class="string">'vip_type'</span>=><span class="string">'出行'</span>]);</span><br></pre></td></tr></tbody></table></figure><p></p><p>这样即可新增成功！<br>（3）firstOrCreate()以属性查找记录，若没有则新增<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$student</span>=Student::firstOrCreate([<span class="string">'vip_name'</span>=><span class="string">'mmm'</span>]);  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$student</span>;</span><br></pre></td></tr></tbody></table></figure><p></p><p>（4）firstOrNew()以属性查找记录，若没有则会创建新的实例。若需要保存，则自己调用save方法()<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$student</span>=Student::firstOrNew([<span class="string">'vip_name'</span>=><span class="string">'mmm'</span>]);  </span><br><span class="line"><span class="variable">$student</span>->save();  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$student</span>;</span><br></pre></td></tr></tbody></table></figure><p></p><p>2.修改数据<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//通过模型更新数据  <span class="variable">$student</span>=Student::find(2);  </span><br><span class="line"><span class="variable">$student</span>->vip_fenshu=10000;  </span><br><span class="line"><span class="variable">$student</span>->save(); //返回bool值  </span><br><span class="line">//通过查询构造器更新  </span><br><span class="line"><span class="variable">$num</span>=Student::<span class="built_in">where</span>(<span class="string">'vip_ID'</span>,<span class="string">'>'</span>,2)->update([<span class="string">'vip_fenshu'</span>=>2000]);  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$num</span>;  //返回更新的行数</span><br></pre></td></tr></tbody></table></figure><p></p><p>3.删除数据<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//(1)通过模型删除数据  </span><br><span class="line"><span class="variable">$student</span>=Student::find(11);  </span><br><span class="line"><span class="variable">$student</span>->delete(); //返回bool值  </span><br><span class="line">//(2)通过主键删除   </span><br><span class="line"><span class="variable">$num</span>=Student::destroy(10); //删除主键为10的一条记录   </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$num</span>; //返回删除的行数   </span><br><span class="line"><span class="variable">$num</span>=Student::destroy(10,5); //删除多条  或者<span class="variable">$num</span>=Student::destroy([10,5]);   </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$num</span>; //返回删除的行数</span><br></pre></td></tr></tbody></table></figure><p></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Laravel提供了3种操作数据库方式：DB facade（原始方式）、查询构造器和Eloquent ORM。&lt;/p&gt;
&lt;h1 id=&quot;数据库操作之DB-facade&quot;&gt;&lt;a href=&quot;#数据库操作之DB-facade&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
      <category term="PHP" scheme="https://bingbingliang.github.io/categories/PHP/"/>
    
    
      <category term="PHP" scheme="https://bingbingliang.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>markdown 常用转义字符</title>
    <link href="https://bingbingliang.github.io//posts/ad603812/"/>
    <id>https://bingbingliang.github.io//posts/ad603812/</id>
    <published>2016-08-11T16:00:00.000Z</published>
    <updated>2019-06-20T16:38:15.417Z</updated>
    
    <content type="html"><![CDATA[<p>注意：<b>转义字符</b>中的 <b>&</b> 与 <b>字母</b> 中间没有空格，<span style="color:red">这里是有空格的</span> 是为了防止转义。    ⊙﹏⊙‖∣° 真尴尬～～ </p><table><thead><tr><th>显示结果</th><th style="text-align:center">描述</th><th style="text-align:right">转义字符</th></tr></thead><tbody><tr><td> </td><td style="text-align:center">空格</td><td style="text-align:right">& nbsp;</td></tr><tr><td><</td><td style="text-align:center">小于号</td><td style="text-align:right">& lt;</td></tr><tr><td>></td><td style="text-align:center">大于号</td><td style="text-align:right">& gt;</td></tr><tr><td>&</td><td style="text-align:center">和号</td><td style="text-align:right">& amp;</td></tr><tr><td>"</td><td style="text-align:center">双引号</td><td style="text-align:right">& quot;</td></tr><tr><td>'</td><td style="text-align:center">单引号</td><td style="text-align:right">& apos;(IE不支持)</td></tr></tbody></table><table style="text-align:center;display: none"><tbody><tr><td>显示结果</td><td>描述</td><td>实体名称</td><td>实体编号</td></tr><tr><td> </td><td>空格</td><td>& nbsp;</td><td>& #160;</td></tr><tr><td><</td><td>小于号</td><td>& lt;</td><td>& #60;</td></tr><tr><td>></td><td>大于号</td><td>& gt;</td><td>& #62;</td></tr><tr><td>&</td><td>和号</td><td>& amp;</td><td>& #38;</td></tr><tr><td>"</td><td>双引号</td><td>& quot;</td><td>& #34;</td></tr><tr><td>'</td><td>单引号</td><td>& apos;(IE不支持)</td><td>& #39;</td></tr></tbody></table><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;注意：&lt;b&gt;转义字符&lt;/b&gt;中的 &lt;b&gt;&amp;&lt;/b&gt; 与 &lt;b&gt;字母&lt;/b&gt; 中间没有空格，&lt;span style=&quot;color:red&quot;&gt;这里是有空格的&lt;/span&gt; 是为了防止转义。    ⊙﹏⊙‖∣° 真尴尬～～ &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;t
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>hexo 常用命令</title>
    <link href="https://bingbingliang.github.io//posts/16107/"/>
    <id>https://bingbingliang.github.io//posts/16107/</id>
    <published>2016-08-10T16:00:00.000Z</published>
    <updated>2019-06-21T17:08:06.731Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="创建一个新帖子"><a href="#创建一个新帖子" class="headerlink" title="创建一个新帖子"></a>创建一个新帖子</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="运行服务器"><a href="#运行服务器" class="headerlink" title="运行服务器"></a>运行服务器</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="部署到远程站点"><a href="#部署到远程站点" class="headerlink" title="部署到远程站点"></a>部署到远程站点</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><h3 id="清理缓存"><a href="#清理缓存" class="headerlink" title="清理缓存"></a>清理缓存</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></tbody></table></figure><h2 id="总结常用命令"><a href="#总结常用命令" class="headerlink" title="总结常用命令"></a>总结常用命令</h2><h3 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] <span class="string">"title"</span></span><br></pre></td></tr></tbody></table></figure><p>你可以在命令中指定文章的布局（layout），默认为 post，可以通过修改 _config.yml 中的 default_layout 参数来指定默认布局。</p><h3 id="布局（Layout）"><a href="#布局（Layout）" class="headerlink" title="布局（Layout）"></a>布局（Layout）</h3><p>Hexo 有三种默认布局：post、page 和 draft，它们分别对应不同的路径，而您自定义的其他布局和 post 相同，都将储存到 source/_posts 文件夹。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">布局    路径</span><br><span class="line">post<span class="built_in">source</span>/_posts</span><br><span class="line">page<span class="built_in">source</span></span><br><span class="line">draft<span class="built_in">source</span>/_drafts</span><br></pre></td></tr></tbody></table></figure><p>hexo默认你的文件为post 然后你就可以运行 hexo server 来本地运行实时查看你写的文章，draft 为你的草稿文件夹，在创建文章的时候，只要指定文章的模板是draft，就可以将文章创建到source/_drafts/目录下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new draft Test</span><br></pre></td></tr></tbody></table></figure><p>这样就会将Test这篇文章作为草稿放到_drafts目录下了，draft模板是提前定义好的，在./scaffolds目录中。放在_drafts目录中的草稿，使用hexo g命令生成静态文件的时候，是不会将草稿也生成的。</p><p>如果想要查看草稿的效果，可以在启动本地服务的时候增加一个参数：hexo s –draft ，或者在 _config.yml文件中进行配置：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">render_drafts: <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><p>这样每次启动本地服务的时候，都会渲染编写的草稿。</p><p>编写好草稿后，可以使用以下命令，将草稿发布到_posts目录中：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo publish [layout] <span class="string">"title"</span></span><br></pre></td></tr></tbody></table></figure><p>例如：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo publish [post] Test</span><br></pre></td></tr></tbody></table></figure><p>post模板也是在./scaffolds目录中定义好的，发布命令执行后，_drafts目录中的草稿也就被移除掉了。</p><p>注意：<br>hexo publish命令默认使用post模板。</p><p>通过对上面layout 情况为 post和 draft的阐释，大家应该会对layout大概会有个了解了。那么layout为page的时候到底会发生什么呢？</p><p>我们尝试一下下面这个命令</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page “about”</span><br></pre></td></tr></tbody></table></figure><p>这个时候你打开source文件夹你会发现一个about的文件夹，里面会有一个index.md的文件。</p><p>编辑index.md文件，像之前post和draft的情况一样，我们在其中输入一些测试的内容，然后依次执行hexo g，运行hexo s。</p><p>打开4000端口之后，你会发现你依然看不到你刚才编辑的index.md的内容。</p><p>那么这部分的内容到底在哪里呢？如何才能看到呢？我们将url增加‘/about’的内容，也就是说把url改为：‘<a href="http://localhost:4000/about’" target="_blank" rel="noopener">http://localhost:4000/about’</a> 然后回车。这个时候你就会发现你刚才编辑的index.md的内容就会出现在这里。</p><p>其实，在你执行hexo g命令的时候，已经将index.md文件的内容生成在了public文件夹下面，你去public文件夹中寻找，会发现一个about文件夹，这个about文件夹下有一个index.html文件。</p><p>一般情况下，如果一个page下面没有输入具体的文件名的话，就会打开这个文件夹下的index.html文件。那么也就是是说，这个时候你去source/about文件夹下再去新建一个myPageIntroduction.md的文件，编辑完之后执行hexo g和hexo s,然后在地址栏输入url的内容为：’<a href="http://localhost:4000/about/myPageIntroduction.html’" target="_blank" rel="noopener">http://localhost:4000/about/myPageIntroduction.html’</a> 就会看到你刚才编辑的myPageIntroduction.md的内容。</p><p>这就是layout 为 page的时候的作用。其实就是相当于生成一个新的路径，也就是我们说的url的path，或者也可以称作路由。通过这种方式，我们可以把我们的博客再进行细分各个内容版块，更有条理的组织我们的博客。</p><p>关于layout为page的情况，官网似乎没有详细说明。所以上述关于page的内容是我自己的一个总结，这个似乎不能完全解释page的作用，但是仅仅从组织博客内容的版块来看，是可以应用和解释的。</p><p></p><hr>本文部分内容参考链接：<br><a href="https://blog.csdn.net/abc_soul/article/details/83147583" target="_blank" rel="noopener">https://blog.csdn.net/abc_soul/article/details/83147583</a><p></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
