<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>bingbingliang</title>
  <icon>https://www.gravatar.com/avatar/ab04916d7ac84ac21f8313db78f7f1d7</icon>
  <subtitle>bingbingliang&#39;notes</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://bingbingliang.github.io/"/>
  <updated>2019-06-20T17:49:25.246Z</updated>
  <id>https://bingbingliang.github.io/</id>
  
  <author>
    <name>冰冰凉</name>
    <email>93669448@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>面试题</title>
    <link href="https://bingbingliang.github.io//posts/d87f7e0c/"/>
    <id>https://bingbingliang.github.io//posts/d87f7e0c/</id>
    <published>2099-12-11T16:00:00.000Z</published>
    <updated>2019-06-20T17:49:25.246Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、表单中get与post提交方法的区别？"><a href="#1、表单中get与post提交方法的区别？" class="headerlink" title="1、表单中get与post提交方法的区别？"></a>1、表单中get与post提交方法的区别？</h3><p>1）get 一般情况下是从服务器上获取数据，post 一般情况下是向服务器传送数据。<br>2）get 传送的数据量较小，不能大于 2KB。post 传送的数据量较大，在php.ini中默认2m，post_max_size = 8M;upload_max_filesize = 2M;<br>3）get 安全性非常低， post 安全性较高。但是get执行效率却比 Post 方法好。<br>Get   在 URL 中可以看到参数。post 是通过 HTTP post 机制，将表单内各个字段与其内容放置在 HTML HEADER 内一起传送到 ACTION 属性所指的 URL 地址。用户看不到这个过程。<br>4）post回退需要重新提交数据，数据类型，get只能为ASCII，<br>Get 可以被缓存 post不可以，</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1、表单中get与post提交方法的区别？&quot;&gt;&lt;a href=&quot;#1、表单中get与post提交方法的区别？&quot; class=&quot;headerlink&quot; title=&quot;1、表单中get与post提交方法的区别？&quot;&gt;&lt;/a&gt;1、表单中get与post提交方法的区别？&lt;/
      
    
    </summary>
    
      <category term="PHP" scheme="https://bingbingliang.github.io/categories/PHP/"/>
    
    
      <category term="PHP" scheme="https://bingbingliang.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>人生规划</title>
    <link href="https://bingbingliang.github.io//posts/e0f29a96/"/>
    <id>https://bingbingliang.github.io//posts/e0f29a96/</id>
    <published>2098-12-31T16:00:00.000Z</published>
    <updated>2019-06-11T16:38:50.089Z</updated>
    
    <content type="html"><![CDATA[<p>……</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;……&lt;/p&gt;
&lt;script&gt;
        document.querySelectorAll(&#39;.github-emoji&#39;)
          .forEach(el =&gt; {
            if (!el.dataset.src) { return; 
      
    
    </summary>
    
      <category term="SELF" scheme="https://bingbingliang.github.io/categories/SELF/"/>
    
    
      <category term="SELF" scheme="https://bingbingliang.github.io/tags/SELF/"/>
    
  </entry>
  
  <entry>
    <title>PHP上传大文件 - 配置upload_max_filesize和post_max_size</title>
    <link href="https://bingbingliang.github.io//posts/ac09b59e/"/>
    <id>https://bingbingliang.github.io//posts/ac09b59e/</id>
    <published>2019-06-19T16:34:54.000Z</published>
    <updated>2019-06-20T17:49:19.751Z</updated>
    
    <content type="html"><![CDATA[<p>简介：<br>PHP上传大文件所涉及到的 php.ini 配置详解。</p><h3 id="upload-max-filesize-2M"><a href="#upload-max-filesize-2M" class="headerlink" title="upload_max_filesize = 2M"></a>upload_max_filesize = 2M</h3><p>该配置是指文件上传大小默认是 2M ，如果超过则会失败。必须更改upload_max_filesize的值，例如：upload_max_filesize = 20M。</p><h3 id="post-max-size-8M"><a href="#post-max-size-8M" class="headerlink" title="post_max_size = 8M"></a>post_max_size = 8M</h3><p>该配置是指 POST 的数据最大字节长度是8M。索性将这个也改为20M，让它与 upload_max_filesize 相等即可。</p><h3 id="max-execution-time-30"><a href="#max-execution-time-30" class="headerlink" title="max_execution_time = 30"></a>max_execution_time = 30</h3><p>该配置是指每个脚本运行的最长时间，单位：秒。在传大文件的时候，必然传输时间变长，当时间超过30秒时，会报脚本执行超过30秒的错误。所以需要适当调高一点，比如 max_execution_time=60。</p><h3 id="max-input-time-60"><a href="#max-input-time-60" class="headerlink" title="max_input_time = 60"></a>max_input_time = 60</h3><p>该配置是指每个脚本可以消耗的时间，单位：秒。也需要适当调高一点，比如 max_input_time=120。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简介：&lt;br&gt;PHP上传大文件所涉及到的 php.ini 配置详解。&lt;/p&gt;
&lt;h3 id=&quot;upload-max-filesize-2M&quot;&gt;&lt;a href=&quot;#upload-max-filesize-2M&quot; class=&quot;headerlink&quot; title=&quot;upload
      
    
    </summary>
    
      <category term="PHP" scheme="https://bingbingliang.github.io/categories/PHP/"/>
    
    
      <category term="PHP" scheme="https://bingbingliang.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>微信公众号 - 获取所有关注者的信息</title>
    <link href="https://bingbingliang.github.io//posts/8aac5384/"/>
    <id>https://bingbingliang.github.io//posts/8aac5384/</id>
    <published>2019-06-18T16:34:54.000Z</published>
    <updated>2019-06-19T14:58:29.779Z</updated>
    
    <content type="html"><![CDATA[<p>简介：<br>使用微信公众号接口一键获取全部关注用户的信息。（openid,nickname,city,country,groupid,targetlist）</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    //Get all user infors method with wechat PHP API</span><br><span class="line">    set_time_limit(0);</span><br><span class="line">    <span class="variable">$count</span> = 0;</span><br><span class="line"></span><br><span class="line">    //appid of wechat</span><br><span class="line">    <span class="variable">$appid</span> = <span class="string">'您的APPID'</span>;</span><br><span class="line">    //appsecret of wechat</span><br><span class="line">    <span class="variable">$appsecret</span> = <span class="string">'您的appsecret'</span>;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    //@description: convert the unicode to Chinese characters</span><br><span class="line">    //@para:target string</span><br><span class="line">    //@<span class="built_in">return</span>:handled string</span><br><span class="line">    <span class="keyword">function</span> decodeUnicode(<span class="variable">$str</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">return</span> preg_replace_callback(<span class="string">'/\\\\u([0-9a-f]{4})/i'</span>,</span><br><span class="line">            create_function(</span><br><span class="line">                <span class="string">'$matches'</span>,</span><br><span class="line">                <span class="string">'return mb_convert_encoding(pack("H*", $matches[1]), "UTF-8", "UCS-2BE");'</span></span><br><span class="line">            ),<span class="variable">$str</span>);</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    //@description: <span class="keyword">if</span> the access_token is invaild, retrive the access_token and assign to global access_token</span><br><span class="line">    <span class="keyword">function</span> isErr(<span class="variable">$data</span>){</span><br><span class="line">        <span class="keyword">if</span>(array_key_exists(<span class="string">'errcode'</span>,<span class="variable">$data</span>)){</span><br><span class="line">            //the <span class="built_in">limit</span> <span class="built_in">times</span> to retrive access_token(<span class="keyword">for</span> there is a upper <span class="built_in">limit</span> 2000 one day)</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$GLOBALS</span>[<span class="string">'ERRCount'</span>] > <span class="variable">$GLOBALS</span>[<span class="string">'UpperLimit'</span>]){</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$data</span>[<span class="string">'errcode'</span>] == 40001){</span><br><span class="line">                <span class="variable">$GLOBALS</span>[<span class="string">'ERRCount'</span>] = <span class="variable">$GLOBALS</span>[<span class="string">'ERRCount'</span>] + 1;</span><br><span class="line">                <span class="variable">$GLOBALS</span>[<span class="string">'access_token'</span>] = getaccess_token(<span class="variable">$appid</span>,<span class="variable">$appsecret</span>);</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span>{</span><br><span class="line">                //other error but not access_token invaild</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">      //@description:get the access_token</span><br><span class="line">     <span class="keyword">function</span> getaccess_token(<span class="variable">$appid</span>,<span class="variable">$appsecret</span>){</span><br><span class="line">        //the access_token request url</span><br><span class="line">        <span class="variable">$url</span> = <span class="string">"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid={<span class="variable">$appid</span>}&secret={<span class="variable">$appsecret</span>}"</span>;</span><br><span class="line">        <span class="variable">$ch</span> = curl_init();</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_URL,<span class="variable">$url</span>);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER,1);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYPEER,0);</span><br><span class="line">        <span class="variable">$data</span> = curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">        curl_close(<span class="variable">$ch</span>);</span><br><span class="line">        //convert json to array</span><br><span class="line">        <span class="variable">$data</span> = json_decode(<span class="variable">$data</span>,<span class="literal">true</span>);</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$data</span>[<span class="string">'access_token'</span>];</span><br><span class="line">     }</span><br><span class="line">    //@description: post method of get 100 user infors(<span class="built_in">limit</span>:100 once)</span><br><span class="line">    //@para:the first is access_token,the second is the post data <span class="built_in">which</span> is a json string(format see wechat API website)</span><br><span class="line">    //@<span class="built_in">return</span>: the array of user infors</span><br><span class="line">    <span class="keyword">function</span> post(<span class="variable">$access_token</span>, <span class="variable">$post_data</span> = <span class="string">''</span>){</span><br><span class="line">        <span class="variable">$url</span> = <span class="string">"https://api.weixin.qq.com/cgi-bin/user/info/batchget?access_token={<span class="variable">$access_token</span>}"</span>;</span><br><span class="line">        <span class="variable">$ch</span> = curl_init();</span><br><span class="line">        curl_setopt (<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">        curl_setopt (<span class="variable">$ch</span>, CURLOPT_POST, 1);</span><br><span class="line">        curl_setopt (<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="variable">$post_data</span>);</span><br><span class="line">        curl_setopt (<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, 1);</span><br><span class="line">        curl_setopt (<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="literal">false</span>);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYPEER,0);</span><br><span class="line">        // the response data <span class="built_in">which</span> is the infor json string</span><br><span class="line">        <span class="variable">$data</span> = curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">        curl_close(<span class="variable">$ch</span>);</span><br><span class="line">        // replace error json string to avoid decode error</span><br><span class="line">        <span class="variable">$data</span> = preg_replace(<span class="string">'/[\x00-\x1F]/'</span>,<span class="string">''</span>, <span class="variable">$data</span>);</span><br><span class="line">        <span class="variable">$data</span> = json_decode(<span class="variable">$data</span>,<span class="literal">true</span>);</span><br><span class="line">        //var_dump(<span class="variable">$data</span>);</span><br><span class="line">        <span class="keyword">if</span>(isErr(<span class="variable">$data</span>)){</span><br><span class="line">            //<span class="keyword">if</span> the access_token is invaild, retrive the new access_token and try again</span><br><span class="line">            <span class="built_in">return</span> post(<span class="variable">$GLOBALS</span>[<span class="string">'access_token'</span>],<span class="variable">$post_data</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(array_key_exists(<span class="string">'user_info_list'</span>,<span class="variable">$data</span>)){</span><br><span class="line">            <span class="built_in">return</span> <span class="variable">$data</span>[<span class="string">'user_info_list'</span>];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    //@description: get the openids list of users(<span class="built_in">limit</span>:10000 once)</span><br><span class="line">    //@para: the first is the access_token,the second is the next_openid <span class="built_in">which</span> could be empty as the default</span><br><span class="line">    //@<span class="built_in">return</span>: <span class="built_in">return</span> the openid list</span><br><span class="line">    <span class="keyword">function</span> getOpenid(<span class="variable">$access_token</span>,<span class="variable">$openid</span>=<span class="string">''</span>){</span><br><span class="line">        //获取access_token</span><br><span class="line">        <span class="variable">$url</span> = <span class="string">"https://api.weixin.qq.com/cgi-bin/user/get?access_token={<span class="variable">$access_token</span>}&next_openid={<span class="variable">$openid</span>}"</span>;</span><br><span class="line">        <span class="variable">$ch</span> = curl_init();</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_URL,<span class="variable">$url</span>);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER,1);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYPEER,0);</span><br><span class="line">        <span class="variable">$data</span> = curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">        curl_close(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="variable">$data</span> = json_decode(<span class="variable">$data</span>,<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">if</span>(isErr(<span class="variable">$data</span>)){</span><br><span class="line">            <span class="built_in">return</span> getOpenid(<span class="variable">$GLOBALS</span>[<span class="string">'access_token'</span>],<span class="variable">$openid</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$data</span>;</span><br><span class="line">    }</span><br><span class="line">    //@description: write the user infor to file or <span class="keyword">do</span> other handle</span><br><span class="line">    //para: user infor array</span><br><span class="line">    <span class="keyword">function</span> handInfors(<span class="variable">$data</span>){</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$data</span> == null){</span><br><span class="line">            <span class="built_in">return</span>;</span><br><span class="line">        }</span><br><span class="line">        foreach(<span class="variable">$data</span> as <span class="variable">$infor</span>){</span><br><span class="line">            //number count of all users</span><br><span class="line">            <span class="variable">$GLOBALS</span>[<span class="string">'InforCount'</span>] = <span class="variable">$GLOBALS</span>[<span class="string">'InforCount'</span>] + 1;</span><br><span class="line">            //unicode convert</span><br><span class="line">            <span class="variable">$inforJson</span> = decodeUnicode(json_encode(<span class="variable">$infor</span>));</span><br><span class="line">            //write each line(each user infor) to info.txt</span><br><span class="line">            <span class="variable">$file</span> = <span class="string">'info.txt'</span>;</span><br><span class="line">            <span class="variable">$current</span> = file_get_contents(<span class="variable">$file</span>);            </span><br><span class="line">            <span class="variable">$current</span> .= <span class="variable">$inforJson</span>;</span><br><span class="line">            <span class="variable">$current</span> .= <span class="string">"\r\n"</span>;</span><br><span class="line">            file_put_contents(<span class="variable">$file</span>, <span class="variable">$current</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    //@description: send model message to Specified openid</span><br><span class="line">    //@<span class="built_in">return</span>: the send response</span><br><span class="line">    <span class="keyword">function</span> set_msg(<span class="variable">$access_token</span>,<span class="variable">$openid</span>){</span><br><span class="line">    <span class="variable">$formwork</span> = <span class="string">'{</span></span><br><span class="line"><span class="string">           "touser":"'</span>.<span class="variable">$openid</span>.<span class="string">'",</span></span><br><span class="line"><span class="string">           "template_id":"GkChFMRCGYvGoNUzusXX3qnOOV-6U0L801L3lmp6NYo",</span></span><br><span class="line"><span class="string">           "url":"http://mp.weixin.qq.com/s/Nn7-KIVOR3S8SFBOV3Qw8Q",            </span></span><br><span class="line"><span class="string">           "data":{</span></span><br><span class="line"><span class="string">                   "first": {</span></span><br><span class="line"><span class="string">                       "value":"缠论运行报告",</span></span><br><span class="line"><span class="string">                       "color":"#173177"</span></span><br><span class="line"><span class="string">                   },</span></span><br><span class="line"><span class="string">                   "keyword1":{</span></span><br><span class="line"><span class="string">                       "value":"缠论",</span></span><br><span class="line"><span class="string">                       "color":"#173177"</span></span><br><span class="line"><span class="string">                   },</span></span><br><span class="line"><span class="string">                   "keyword2":{</span></span><br><span class="line"><span class="string">                       "value":"国信TradeStation缠论全市场扫描",</span></span><br><span class="line"><span class="string">                       "color":"#173177"</span></span><br><span class="line"><span class="string">                   },</span></span><br><span class="line"><span class="string">                   "keyword3":{</span></span><br><span class="line"><span class="string">                       "value":"每天",</span></span><br><span class="line"><span class="string">                       "color":"#173177"</span></span><br><span class="line"><span class="string">                   },</span></span><br><span class="line"><span class="string">                   "remark": {</span></span><br><span class="line"><span class="string">                       "value":"2017-3-13：本日，\n第一类买点：2只，第二类买点：1只，第三类买点：0只；\n第一类卖点：1只，第二类卖点：0只，第三类卖点：2只；\n点击查看详情。",</span></span><br><span class="line"><span class="string">                       "color":"#FF0000"</span></span><br><span class="line"><span class="string">                    }</span></span><br><span class="line"><span class="string">            }</span></span><br><span class="line"><span class="string">        }'</span>;</span><br><span class="line">        <span class="variable">$url</span> = <span class="string">"https://api.weixin.qq.com/cgi-bin/message/template/send?access_token={<span class="variable">$access_token</span>}"</span>;</span><br><span class="line">        <span class="variable">$ch</span> = curl_init();</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_URL,<span class="variable">$url</span>);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER,1);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYPEER,0);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_POST,1);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS,<span class="variable">$formwork</span>);</span><br><span class="line">        <span class="variable">$data</span> = curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">        curl_close(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$data</span>;</span><br><span class="line">    }</span><br><span class="line">    //@description:get user infor by openid</span><br><span class="line">    //@<span class="built_in">return</span>: the user infor Json string</span><br><span class="line">    <span class="keyword">function</span> getUserByID(<span class="variable">$access_token</span>,<span class="variable">$openid</span>){</span><br><span class="line">        <span class="variable">$url</span> = <span class="string">"https://api.weixin.qq.com/cgi-bin/user/info?access_token={<span class="variable">$access_token</span>}&openid={<span class="variable">$openid</span>}&lang=zh_CN"</span>;</span><br><span class="line">        <span class="variable">$ch</span> = curl_init();</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_URL,<span class="variable">$url</span>);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER,1);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYPEER,0);</span><br><span class="line">        <span class="variable">$data</span> = curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">        curl_close(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$data</span>;//<span class="built_in">return</span> the infor json string</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    //main method:</span><br><span class="line">    <span class="built_in">echo</span> date(<span class="string">'Y-m-d H:i:s'</span>,time());</span><br><span class="line">    <span class="built_in">echo</span>(<span class="string">"&lt;br&gt;&lt;/br&gt;"</span>);</span><br><span class="line">    <span class="variable">$access_token</span> = getaccess_token(<span class="variable">$appid</span>,<span class="variable">$appsecret</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"access_token："</span>.<span class="variable">$access_token</span>;</span><br><span class="line">    <span class="built_in">echo</span>(<span class="string">"&lt;br&gt;&lt;/br&gt;"</span>);</span><br><span class="line">    <span class="variable">$ERRCount</span> = 0;</span><br><span class="line">    <span class="variable">$UpperLimit</span> = 10;</span><br><span class="line">    <span class="variable">$InforCount</span> = 0;</span><br><span class="line">    <span class="variable">$data</span> = getOpenid(<span class="variable">$access_token</span>);</span><br><span class="line">    //print_r(<span class="variable">$data</span>);</span><br><span class="line">    //<span class="built_in">echo</span>(<span class="string">"&lt;br&gt;&lt;/br&gt;"</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>){</span><br><span class="line">        //getOpenid</span><br><span class="line">        <span class="variable">$count</span> = <span class="variable">$data</span>[<span class="string">'count'</span>]; //openids count(10000 or trim)</span><br><span class="line">        <span class="variable">$nextopenid</span> = <span class="variable">$data</span>[<span class="string">'next_openid'</span>];</span><br><span class="line">        <span class="variable">$list</span> = array();</span><br><span class="line">        <span class="variable">$tempCount</span> = 0;</span><br><span class="line">        <span class="keyword">if</span>(array_key_exists(<span class="string">'data'</span>,<span class="variable">$data</span>) == <span class="literal">false</span>){</span><br><span class="line">            <span class="built_in">break</span>;</span><br><span class="line">        }</span><br><span class="line">        foreach(<span class="variable">$data</span>[<span class="string">'data'</span>][<span class="string">'openid'</span>] as <span class="variable">$openid</span>){</span><br><span class="line">            <span class="variable">$tempCount</span> = <span class="variable">$tempCount</span> + 1;</span><br><span class="line">            <span class="variable">$idArray</span> =array(  </span><br><span class="line">                    <span class="string">'openid'</span> => <span class="variable">$openid</span>,</span><br><span class="line">                     <span class="string">"lang"</span> => <span class="string">"zh-CN"</span></span><br><span class="line">                );</span><br><span class="line">            Array_push(<span class="variable">$list</span>,<span class="variable">$idArray</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(count(<span class="variable">$list</span>) == 100 or <span class="variable">$tempCount</span> == <span class="variable">$count</span>){</span><br><span class="line">                <span class="variable">$arra</span> = array(</span><br><span class="line">                <span class="string">'user_list'</span> => <span class="variable">$list</span></span><br><span class="line">                );</span><br><span class="line">                //<span class="built_in">echo</span>(json_encode(<span class="variable">$arra</span>));</span><br><span class="line">                //print_r(<span class="variable">$arra</span>);</span><br><span class="line">                <span class="variable">$infors</span> = post(<span class="variable">$access_token</span>,json_encode(<span class="variable">$arra</span>));</span><br><span class="line">                print_r(<span class="variable">$infors</span>);</span><br><span class="line">                <span class="built_in">echo</span>(<span class="string">"&lt;br&gt;&lt;/br&gt;"</span>);</span><br><span class="line">                //write infors to files</span><br><span class="line">                handInfors(<span class="variable">$infors</span>);</span><br><span class="line">                <span class="variable">$list</span> = array();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="variable">$data</span> = getOpenid(<span class="variable">$access_token</span>,<span class="variable">$nextopenid</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">echo</span> date(<span class="string">'Y-m-d H:i:s'</span>,time());</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简介：&lt;br&gt;使用微信公众号接口一键获取全部关注用户的信息。（openid,nickname,city,country,groupid,targetlist）&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td 
      
    
    </summary>
    
      <category term="PHP" scheme="https://bingbingliang.github.io/categories/PHP/"/>
    
    
      <category term="PHP" scheme="https://bingbingliang.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>微信公众号 - 自定义token对接</title>
    <link href="https://bingbingliang.github.io//posts/e20321f4/"/>
    <id>https://bingbingliang.github.io//posts/e20321f4/</id>
    <published>2019-06-17T17:55:46.000Z</published>
    <updated>2019-06-18T16:12:39.650Z</updated>
    
    <content type="html"><![CDATA[<p>简介：<br>开发微信公众号之前需要先给“微信公众平台”与“自己的服务器”建立一个关系，本篇内容就是“自己的服务器”与“微信公众平台”对接的文件内容。</p><p>由于“微信公众号-被动回复用户消息”不需要 appID 和 appsecret ，所以我把该功能也引进了这篇文章。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">/**</span><br><span class="line">  * wechat php <span class="built_in">test</span></span><br><span class="line">  */</span><br><span class="line"></span><br><span class="line">//define your token</span><br><span class="line">define(<span class="string">"TOKEN"</span>, <span class="string">"weixin"</span>); // 自定义‘与微信公众平台-接口配置信息中的 token 一致才能对接成功’</span><br><span class="line"><span class="variable">$wechatObj</span> = new wechatCallbackapiTest();</span><br><span class="line"><span class="variable">$wechatObj</span>->valid();</span><br><span class="line"></span><br><span class="line">class wechatCallbackapiTest {</span><br><span class="line"></span><br><span class="line">public <span class="keyword">function</span> <span class="function"><span class="title">valid</span></span>() {</span><br><span class="line"><span class="variable">$echoStr</span> = <span class="variable">$_GET</span>[<span class="string">"echostr"</span>];</span><br><span class="line"></span><br><span class="line">//valid signature , option</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$this</span>->checkSignature() && <span class="variable">$echoStr</span>){</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$echoStr</span>;</span><br><span class="line"><span class="built_in">exit</span>;</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line"><span class="variable">$this</span> -> responseMsg();</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">public <span class="keyword">function</span> <span class="function"><span class="title">responseMsg</span></span>() {</span><br><span class="line">//get post data, May be due to the different environments</span><br><span class="line">//<span class="variable">$postStr</span> = <span class="variable">$GLOBALS</span>[<span class="string">"HTTP_RAW_POST_DATA"</span>];</span><br><span class="line"><span class="variable">$postStr</span> = file_get_contents(<span class="string">"php://input"</span>);</span><br><span class="line">//extract post data</span><br><span class="line"><span class="keyword">if</span> (!empty(<span class="variable">$postStr</span>)){</span><br><span class="line"></span><br><span class="line"><span class="variable">$postObj</span> = simplexml_load_string(<span class="variable">$postStr</span>, <span class="string">'SimpleXMLElement'</span>, LIBXML_NOCDATA);</span><br><span class="line"><span class="keyword">if</span>( strtolower(<span class="variable">$postObj</span>->MsgType) == <span class="string">'text'</span> && trim(<span class="variable">$postObj</span>->Content)==<span class="string">'tuwen'</span> ){</span><br><span class="line"><span class="variable">$fromUsername</span> = <span class="variable">$postObj</span>->FromUserName;</span><br><span class="line"><span class="variable">$toUsername</span> = <span class="variable">$postObj</span>->ToUserName;</span><br><span class="line"><span class="variable">$arr</span> = array(</span><br><span class="line">array(</span><br><span class="line"><span class="string">'title'</span>=><span class="string">'hao123'</span>,</span><br><span class="line"><span class="string">'description'</span>=><span class="string">"hao123 is very cool"</span>,</span><br><span class="line"><span class="string">'picUrl'</span>=><span class="string">'https://www.baidu.com/img/bdlogo.png'</span>,</span><br><span class="line"><span class="string">'url'</span>=><span class="string">'http://www.hao123.com'</span>,</span><br><span class="line">),</span><br><span class="line">array(</span><br><span class="line"><span class="string">'title'</span>=><span class="string">'qq'</span>,</span><br><span class="line"><span class="string">'description'</span>=><span class="string">"qq is very cool"</span>,</span><br><span class="line"><span class="string">'picUrl'</span>=><span class="string">'http://www.imooc.com/static/img/common/logo.png'</span>,</span><br><span class="line"><span class="string">'url'</span>=><span class="string">'http://www.qq.com'</span>,</span><br><span class="line">),</span><br><span class="line">array(</span><br><span class="line"><span class="string">'title'</span>=><span class="string">'imooc'</span>,</span><br><span class="line"><span class="string">'description'</span>=><span class="string">"imooc is very cool"</span>,</span><br><span class="line"><span class="string">'picUrl'</span>=><span class="string">'http://www.imooc.com/static/img/common/logo.png'</span>,</span><br><span class="line"><span class="string">'url'</span>=><span class="string">'http://www.imooc.com'</span>,</span><br><span class="line">),</span><br><span class="line">);</span><br><span class="line"><span class="variable">$template</span> = <span class="string">"&lt;xml&gt;</span></span><br><span class="line"><span class="string">&lt;ToUserName&gt&lt;![CDATA[%s]]&gt&lt;/ToUserName&gt</span></span><br><span class="line"><span class="string">&lt;FromUserName&gt&lt;![CDATA[%s]]&gt&lt;/FromUserName&gt</span></span><br><span class="line"><span class="string">&lt;CreateTime&gt%s&lt;/CreateTime&gt</span></span><br><span class="line"><span class="string">&lt;MsgType&gt&lt;![CDATA[%s]]&gt&lt;/MsgType&gt</span></span><br><span class="line"><span class="string">&lt;ArticleCount&gt3&lt;/ArticleCount&gt</span></span><br><span class="line"><span class="string">&lt;Articles&gt"</span>;</span><br><span class="line">foreach(<span class="variable">$arr</span> as <span class="variable">$k</span>=><span class="variable">$v</span>){</span><br><span class="line"><span class="variable">$template</span> .=<span class="string">"&#60;item&gt;</span></span><br><span class="line"><span class="string">&lt;Title&gt;&lt;![CDATA["</span>.<span class="variable">$v</span>[<span class="string">'title'</span>].<span class="string">"]]&gt;&lt;/Title&gt;</span></span><br><span class="line"><span class="string">&lt;Description&gt;&lt;![CDATA["</span>.<span class="variable">$v</span>[<span class="string">'description'</span>].<span class="string">"]]&gt;&lt;/Description&gt;</span></span><br><span class="line"><span class="string">&lt;PicUrl&gt;&lt;![CDATA["</span>.<span class="variable">$v</span>[<span class="string">'picUrl'</span>].<span class="string">"]]&gt;&lt;/PicUrl&gt;</span></span><br><span class="line"><span class="string">&lt;Url&gt;&lt;![CDATA["</span>.<span class="variable">$v</span>[<span class="string">'url'</span>].<span class="string">"]]&gt;&lt;/Url&gt;</span></span><br><span class="line"><span class="string">&lt;/item&gt;"</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="variable">$template</span> .=<span class="string">"&lt;/Articles&gt;</span></span><br><span class="line"><span class="string">&lt;/xml&gt;"</span>;</span><br><span class="line"><span class="built_in">echo</span> sprintf(<span class="variable">$template</span>, <span class="variable">$fromUsername</span>, <span class="variable">$toUsername</span>, time(), <span class="string">'news'</span>);</span><br><span class="line"></span><br><span class="line">//注意：进行多图文发送时，子图文个数不能超过10个</span><br><span class="line">}<span class="keyword">else</span>{</span><br><span class="line"><span class="variable">$fromUsername</span> = <span class="variable">$postObj</span>->FromUserName;</span><br><span class="line"><span class="variable">$toUsername</span> = <span class="variable">$postObj</span>->ToUserName;</span><br><span class="line"><span class="variable">$keyword</span> = trim(<span class="variable">$postObj</span>->Content);</span><br><span class="line"><span class="variable">$time</span> = time();</span><br><span class="line"><span class="variable">$textTpl</span> = <span class="string">"&lt;xml&gt;</span></span><br><span class="line"><span class="string">&lt;ToUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/ToUserName&gt;</span></span><br><span class="line"><span class="string">&lt;FromUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/FromUserName&gt;</span></span><br><span class="line"><span class="string">&lt;CreateTime&gt;%s&lt;/CreateTime&gt;</span></span><br><span class="line"><span class="string">&lt;MsgType&gt;&lt;![CDATA[%s]]&gt;&lt;/MsgType&gt;</span></span><br><span class="line"><span class="string">&lt;Content&gt;&lt;![CDATA[%s]]&gt;&lt;/Content&gt;</span></span><br><span class="line"><span class="string">&lt;FuncFlag&gt;0&lt;/FuncFlag&gt;</span></span><br><span class="line"><span class="string">&lt;/xml&gt;"</span>; </span><br><span class="line"><span class="variable">$msgType</span> = <span class="string">"text"</span>;</span><br><span class="line">// 判断该数据包是否是订阅的事件推送</span><br><span class="line"><span class="keyword">if</span>( strtolower( <span class="variable">$postObj</span>->MsgType) == <span class="string">'event'</span>){</span><br><span class="line">// 如果是关注 subscribe 事件</span><br><span class="line"><span class="keyword">if</span>( strtolower( <span class="variable">$postObj</span>->Event == <span class="string">'subscribe'</span>)){</span><br><span class="line">// 回复用户消息</span><br><span class="line"><span class="variable">$contentStr</span> = <span class="string">"欢迎关注我们的微信公众号"</span>;</span><br><span class="line">}</span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">if</span>( strtolower( <span class="variable">$postObj</span>->MsgType) == <span class="string">'text'</span>){</span><br><span class="line">switch (<span class="variable">$keyword</span>) {</span><br><span class="line"><span class="keyword">case</span> 1:</span><br><span class="line"><span class="variable">$contentStr</span> = <span class="string">"您输入了数字1"</span>;</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> 2:</span><br><span class="line"><span class="variable">$contentStr</span> = <span class="string">"您输入了数字2"</span>;</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">'冰冰凉'</span>:</span><br><span class="line"><span class="variable">$contentStr</span> = <span class="string">"&lt;a href='https://bingbingliang.github.io'&gt;冰冰凉&lt;/a&gt;"</span>;</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line"></span><br><span class="line">default:</span><br><span class="line"><span class="variable">$contentStr</span> = <span class="string">"未匹配到您的输入"</span>;</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="variable">$resultStr</span> = sprintf(<span class="variable">$textTpl</span>, <span class="variable">$fromUsername</span>, <span class="variable">$toUsername</span>, <span class="variable">$time</span>, <span class="variable">$msgType</span>, <span class="variable">$contentStr</span>);</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$resultStr</span>;</span><br><span class="line">}</span><br><span class="line">}<span class="keyword">else</span> {</span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span>;</span><br><span class="line"><span class="built_in">exit</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">private <span class="keyword">function</span> <span class="function"><span class="title">checkSignature</span></span>() {</span><br><span class="line"><span class="variable">$signature</span> = <span class="variable">$_GET</span>[<span class="string">"signature"</span>];</span><br><span class="line"><span class="variable">$timestamp</span> = <span class="variable">$_GET</span>[<span class="string">"timestamp"</span>];</span><br><span class="line"><span class="variable">$nonce</span> = <span class="variable">$_GET</span>[<span class="string">"nonce"</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$token</span> = TOKEN;</span><br><span class="line"><span class="variable">$tmpArr</span> = array(<span class="variable">$token</span>, <span class="variable">$timestamp</span>, <span class="variable">$nonce</span>);</span><br><span class="line">sort(<span class="variable">$tmpArr</span>);</span><br><span class="line"><span class="variable">$tmpStr</span> = implode( <span class="variable">$tmpArr</span> );</span><br><span class="line"><span class="variable">$tmpStr</span> = sha1( <span class="variable">$tmpStr</span> );</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="variable">$tmpStr</span> == <span class="variable">$signature</span> ){</span><br><span class="line"><span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">}<span class="keyword">else</span>{</span><br><span class="line"><span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简介：&lt;br&gt;开发微信公众号之前需要先给“微信公众平台”与“自己的服务器”建立一个关系，本篇内容就是“自己的服务器”与“微信公众平台”对接的文件内容。&lt;/p&gt;
&lt;p&gt;由于“微信公众号-被动回复用户消息”不需要 appID 和 appsecret ，所以我把该功能也引进了这篇
      
    
    </summary>
    
      <category term="PHP" scheme="https://bingbingliang.github.io/categories/PHP/"/>
    
    
      <category term="PHP" scheme="https://bingbingliang.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>PHP第三方登录 — OAuth2.0协议 — 实现原理</title>
    <link href="https://bingbingliang.github.io//posts/20764040/"/>
    <id>https://bingbingliang.github.io//posts/20764040/</id>
    <published>2019-06-13T16:05:46.000Z</published>
    <updated>2019-06-13T16:12:29.164Z</updated>
    
    <content type="html"><![CDATA[<script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script&gt;
        document.querySelectorAll(&#39;.github-emoji&#39;)
          .forEach(el =&gt; {
            if (!el.dataset.src) { return; }
        
      
    
    </summary>
    
      <category term="PHP" scheme="https://bingbingliang.github.io/categories/PHP/"/>
    
    
      <category term="PHP" scheme="https://bingbingliang.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>递归方法</title>
    <link href="https://bingbingliang.github.io//posts/14182/"/>
    <id>https://bingbingliang.github.io//posts/14182/</id>
    <published>2019-01-04T16:00:00.000Z</published>
    <updated>2019-06-20T16:43:30.849Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">// 调用递归方法</span><br><span class="line">public <span class="keyword">function</span> <span class="function"><span class="title">sel</span></span>(){</span><br><span class="line"><span class="variable">$arr</span> = <span class="variable">$this</span>->Table(<span class="string">'region'</span>)->select();</span><br><span class="line"><span class="built_in">return</span> <span class="variable">$this</span>->level_sel(<span class="variable">$arr</span>,<span class="variable">$parent_id</span>=0,<span class="variable">$level</span>=0);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">// 递归</span><br><span class="line"><span class="keyword">function</span> level_sel(<span class="variable">$arr</span>,<span class="variable">$parent_id</span>=0,<span class="variable">$level</span>=0){</span><br><span class="line">// 定义一个静态数组</span><br><span class="line">static <span class="variable">$data</span> = array();</span><br><span class="line">foreach(<span class="variable">$arr</span> as <span class="variable">$key</span>=><span class="variable">$val</span>){</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$val</span>[<span class="string">'parent_id'</span>] == <span class="variable">$parent_id</span>){</span><br><span class="line"><span class="variable">$val</span>[<span class="string">'level'</span>] == <span class="variable">$level</span>;</span><br><span class="line"><span class="variable">$data</span>[] = <span class="variable">$val</span>;</span><br><span class="line"><span class="variable">$this</span>->level_sel(<span class="variable">$arr</span>,<span class="variable">$val</span>[<span class="string">'r_id'</span>],<span class="variable">$level</span>+1);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">return</span> <span class="variable">$data</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span
      
    
    </summary>
    
      <category term="PHP" scheme="https://bingbingliang.github.io/categories/PHP/"/>
    
    
      <category term="PHP" scheme="https://bingbingliang.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>PHPStorm 相关操作</title>
    <link href="https://bingbingliang.github.io//posts/13173/"/>
    <id>https://bingbingliang.github.io//posts/13173/</id>
    <published>2019-01-02T16:00:00.000Z</published>
    <updated>2019-06-20T16:42:55.212Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PHPStorm-设置-Ctrl-滚轮调整字体大小"><a href="#PHPStorm-设置-Ctrl-滚轮调整字体大小" class="headerlink" title="PHPStorm 设置 Ctrl + 滚轮调整字体大小"></a>PHPStorm 设置 Ctrl + 滚轮调整字体大小</h1><p>1.点击左上角的File，再点击setting；</p><p>2.Editor->General，选择Change font size (Zoom) with Ctrl+Mouse Wheel；</p><p>3.点击OK即可。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;PHPStorm-设置-Ctrl-滚轮调整字体大小&quot;&gt;&lt;a href=&quot;#PHPStorm-设置-Ctrl-滚轮调整字体大小&quot; class=&quot;headerlink&quot; title=&quot;PHPStorm 设置 Ctrl + 滚轮调整字体大小&quot;&gt;&lt;/a&gt;PHPStorm 
      
    
    </summary>
    
      <category term="PHP" scheme="https://bingbingliang.github.io/categories/PHP/"/>
    
    
      <category term="PHP" scheme="https://bingbingliang.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 数据库的常用命令</title>
    <link href="https://bingbingliang.github.io//posts/57951/"/>
    <id>https://bingbingliang.github.io//posts/57951/</id>
    <published>2018-12-31T16:00:00.000Z</published>
    <updated>2019-06-20T16:40:02.602Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何使用命令行把-sql-文件导入-MySql-数据库"><a href="#如何使用命令行把-sql-文件导入-MySql-数据库" class="headerlink" title="如何使用命令行把 sql 文件导入 MySql 数据库"></a>如何使用命令行把 sql 文件导入 MySql 数据库</h1><p>1.进入 MySql ：mysql -uroot -p；<br><span style="color:gray">（配置全局变量的情况下可直接进入，否则需要进入mysql的安装目录bin下进行进入）</span></p><p>2.使用需要导入到的数据库：use <库名></p><p>3.导入 sql 文件到当前数据库：source sql 文件路径</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;如何使用命令行把-sql-文件导入-MySql-数据库&quot;&gt;&lt;a href=&quot;#如何使用命令行把-sql-文件导入-MySql-数据库&quot; class=&quot;headerlink&quot; title=&quot;如何使用命令行把 sql 文件导入 MySql 数据库&quot;&gt;&lt;/a&gt;如何使用命
      
    
    </summary>
    
      <category term="MySql" scheme="https://bingbingliang.github.io/categories/MySql/"/>
    
    
      <category term="MySql" scheme="https://bingbingliang.github.io/tags/MySql/"/>
    
  </entry>
  
  <entry>
    <title>Laravel 数据库操作的三种方式</title>
    <link href="https://bingbingliang.github.io//posts/49682/"/>
    <id>https://bingbingliang.github.io//posts/49682/</id>
    <published>2017-12-31T16:00:00.000Z</published>
    <updated>2019-06-17T17:45:59.454Z</updated>
    
    <content type="html"><![CDATA[<p>Laravel提供了3种操作数据库方式：DB facade（原始方式）、查询构造器和Eloquent ORM。</p><h1 id="数据库操作之DB-facade"><a href="#数据库操作之DB-facade" class="headerlink" title="数据库操作之DB facade"></a>数据库操作之DB facade</h1><p>1.查询操作<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//返回一个二维数组</span><br><span class="line">DB::select(<span class="string">"select * from table"</span>);</span><br></pre></td></tr></tbody></table></figure><p></p><p>2.新增操作<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//新增成功则返回<span class="literal">true</span></span><br><span class="line">DB::insert(<span class="string">"insert into table(vip_ID,vip_name,vip_type,vip_fenshu) values(?,?,?,?)"</span>,[5,<span class="string">'小明'</span>,<span class="string">'出行'</span>,670]);</span><br></pre></td></tr></tbody></table></figure><p></p><p>3.更新操作<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//更新成功返回<span class="literal">true</span></span><br><span class="line">DB::update(<span class="string">'update vipinfo set vip_fenshu= ? where vip_ID= ? '</span>,[700,5]);</span><br></pre></td></tr></tbody></table></figure><p></p><p>4.删除操作<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 返回的是删除的行数。</span><br><span class="line">DB::delete(<span class="string">'delete from vipinfo where vip_ID= ?'</span>,[5]);</span><br></pre></td></tr></tbody></table></figure><p></p><h1 id="数据库操作之查询构造器"><a href="#数据库操作之查询构造器" class="headerlink" title="数据库操作之查询构造器"></a>数据库操作之查询构造器</h1><p>一、使用查询构造器实现增删改查<br>1.新增<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$bool</span>=DB::table(<span class="string">"vipinfo"</span>)->insert([<span class="string">'vip_ID'</span>=>6,<span class="string">'vip_name'</span>=><span class="string">'zls'</span>,<span class="string">'vip_type'</span>=><span class="string">"出行"</span>,<span class="string">'vip_fenshu'</span>=>800]);  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$bool</span>;  //返回bool值  </span><br><span class="line"> //如果想得到新增的id，则使用insertGetId方法  </span><br><span class="line">  <span class="variable">$id</span>=DB::table(<span class="string">"vipinfo"</span>)->insertGetId([<span class="string">'vip_ID'</span>=>5,<span class="string">'vip_name'</span>=><span class="string">'wyp'</span>,<span class="string">'vip_type'</span>=><span class="string">"出行"</span>,<span class="string">'vip_fenshu'</span>=>800]);  </span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$id</span>;  </span><br><span class="line"> //插入多条数据  </span><br><span class="line"> <span class="variable">$bool</span>=DB::table(<span class="string">"vipinfo"</span>)->insert([  </span><br><span class="line">        [<span class="string">'vip_ID'</span>=>5,<span class="string">'vip_name'</span>=><span class="string">'wyp'</span>,<span class="string">'vip_type'</span>=><span class="string">"出行"</span>,<span class="string">'vip_fenshu'</span>=>800],  </span><br><span class="line">        [<span class="string">'vip_ID'</span>=>6,<span class="string">'vip_name'</span>=><span class="string">'zls'</span>,<span class="string">'vip_type'</span>=><span class="string">"出行"</span>,<span class="string">'vip_fenshu'</span>=>800],  </span><br><span class="line">]);  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$bool</span>;  //返回bool值</span><br></pre></td></tr></tbody></table></figure><p></p><p>2.修改<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$bool</span>=DB::table(<span class="string">"vipinfo"</span>)-><span class="built_in">where</span>(<span class="string">'vip_ID'</span>,6)->update([<span class="string">'vip_fenshu'</span>=>500]);  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$bool</span>;  </span><br><span class="line">//自增  </span><br><span class="line"><span class="variable">$bool</span>=DB::table(<span class="string">"vipinfo"</span>)-><span class="built_in">where</span>(<span class="string">'vip_ID'</span>,6)->increment(<span class="string">"vip_fenshu"</span>);//自增1  </span><br><span class="line"><span class="variable">$bool</span>=DB::table(<span class="string">"vipinfo"</span>)-><span class="built_in">where</span>(<span class="string">'vip_ID'</span>,6)->increment(<span class="string">"vip_fenshu"</span>,3);//自增3  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$bool</span>;  </span><br><span class="line">//自减  </span><br><span class="line"><span class="variable">$bool</span>=DB::table(<span class="string">"vipinfo"</span>)-><span class="built_in">where</span>(<span class="string">'vip_ID'</span>,6)->decrement(<span class="string">"vip_fenshu"</span>);//自1  </span><br><span class="line"><span class="variable">$bool</span>=DB::table(<span class="string">"vipinfo"</span>)-><span class="built_in">where</span>(<span class="string">'vip_ID'</span>,6)->decrement(<span class="string">"vip_fenshu"</span>,3);//自增3  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$bool</span>;  </span><br><span class="line">//自增时再修改其他字段  </span><br><span class="line"><span class="variable">$bool</span>=DB::table(<span class="string">"vipinfo"</span>)-><span class="built_in">where</span>(<span class="string">'vip_ID'</span>,6)->increment(<span class="string">"vip_fenshu"</span>,3,[<span class="string">'vip_name'</span>=><span class="string">'dbdibi'</span>]);//自增3</span><br><span class="line">//两个字段同时自增 or 自减 increment</span><br><span class="line">// 第一种写法</span><br><span class="line"><span class="variable">$results</span> = DB::table(<span class="string">'articles'</span>)</span><br><span class="line">    -><span class="built_in">where</span>(<span class="string">'id'</span>, <span class="variable">$params</span>[<span class="string">'id'</span>])</span><br><span class="line">    ->increment(<span class="string">'vote'</span>, 1, array(<span class="string">'num'</span> => DB::raw(<span class="string">'`num` + 1'</span>)));</span><br><span class="line">// 第二种写法</span><br><span class="line"><span class="variable">$results</span> = DB::table(<span class="string">'articles'</span>)-><span class="built_in">where</span>(<span class="string">'id'</span>, <span class="variable">$params</span>[<span class="string">'id'</span>])</span><br><span class="line">->update(array(</span><br><span class="line">   <span class="string">'vote'</span> => DB::raw(<span class="string">'vote + 1'</span>),</span><br><span class="line">   <span class="string">'num'</span>  => DB::raw(<span class="string">'num + 1'</span>),</span><br><span class="line">));</span><br></pre></td></tr></tbody></table></figure><p></p><p>3.删除<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$num</span>=DB::table(<span class="string">"vipinfo"</span>)-><span class="built_in">where</span>(<span class="string">'vip_ID'</span>,6)->delete();//删除1条  </span><br><span class="line"><span class="variable">$num</span>=DB::table(<span class="string">"vipinfo"</span>)-><span class="built_in">where</span>(<span class="string">'vip_ID'</span>,<span class="string">'>'</span>,4)->delete();//删除多条  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$num</span>;  //删除的行数  </span><br><span class="line"><span class="variable">$num</span>=DB::table(<span class="string">"vipinfo"</span>)->truncate();//删除整表，不能恢复，谨慎使用</span><br></pre></td></tr></tbody></table></figure><p></p><p>4.查询<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">//get()返回多条数据  </span><br><span class="line"><span class="variable">$student</span>=DB::table(<span class="string">"vipinfo"</span>)->get();  </span><br><span class="line"> var_dump(<span class="variable">$student</span>);    </span><br><span class="line">//first()返回1条数据  </span><br><span class="line"><span class="variable">$student</span>=DB::table(<span class="string">"vipinfo"</span>)->first();  //结果集第一条记录  </span><br><span class="line"><span class="variable">$student</span>=DB::table(<span class="string">"vipinfo"</span>)->orderBy(<span class="string">'vip_ID'</span>,<span class="string">'desc'</span>)->first();//按vip_ID倒序排序  </span><br><span class="line">var_dump(<span class="variable">$student</span>);    </span><br><span class="line">//<span class="built_in">where</span>()条件查询  </span><br><span class="line"><span class="variable">$student</span>=DB::table(<span class="string">"vipinfo"</span>)-><span class="built_in">where</span>(<span class="string">'vip_ID'</span>,<span class="string">'>='</span>,2)->get(); //一个条件     </span><br><span class="line"><span class="variable">$student</span>=DB::table(<span class="string">"vipinfo"</span>)->whereRaw(<span class="string">'vip_ID> ? and vip_fenshu >= ?'</span>,[2,300])->get(); //多个条件  </span><br><span class="line">dd(<span class="variable">$student</span>);  </span><br><span class="line">//pluck()指定字段,后面不加get  </span><br><span class="line"><span class="variable">$student</span>=DB::table(<span class="string">"vipinfo"</span>)->pluck(<span class="string">'vip_name'</span>);  </span><br><span class="line">dd(<span class="variable">$student</span>);  </span><br><span class="line">//lists()指定字段，可以指定某个字段作为下标  </span><br><span class="line"><span class="variable">$student</span>=DB::table(<span class="string">"vipinfo"</span>)->lists(<span class="string">'vip_name'</span>,<span class="string">'vip_ID'</span>);   //指定vip_ID为下标  </span><br><span class="line">dd(<span class="variable">$student</span>);  </span><br><span class="line"><span class="variable">$student</span>=DB::table(<span class="string">"vipinfo"</span>)->lists(<span class="string">'vip_name'</span>);   //不指定下标，默认下标从0开始  </span><br><span class="line">//select()指定某个字段  </span><br><span class="line"><span class="variable">$student</span>=DB::table(<span class="string">"vipinfo"</span>)->select(<span class="string">'vip_name'</span>,<span class="string">'vip_ID'</span>)->get();  </span><br><span class="line">dd(<span class="variable">$student</span>);  </span><br><span class="line">//chunk()每次查n条  </span><br><span class="line"><span class="variable">$student</span>=DB::table(<span class="string">"vipinfo"</span>)->chunk(2,<span class="keyword">function</span>(<span class="variable">$students</span>){  //每次查2条  </span><br><span class="line">    var_dump(<span class="variable">$students</span>);  </span><br><span class="line">    <span class="keyword">if</span>(.......) <span class="built_in">return</span> <span class="literal">false</span>;  //在满足某个条件下使用<span class="built_in">return</span>就不会再往下查了  </span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure><p></p><p>二、使用聚合函数<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//count()统计记录条数  </span><br><span class="line"><span class="variable">$nums</span>=DB::table(<span class="string">"vipinfo"</span>)->count();  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$nums</span>;  </span><br><span class="line">//max()某个字段的最大值,同理min是最小值  </span><br><span class="line"><span class="variable">$max</span>=DB::table(<span class="string">"vipinfo"</span>)->max(<span class="string">"vip_fenshu"</span>);  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$max</span>;  </span><br><span class="line">//avg()某个字段的平均值  </span><br><span class="line"><span class="variable">$avg</span>=DB::table(<span class="string">"vipinfo"</span>)->avg(<span class="string">"vip_fenshu"</span>);  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$avg</span>;  </span><br><span class="line">//sum()某个字段的和  </span><br><span class="line"><span class="variable">$sum</span>=DB::table(<span class="string">"vipinfo"</span>)->sum(<span class="string">"vip_fenshu"</span>);  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$sum</span>;</span><br></pre></td></tr></tbody></table></figure><p></p><h1 id="数据库操作之-Eloquent-ORM"><a href="#数据库操作之-Eloquent-ORM" class="headerlink" title="数据库操作之 - Eloquent ORM"></a>数据库操作之 - Eloquent ORM</h1><p>一、简介 模型的建立及查询数据<br>简介：laravel所自带的Eloquent ORM 是一个ActiveRecord实现，用于数据库操作。每个数据表都有一个与之对应的模型，用于数据表交互。</p><p>建立模型，在app目录下建立一个Student模型，即Student.php，不需要带任何后缀。<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><?php </span><br><span class="line">namespace App;  </span><br><span class="line">use Illuminate\Database\Eloquent\Model;  </span><br><span class="line">class Student extends Model{  </span><br><span class="line">    //指定表名  </span><br><span class="line">    protected <span class="variable">$table</span>= <span class="string">'vipinfo'</span>;  </span><br><span class="line">    //指定主键  </span><br><span class="line">    protected <span class="variable">$primaryKey</span>= <span class="string">'vip_ID'</span>;  </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>在Student控制器里增加一个test3方法，配置路由<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'test3'</span>,[<span class="string">'uses'</span>=><span class="string">'StudentController@test3'</span>]);</span><br></pre></td></tr></tbody></table></figure><p></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public <span class="keyword">function</span> <span class="function"><span class="title">test3</span></span>(){  </span><br><span class="line">    // all()方法查询所有数据  </span><br><span class="line">    <span class="variable">$studnets</span>=Student::all();  </span><br><span class="line">    dd(<span class="variable">$studnets</span>);  </span><br><span class="line">    //find()查询一条，依据主键查询。findOrFail()查找不存在的记录时会抛出异常  </span><br><span class="line">    <span class="variable">$student</span>=Student::find(5);  //主键为5的记录  </span><br><span class="line">    var_dump(<span class="variable">$student</span>[<span class="string">'attributes'</span>]);  </span><br><span class="line">    //查询构造器的使用,省略了指定表名  </span><br><span class="line">    <span class="variable">$student</span>=Student::get();    </span><br><span class="line">    var_dump(<span class="variable">$student</span>);  </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>二、新增数据、自定义时间戳、批量赋值<br>1.新增数据<br>（1）使用save方法新增<br>laravel会默认维护<strong><em>created_at</em></strong>,<strong><em>updated_at</em></strong> 两个字段，这两个字段都是存储时间戳，整型11位的，因此使用时需要在数据库添加这两个字段。<br>如果不需要这个功能，只需要在模型里加一个属性：<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public <span class="variable">$timestamps</span>=<span class="literal">false</span>;</span><br></pre></td></tr></tbody></table></figure><p></p><p>以及一个方法，可以将当前时间戳存到数据库<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">protected <span class="keyword">function</span> <span class="function"><span class="title">getDateFormat</span></span>(){  </span><br><span class="line">    <span class="built_in">return</span> time();  </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>这样就不需要那两个字段了。<br>控制器里写：<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$student</span>=new Student();  </span><br><span class="line">//设定数据 </span><br><span class="line"><span class="variable">$student</span>->vip_name=<span class="string">'xiaoming'</span>;  </span><br><span class="line"><span class="variable">$student</span>->vip_type=<span class="string">'出行'</span>;  </span><br><span class="line"><span class="variable">$student</span>->vip_fenshu=900;  </span><br><span class="line"><span class="variable">$bool</span>=<span class="variable">$student</span>->save();  //保存  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$bool</span>;</span><br></pre></td></tr></tbody></table></figure><p></p><p>从数据库里取得某条记录的时间戳时，默认取得的是按日期格式化好的时间戳，如果想取得原本的时间戳，则在模型里增加asDateTime方法。<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">protected <span class="keyword">function</span> asDateTime(<span class="variable">$val</span>){  </span><br><span class="line">   <span class="built_in">return</span> <span class="variable">$val</span>;  </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>（2）使用create方法新增时，需要在模型里增加：<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">protected <span class="variable">$fillable</span>=[<span class="string">'vip_name'</span>,<span class="string">'vip_fenshu'</span>,<span class="string">'vip_type'</span>];   //允许批量赋值的字段</span><br></pre></td></tr></tbody></table></figure><p></p><p>控制器里写：<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Student::create([<span class="string">'vip_name'</span>=><span class="string">'mmm'</span>,<span class="string">'vip_fenshu'</span>=>999,<span class="string">'vip_type'</span>=><span class="string">'出行'</span>]);</span><br></pre></td></tr></tbody></table></figure><p></p><p>这样即可新增成功！<br>（3）firstOrCreate()以属性查找记录，若没有则新增<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$student</span>=Student::firstOrCreate([<span class="string">'vip_name'</span>=><span class="string">'mmm'</span>]);  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$student</span>;</span><br></pre></td></tr></tbody></table></figure><p></p><p>（4）firstOrNew()以属性查找记录，若没有则会创建新的实例。若需要保存，则自己调用save方法()<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$student</span>=Student::firstOrNew([<span class="string">'vip_name'</span>=><span class="string">'mmm'</span>]);  </span><br><span class="line"><span class="variable">$student</span>->save();  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$student</span>;</span><br></pre></td></tr></tbody></table></figure><p></p><p>2.修改数据<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//通过模型更新数据  <span class="variable">$student</span>=Student::find(2);  </span><br><span class="line"><span class="variable">$student</span>->vip_fenshu=10000;  </span><br><span class="line"><span class="variable">$student</span>->save(); //返回bool值  </span><br><span class="line">//通过查询构造器更新  </span><br><span class="line"><span class="variable">$num</span>=Student::<span class="built_in">where</span>(<span class="string">'vip_ID'</span>,<span class="string">'>'</span>,2)->update([<span class="string">'vip_fenshu'</span>=>2000]);  </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$num</span>;  //返回更新的行数</span><br></pre></td></tr></tbody></table></figure><p></p><p>3.删除数据<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//(1)通过模型删除数据  </span><br><span class="line"><span class="variable">$student</span>=Student::find(11);  </span><br><span class="line"><span class="variable">$student</span>->delete(); //返回bool值  </span><br><span class="line">//(2)通过主键删除   </span><br><span class="line"><span class="variable">$num</span>=Student::destroy(10); //删除主键为10的一条记录   </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$num</span>; //返回删除的行数   </span><br><span class="line"><span class="variable">$num</span>=Student::destroy(10,5); //删除多条  或者<span class="variable">$num</span>=Student::destroy([10,5]);   </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$num</span>; //返回删除的行数</span><br></pre></td></tr></tbody></table></figure><p></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Laravel提供了3种操作数据库方式：DB facade（原始方式）、查询构造器和Eloquent ORM。&lt;/p&gt;
&lt;h1 id=&quot;数据库操作之DB-facade&quot;&gt;&lt;a href=&quot;#数据库操作之DB-facade&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
      <category term="PHP" scheme="https://bingbingliang.github.io/categories/PHP/"/>
    
    
      <category term="PHP" scheme="https://bingbingliang.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>markdown 常用转义字符</title>
    <link href="https://bingbingliang.github.io//posts/ad603812/"/>
    <id>https://bingbingliang.github.io//posts/ad603812/</id>
    <published>2016-08-11T16:00:00.000Z</published>
    <updated>2019-06-20T16:38:15.417Z</updated>
    
    <content type="html"><![CDATA[<p>注意：<b>转义字符</b>中的 <b>&</b> 与 <b>字母</b> 中间没有空格，<span style="color:red">这里是有空格的</span> 是为了防止转义。    ⊙﹏⊙‖∣° 真尴尬～～ </p><table><thead><tr><th>显示结果</th><th style="text-align:center">描述</th><th style="text-align:right">转义字符</th></tr></thead><tbody><tr><td> </td><td style="text-align:center">空格</td><td style="text-align:right">& nbsp;</td></tr><tr><td><</td><td style="text-align:center">小于号</td><td style="text-align:right">& lt;</td></tr><tr><td>></td><td style="text-align:center">大于号</td><td style="text-align:right">& gt;</td></tr><tr><td>&</td><td style="text-align:center">和号</td><td style="text-align:right">& amp;</td></tr><tr><td>"</td><td style="text-align:center">双引号</td><td style="text-align:right">& quot;</td></tr><tr><td>'</td><td style="text-align:center">单引号</td><td style="text-align:right">& apos;(IE不支持)</td></tr></tbody></table><table style="text-align:center;display: none"><tbody><tr><td>显示结果</td><td>描述</td><td>实体名称</td><td>实体编号</td></tr><tr><td> </td><td>空格</td><td>& nbsp;</td><td>& #160;</td></tr><tr><td><</td><td>小于号</td><td>& lt;</td><td>& #60;</td></tr><tr><td>></td><td>大于号</td><td>& gt;</td><td>& #62;</td></tr><tr><td>&</td><td>和号</td><td>& amp;</td><td>& #38;</td></tr><tr><td>"</td><td>双引号</td><td>& quot;</td><td>& #34;</td></tr><tr><td>'</td><td>单引号</td><td>& apos;(IE不支持)</td><td>& #39;</td></tr></tbody></table><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;注意：&lt;b&gt;转义字符&lt;/b&gt;中的 &lt;b&gt;&amp;&lt;/b&gt; 与 &lt;b&gt;字母&lt;/b&gt; 中间没有空格，&lt;span style=&quot;color:red&quot;&gt;这里是有空格的&lt;/span&gt; 是为了防止转义。    ⊙﹏⊙‖∣° 真尴尬～～ &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;t
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>hexo 常用命令</title>
    <link href="https://bingbingliang.github.io//posts/16107/"/>
    <id>https://bingbingliang.github.io//posts/16107/</id>
    <published>2016-08-10T16:00:00.000Z</published>
    <updated>2019-06-11T16:22:34.330Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="创建一个新帖子"><a href="#创建一个新帖子" class="headerlink" title="创建一个新帖子"></a>创建一个新帖子</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="运行服务器"><a href="#运行服务器" class="headerlink" title="运行服务器"></a>运行服务器</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="部署到远程站点"><a href="#部署到远程站点" class="headerlink" title="部署到远程站点"></a>部署到远程站点</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><h3 id="清理缓存"><a href="#清理缓存" class="headerlink" title="清理缓存"></a>清理缓存</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></tbody></table></figure><h2 id="总结常用命令"><a href="#总结常用命令" class="headerlink" title="总结常用命令"></a>总结常用命令</h2><h3 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] <span class="string">"title"</span></span><br></pre></td></tr></tbody></table></figure><p>你可以在命令中指定文章的布局（layout），默认为 post，可以通过修改 _config.yml 中的 default_layout 参数来指定默认布局。</p><h3 id="布局（Layout）"><a href="#布局（Layout）" class="headerlink" title="布局（Layout）"></a>布局（Layout）</h3><p>Hexo 有三种默认布局：post、page 和 draft，它们分别对应不同的路径，而您自定义的其他布局和 post 相同，都将储存到 source/_posts 文件夹。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">布局    路径</span><br><span class="line">post<span class="built_in">source</span>/_posts</span><br><span class="line">page<span class="built_in">source</span></span><br><span class="line">draft<span class="built_in">source</span>/_drafts</span><br></pre></td></tr></tbody></table></figure><p>hexo默认你的文件为post 然后你就可以运行 hexo server 来本地运行实时查看你写的文章，draft 为你的草稿文件夹，在创建文章的时候，只要指定文章的模板是draft，就可以将文章创建到source/_drafts/目录下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new draft Test</span><br></pre></td></tr></tbody></table></figure><p>这样就会将Test这篇文章作为草稿放到_drafts目录下了，draft模板是提前定义好的，在./scaffolds目录中。放在_drafts目录中的草稿，使用hexo g命令生成静态文件的时候，是不会将草稿也生成的。</p><p>如果想要查看草稿的效果，可以在启动本地服务的时候增加一个参数：hexo s –draft ，或者在 _config.yml文件中进行配置：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">render_drafts: <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><p>这样每次启动本地服务的时候，都会渲染编写的草稿。</p><p>编写好草稿后，可以使用以下命令，将草稿发布到_posts目录中：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo publish [layout] <span class="string">"title"</span></span><br></pre></td></tr></tbody></table></figure><p>例如：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo publish [post] Test</span><br></pre></td></tr></tbody></table></figure><p>post模板也是在./scaffolds目录中定义好的，发布命令执行后，_drafts目录中的草稿也就被移除掉了。</p><p>注意：<br>hexo publish命令默认使用post模板。</p><p>通过对上面layout 情况为 post和 draft的阐释，大家应该会对layout大概会有个了解了。那么layout为page的时候到底会发生什么呢？</p><p>我们尝试一下下面这个命令</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page “about”</span><br></pre></td></tr></tbody></table></figure><p>这个时候你打开source文件夹你会发现一个about的文件夹，里面会有一个index.md的文件。</p><p>编辑index.md文件，像之前post和draft的情况一样，我们在其中输入一些测试的内容，然后依次执行hexo g，运行hexo s。</p><p>打开4000端口之后，你会发现你依然看不到你刚才编辑的index.md的内容。</p><p>那么这部分的内容到底在哪里呢？如何才能看到呢？我们将url增加‘/about’的内容，也就是说把url改为：‘<a href="http://localhost:4000/about’" target="_blank" rel="noopener">http://localhost:4000/about’</a> 然后回车。这个时候你就会发现你刚才编辑的index.md的内容就会出现在这里。</p><p>其实，在你执行hexo g命令的时候，已经将index.md文件的内容生成在了public文件夹下面，你去public文件夹中寻找，会发现一个about文件夹，这个about文件夹下有一个index.html文件。</p><p>一般情况下，如果一个page下面没有输入具体的文件名的话，就会打开这个文件夹下的index.html文件。那么也就是是说，这个时候你去source/about文件夹下再去新建一个myPageIntroduction.md的文件，编辑完之后执行hexo g和hexo s,然后在地址栏输入url的内容为：’<a href="http://localhost:4000/about/myPageIntroduction.html’" target="_blank" rel="noopener">http://localhost:4000/about/myPageIntroduction.html’</a> 就会看到你刚才编辑的myPageIntroduction.md的内容。</p><p>这就是layout 为 page的时候的作用。其实就是相当于生成一个新的路径，也就是我们说的url的path，或者也可以称作路由。通过这种方式，我们可以把我们的博客再进行细分各个内容版块，更有条理的组织我们的博客。</p><p>关于layout为page的情况，官网似乎没有详细说明。所以上述关于page的内容是我自己的一个总结，这个似乎不能完全解释page的作用，但是仅仅从组织博客内容的版块来看，是可以应用和解释的。</p><p></p><hr>本文部分内容参考链接：<br><a href="https://blog.csdn.net/abc_soul/article/details/83147583" target="_blank" rel="noopener">https://blog.csdn.net/abc_soul/article/details/83147583</a><p></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>第三方登陆</title>
    <link href="https://bingbingliang.github.io//posts/138df9fc/"/>
    <id>https://bingbingliang.github.io//posts/138df9fc/</id>
    <published>2015-02-07T16:00:00.000Z</published>
    <updated>2019-06-20T17:03:30.222Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、什么是第三方登录？"><a href="#1、什么是第三方登录？" class="headerlink" title="1、什么是第三方登录？"></a>1、什么是第三方登录？</h2><ul><li>所谓的第三方登录就是利用用户在第三方平台上已有的账号快速完成自己应用的登录或注册功能。</li><li>而这里的第三方平台，一般是已经有大量用户的平台，如国内的新浪微博、QQ空间、微信、外国的Facebook、twitter等等。</li><li>第三方登录不是一个具体的接口，而是一种思想或者一套步骤。</li></ul><h2 id="2、为什么要使用第三方登录？"><a href="#2、为什么要使用第三方登录？" class="headerlink" title="2、为什么要使用第三方登录？"></a>2、为什么要使用第三方登录？</h2><ul><li>简单、方便、快捷、深受用户喜欢。</li><li>2、简化注册或登录流程。</li></ul><h2 id="3、第三方登录的优点？"><a href="#3、第三方登录的优点？" class="headerlink" title="3、第三方登录的优点？"></a>3、第三方登录的优点？</h2><ul><li>对网站而言无非是简化登陆过程，降低注册门槛，获取海量新用户。</li><li>对用户而言，注册简单，一键式的点击成为网站会员，深受用户喜欢。</li></ul><h2 id="4、第三方登录的缺点？"><a href="#4、第三方登录的缺点？" class="headerlink" title="4、第三方登录的缺点？"></a>4、第三方登录的缺点？</h2><ul><li>安全性不能保证。 可能造成个人信息泄露。</li><li>隐私性不能保证。</li><li>不能更详尽的统计用户信息，无法给用户发送本站消息。</li></ul><h2 id="5、第三方登录适用场景？"><a href="#5、第三方登录适用场景？" class="headerlink" title="5、第三方登录适用场景？"></a>5、第三方登录适用场景？</h2><ul><li>对于工具型、游戏型、内容型等应用，注重的是工具的使用、内容的提供，适合把第三方登录放在优先的位置，甚至只提供第三方登录就行，免去用户注册。</li><li>对于电商类应用，注重自己账号体系的建立、注重用户后续的营销，第三方登录只是作为补充，将第三方登录置于较弱的位置，为没有账号的用户提供快速登录。</li><li>对于支付类、金融类应用，强调安全性、强调隐私性，一般不提供第三方登录。如果这些类型应用提供第三方登录，让用户觉得不安全，感觉自己的信息会通过第三方授权泄露出去。</li></ul><h2 id="6、第三方登录实现流程。"><a href="#6、第三方登录实现流程。" class="headerlink" title="6、第三方登录实现流程。"></a>6、第三方登录实现流程。</h2><ul><li>使用第三方登录，验证获取本地用户的UID，根据UID查询用户的信息，如果查到使用用户信息登录成功。</li><li>如果没有查到用户信息，判断用户是否有本站账号，有的话输入相关信息，绑定，登录成功。</li><li>如果没有本站账号，注册，绑定，登录成功。</li></ul><h2 id="7、如何看待第三方登录？"><a href="#7、如何看待第三方登录？" class="headerlink" title="7、如何看待第三方登录？"></a>7、如何看待第三方登录？</h2><ul><li>第一种：传统的注册的方式，注册门槛高，易在登录页面就流失用户。</li><li>可能很少app会用，没有留下用户的信息，无法跟踪用户的行为。</li><li>第三方注册后系统默认给用户分配一个ID，用户可见也不可见。</li><li>第三方注册后还要手动添加数据（给人一种欺骗注册的感觉，让用户讨厌）。</li></ul><h2 id="8、三个群体的思考"><a href="#8、三个群体的思考" class="headerlink" title="8、三个群体的思考"></a>8、三个群体的思考</h2><p>1）用户的角度</p><pre><code>第三方登陆方便了用户日常的网络生活，身在一个离不开网络的时代，每天都面对着不同的登陆界面，能有一种简单的登陆方式显得很重要。第三方登陆方便快捷，且很多资料信息可以公用，并可以将自己在某个app的动态信息同步到各个sns平台。于是有些犯懒的用户可能会养成一种“一个账号走江湖”的 心里。但话说回来，无论什么事只用一种方式处理肯定会在阴沟里翻船的，比如哪天你的微博号被封了，你的QQ号被盗了，株连下来的相关app也不能登录了，注册新账号的话，那么之前你在网络上记录的生活也都回归到零了，那个时候，你又该怎么办呢？</code></pre><p>2）本地客户端角度</p><pre><code>对本地应用而言无非是简化登录过程，降低注册门槛，获取海量新用户。 在争抢用户的竞争中，提高用户的转化率是决定能不能突出重围的重要因素。同样的事情都有两面性，我们利用第三方登陆的这种方式，在应程度上是依赖第三方的 一种行为，在知乎上看到一篇很有激情的文章，说的就是关于使用第三方登录都与app应用的限制，链接网址是www.zhihu.com/question/19618841； 虽然有些说的极端了点，但在某种程度上也是对app设计者或者投资人的一种警醒，而对于那种直接去掉本地注册的app，更应该好好思考一下自己app的未来发展，保重啊~~~再者就是用户本事对第三方登录的犹豫，就是关于隐私的暴漏，大家的潜意识下是不想在随便一个app上暴漏自己过多的信息的。</code></pre><p>3）第三方角度</p><p>   第三方账号貌似像个大老板一样，随便给你开个口就可以让你活的好点，把口一掐，估计你是活不太好了，而且可以很好的继续扩大它本身的用户 基数。我目前还没有想到这这种绑定对于这些大boss有什么坏处，在这场以用户数量定输赢的博弈当中，强大的第三方貌似永远是胜者。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1、什么是第三方登录？&quot;&gt;&lt;a href=&quot;#1、什么是第三方登录？&quot; class=&quot;headerlink&quot; title=&quot;1、什么是第三方登录？&quot;&gt;&lt;/a&gt;1、什么是第三方登录？&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;所谓的第三方登录就是利用用户在第三方平台上已有的账号快速
      
    
    </summary>
    
      <category term="php" scheme="https://bingbingliang.github.io/categories/php/"/>
    
    
      <category term="php" scheme="https://bingbingliang.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>php实现单点登陆</title>
    <link href="https://bingbingliang.github.io//posts/97b8eb2e/"/>
    <id>https://bingbingliang.github.io//posts/97b8eb2e/</id>
    <published>2015-01-31T16:00:00.000Z</published>
    <updated>2019-06-20T17:03:30.226Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-准备两个虚拟域名"><a href="#1-准备两个虚拟域名" class="headerlink" title="1.准备两个虚拟域名"></a>1.准备两个虚拟域名</h2><p>127.0.0.1  <a href="http://www.openpoor.com" target="_blank" rel="noopener">www.openpoor.com</a></p><p>127.0.0.1  <a href="http://www.myspace.com" target="_blank" rel="noopener">www.myspace.com</a></p><h2 id="2-在openpoor的根目录下创建以下文件"><a href="#2-在openpoor的根目录下创建以下文件" class="headerlink" title="2.在openpoor的根目录下创建以下文件"></a>2.在openpoor的根目录下创建以下文件</h2><p>index.PHP<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><?php  </span><br><span class="line">session_start();  </span><br><span class="line">  </span><br><span class="line">?>  </span><br><span class="line"><!DOCTYPE html>  </span><br><span class="line"><html>  </span><br><span class="line"><head>  </span><br><span class="line"><meta charset="UTF-8"/>  </span><br><span class="line"><title>sync login</title>  </span><br><span class="line"></head>  </span><br><span class="line"><body>  </span><br><span class="line">  </span><br><span class="line"><?php if(empty($_SESSION['username'])):?>  </span><br><span class="line">hello,游客;请先<a href="login.php">登录</a><a href="http://www.myspace.com/index.php">进入空间</a>  </span><br><span class="line"><?php else: ?>  </span><br><span class="line">hello,<?php echo $_SESSION['username']; ?>;<a href="http://www.myspace.com/index.php">进入空间</a>  </span><br><span class="line"><?php endif; ?>  </span><br><span class="line">  <a href="http://www.openpoor.com/index.php">home</a>  </span><br><span class="line"></body>  </span><br><span class="line"></html></span><br></pre></td></tr></tbody></table></figure><p></p><p>login.php</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><?php  </span><br><span class="line">session_start();  </span><br><span class="line">if(!empty($_POST['username'])){  </span><br><span class="line">  require '../Des.php';  </span><br><span class="line">  $_SESSION['username'] = $_POST['username'];  </span><br><span class="line">  $redirect = 'http://www.openpoor.com/index.php';  </span><br><span class="line">  header('Location:http://www.openpoor.com/sync.php?redirect='.urlencode($redirect).'&code='.Des::encrypt($_POST['username'],'openpoor'));exit;  </span><br><span class="line">}  </span><br><span class="line">?>  </span><br><span class="line"><!DOCTYPE html>  </span><br><span class="line"><html>  </span><br><span class="line"><head>  </span><br><span class="line"><meta charset="UTF-8"/>  </span><br><span class="line"><title>sync login</title>  </span><br><span class="line"></head>  </span><br><span class="line"><body>  </span><br><span class="line"><form action="" method="post">  </span><br><span class="line">  <input type="text" name="username" placeholder="用户名"/>  </span><br><span class="line">  <input type="text" name="password" placeholder="密码"/>  </span><br><span class="line">  <input type="submit" value="登录"/>  </span><br><span class="line"></form>  </span><br><span class="line"></body>  </span><br><span class="line"></html></span><br></pre></td></tr></tbody></table></figure><p>sync.php</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><?php  </span><br><span class="line">$redirect = empty($_GET['redirect']) ? 'www.openpoor.com' : $_GET['redirect'];  </span><br><span class="line">if(empty($_GET['code'])){    </span><br><span class="line">  header('Loaction:http://'.urldecode($redirect));  </span><br><span class="line">  exit;  </span><br><span class="line">}  </span><br><span class="line">  </span><br><span class="line">$apps = array(  </span><br><span class="line">  'www.myspace.com/slogin.php'  </span><br><span class="line">);  </span><br><span class="line">?>  </span><br><span class="line"><!DOCTYPE html>  </span><br><span class="line"><html>  </span><br><span class="line"><head>  </span><br><span class="line"><meta charset="UTF-8"/>  </span><br><span class="line"><?php foreach($apps as $v): ?>  </span><br><span class="line"><script type="text/javascript" src="http://<?php echo $v.'?code='.$_GET['code'] ?>"></script>  </span><br><span class="line"><?php endforeach; ?>  </span><br><span class="line"><title>passport</title>  </span><br><span class="line"></head>  </span><br><span class="line"><body>  </span><br><span class="line"><script type="text/javascript">  </span><br><span class="line">window.onload=function(){  </span><br><span class="line">  location.replace('<?php echo $redirect; ?>');  </span><br><span class="line">}  </span><br><span class="line"></script>  </span><br><span class="line"></body>  </span><br><span class="line"></html></span><br></pre></td></tr></tbody></table></figure><h2 id="3-在myspace的根目录下创建如下文件"><a href="#3-在myspace的根目录下创建如下文件" class="headerlink" title="3.在myspace的根目录下创建如下文件"></a>3.在myspace的根目录下创建如下文件</h2><p>slogin文件 完成session的设置</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><?php  </span><br><span class="line">session_start();  </span><br><span class="line">header('Content-Type:text/javascript; charset=utf-8');  </span><br><span class="line">if(!empty($_GET['code'])){  </span><br><span class="line">  require '../Des.php';  </span><br><span class="line">  $username = Des::decrypt($_GET['code'],'openpoor');  </span><br><span class="line">  if(!empty($username)){  </span><br><span class="line">    header('P3P: CP="CURa ADMa DEVa PSAo PSDo OUR BUS UNI PUR INT DEM STA PRE COM NAV OTC NOI DSP COR"');  </span><br><span class="line">    $_SESSION['username'] = $username;  </span><br><span class="line">  }  </span><br><span class="line">}  </span><br><span class="line">?></span><br></pre></td></tr></tbody></table></figure><p>index.php</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><?php  </span><br><span class="line">session_start();  </span><br><span class="line">if(!empty($_SESSION['username']))  </span><br><span class="line">{  </span><br><span class="line">    echo "欢迎来到".$_SESSION['username']."的空间";  </span><br><span class="line">}else{  </span><br><span class="line">    echo "请先登录";  </span><br><span class="line">}  </span><br><span class="line">?></span><br></pre></td></tr></tbody></table></figure><h2 id="4-Des-php的文件内容如下"><a href="#4-Des-php的文件内容如下" class="headerlink" title="4.Des.php的文件内容如下"></a>4.Des.php的文件内容如下</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><?php  </span><br><span class="line">/** </span><br><span class="line"> *@see Yii CSecurityManager; </span><br><span class="line"> */  </span><br><span class="line">class Des{  </span><br><span class="line">  </span><br><span class="line">  public static function encrypt($data,$key){  </span><br><span class="line">      $module=mcrypt_module_open('des','', MCRYPT_MODE_CBC,'');  </span><br><span class="line">      $key=substr(md5($key),0,mcrypt_enc_get_key_size($module));  </span><br><span class="line">      srand();  </span><br><span class="line">      $iv=mcrypt_create_iv(mcrypt_enc_get_iv_size($module), MCRYPT_RAND);  </span><br><span class="line">      mcrypt_generic_init($module,$key,$iv);  </span><br><span class="line">      $encrypted=$iv.mcrypt_generic($module,$data);  </span><br><span class="line">      mcrypt_generic_deinit($module);  </span><br><span class="line">      mcrypt_module_close($module);  </span><br><span class="line">      return md5($data).'_'.base64_encode($encrypted);  </span><br><span class="line">  }  </span><br><span class="line">    </span><br><span class="line">  public static function decrypt($data,$key){      </span><br><span class="line">      $_data = explode('_',$data,2);  </span><br><span class="line">      if(count($_data)<2){  </span><br><span class="line">    return false;  </span><br><span class="line">      }  </span><br><span class="line">      $data = base64_decode($_data[1]);        </span><br><span class="line">      $module=mcrypt_module_open('des','', MCRYPT_MODE_CBC,'');  </span><br><span class="line">      $key=substr(md5($key),0,mcrypt_enc_get_key_size($module));  </span><br><span class="line">      $ivSize=mcrypt_enc_get_iv_size($module);  </span><br><span class="line">      $iv=substr($data,0,$ivSize);  </span><br><span class="line">      mcrypt_generic_init($module,$key,$iv);  </span><br><span class="line">      $decrypted=mdecrypt_generic($module,substr($data,$ivSize,strlen($data)));  </span><br><span class="line">      mcrypt_generic_deinit($module);  </span><br><span class="line">      mcrypt_module_close($module);  </span><br><span class="line">      $decrypted = rtrim($decrypted,"\0");         </span><br><span class="line">      if($_data[0]!=md5($decrypted)){  </span><br><span class="line">    return false;  </span><br><span class="line">      }  </span><br><span class="line">      return $decrypted;  </span><br><span class="line">  }  </span><br><span class="line">    </span><br><span class="line">}  </span><br><span class="line">?></span><br></pre></td></tr></tbody></table></figure><p>当在openpoor登录后将session信息传到其他域名下的文件下进行处理，以script标签包含的形式进行运行。</p><h2 id="5-此时访问www-openpoor-com和www-myspace-com都是未登录状态"><a href="#5-此时访问www-openpoor-com和www-myspace-com都是未登录状态" class="headerlink" title="5.此时访问www.openpoor.com和www.myspace.com都是未登录状态"></a>5.此时访问<a href="http://www.openpoor.com和www.myspace.com都是未登录状态" target="_blank" rel="noopener">www.openpoor.com和www.myspace.com都是未登录状态</a></h2><p><img src="!--￼6-->/img/cookiesession/dandian1.png" alt><br><img src="!--￼7-->/img/cookiesession/dandian2.png" alt></p><p>登录后两个域名下都是登录状态</p><p><img src="!--￼8-->/img/cookiesession/dandian3.png" alt><br><img src="!--￼9-->/img/cookiesession/dandian4.png" alt></p><p></p><hr><br>到此我们实现了一个简单的单点登录。<p></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-准备两个虚拟域名&quot;&gt;&lt;a href=&quot;#1-准备两个虚拟域名&quot; class=&quot;headerlink&quot; title=&quot;1.准备两个虚拟域名&quot;&gt;&lt;/a&gt;1.准备两个虚拟域名&lt;/h2&gt;&lt;p&gt;127.0.0.1  &lt;a href=&quot;http://www.openpoo
      
    
    </summary>
    
      <category term="php" scheme="https://bingbingliang.github.io/categories/php/"/>
    
    
      <category term="php" scheme="https://bingbingliang.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>session&amp;cookie</title>
    <link href="https://bingbingliang.github.io//posts/9c7b25c7/"/>
    <id>https://bingbingliang.github.io//posts/9c7b25c7/</id>
    <published>2015-01-24T16:00:00.000Z</published>
    <updated>2019-06-20T17:03:30.304Z</updated>
    
    <content type="html"><![CDATA[<p>会话（Session）跟踪是Web程序中常用的技术，用来跟踪用户的整个会话。常用的会话跟踪技术是Cookie与Session。Cookie通过在客户端记录信息确定用户身份，Session通过在服务器端记录信息确定用户身份。</p><p>本章将系统地讲述Cookie与Session机制，并比较说明什么时候不能用Cookie，什么时候不能用Session。</p><h2 id="1-1-Cookie机制"><a href="#1-1-Cookie机制" class="headerlink" title="1.1  Cookie机制"></a>1.1  Cookie机制</h2><p>在程序中，会话跟踪是很重要的事情。理论上，一个用户的所有请求操作都应该属于同一个会话，而另一个用户的所有请求操作则应该属于另一个会话，二者不能混淆。例如，用户A在超市购买的任何商品都应该放在A的购物车内，不论是用户A什么时间购买的，这都是属于同一个会话的，不能放入用户B或用户C的购物车内，这不属于同一个会话。</p><p>而Web应用程序是使用HTTP协议传输数据的。HTTP协议是无状态的协议。一旦数据交换完毕，客户端与服务器端的连接就会关闭，再次交换数据需要建立新的连接。这就意味着服务器无法从连接上跟踪会话。即用户A购买了一件商品放入购物车内，当再次购买商品时服务器已经无法判断该购买行为是属于用户A的会话还是用户B的会话了。要跟踪该会话，必须引入一种机制。</p><p>Cookie就是这样的一种机制。它可以弥补HTTP协议无状态的不足。在Session出现之前，基本上所有的网站都采用Cookie来跟踪会话。</p><h2 id="1-1-1-什么是Cookie"><a href="#1-1-1-什么是Cookie" class="headerlink" title="1.1.1  什么是Cookie"></a>1.1.1  什么是Cookie</h2><p>Cookie意为“甜饼”，是由W3C组织提出，最早由Netscape社区发展的一种机制。目前Cookie已经成为标准，所有的主流浏览器如IE、Netscape、Firefox、Opera等都支持Cookie。</p><p>由于HTTP是一种无状态的协议，服务器单从网络连接上无从知道客户身份。怎么办呢？就给客户端们颁发一个通行证吧，每人一个，无论谁访问都必须携带自己通行证。这样服务器就能从通行证上确认客户身份了。这就是Cookie的工作原理。</p><p>Cookie实际上是一小段的文本信息。客户端请求服务器，如果服务器需要记录该用户状态，就使用response向客户端浏览器颁发一个Cookie。客户端浏览器会把Cookie保存起来。当浏览器再请求该网站时，浏览器把请求的网址连同该Cookie一同提交给服务器。服务器检查该Cookie，以此来辨认用户状态。服务器还可以根据需要修改Cookie的内容。</p><p>查看某个网站颁发的Cookie很简单。在浏览器地址栏输入JavaScript:alert (document. cookie)就可以了（需要有网才能查看）。JavaScript脚本会弹出一个对话框显示本网站颁发的所有Cookie的内容，如图1.1所示。<br><img src="!--￼0-->/img/cookiesession/1_2.jpg" alt><br>查看某个网站颁发的Cookie很简单。在浏览器地址栏输入JavaScript:alert (document. cookie)就可以了（需要有网才能查看）。JavaScript脚本会弹出一个对话框显示本网站颁发的所有Cookie的内容，如图1.1所示。<br><img src="!--￼1-->/img/cookiesession/1.1.jpg" alt><br>图1.1  Baidu网站颁发的Cookie</p><p>图1.1中弹出的对话框中显示的为Baidu网站的Cookie。其中第一行BAIDUID记录的就是笔者的身份helloweenvsfei，只是Baidu使用特殊的方法将Cookie信息加密了。</p><p>注意：Cookie功能需要浏览器的支持。</p><p>如果浏览器不支持Cookie（如大部分手机中的浏览器）或者把Cookie禁用了，Cookie功能就会失效。</p><p>不同的浏览器采用不同的方式保存Cookie。</p><p>IE浏览器会在“C:\Documents and Settings\你的用户名\Cookies”文件夹下以文本文件形式保存，一个文本文件保存一个Cookie。</p><h2 id="1-2-3-Session的生命周期"><a href="#1-2-3-Session的生命周期" class="headerlink" title="1.2.3  Session的生命周期"></a>1.2.3  Session的生命周期</h2><p>Session保存在服务器端。为了获得更高的存取速度，服务器一般把Session放在内存里。每个用户都会有一个独立的Session。如果Session内容过于复杂，当大量客户访问服务器时可能会导致内存溢出。因此，Session里的信息应该尽量精简。</p><p>Session在用户第一次访问服务器的时候自动创建。需要注意只有访问JSP、Servlet等程序时才会创建Session，只访问HTML、IMAGE等静态资源并不会创建Session。如果尚未生成Session，也可以使用request.getSession(true)强制生成Session。</p><p>Session生成后，只要用户继续访问，服务器就会更新Session的最后访问时间，并维护该Session。用户每访问服务器一次，无论是否读写Session，服务器都认为该用户的Session“活跃（active）”了一次。</p><h2 id="1-2-4-Session的有效期"><a href="#1-2-4-Session的有效期" class="headerlink" title="1.2.4  Session的有效期"></a>1.2.4  Session的有效期</h2><p>由于会有越来越多的用户访问服务器，因此Session也会越来越多。为防止内存溢出，服务器会把长时间内没有活跃的Session从内存删除。这个时间就是Session的超时时间。如果超过了超时时间没访问过服务器，Session就自动失效了。</p><p>Session的超时时间为maxInactiveInterval属性，可以通过对应的getMaxInactiveInterval()获取，通过setMaxInactiveInterval(longinterval)修改。</p><p>Session的超时时间也可以在web.xml中修改。另外，通过调用Session的invalidate()方法可以使Session失效。</p><h2 id="1-2-5-Session的常用方法"><a href="#1-2-5-Session的常用方法" class="headerlink" title="1.2.5  Session的常用方法"></a>1.2.5  Session的常用方法</h2><p>Session中包括各种方法，使用起来要比Cookie方便得多。Session的常用方法如表1.2所示。</p><p>表1.2  HttpSession的常用方法</p><p>方  法  名</p><p>描    述</p><p>void setAttribute(String attribute, Object value)</p><p>设置Session属性。value参数可以为任何Java Object。通常为Java Bean。value信息不宜过大</p><p>String getAttribute(String attribute)</p><p>返回Session属性</p><p>Enumeration getAttributeNames()</p><p>返回Session中存在的属性名</p><p>void removeAttribute(String attribute)</p><p>移除Session属性</p><p>String getId()</p><p>返回Session的ID。该ID由服务器自动创建，不会重复</p><p>long getCreationTime()</p><p>返回Session的创建日期。返回类型为long，常被转化为Date类型，例如：Date createTime = new Date(session.get CreationTime())</p><p>long getLastAccessedTime()</p><p>返回Session的最后活跃时间。返回类型为long</p><p>int getMaxInactiveInterval()</p><p>返回Session的超时时间。单位为秒。超过该时间没有访问，服务器认为该Session失效</p><p>void setMaxInactiveInterval(int second)</p><p>设置Session的超时时间。单位为秒</p><p>void putValue(String attribute, Object value)</p><p>不推荐的方法。已经被setAttribute(String attribute, Object Value)替代</p><p>Object getValue(String attribute)</p><p>不被推荐的方法。已经被getAttribute(String attr)替代</p><p>boolean isNew()</p><p>返回该Session是否是新创建的</p><p>void invalidate()</p><p>使该Session失效</p><p>Tomcat中Session的默认超时时间为20分钟。通过setMaxInactiveInterval(int seconds)修改超时时间。可以修改web.xml改变Session的默认超时时间。例如修改为60分钟：</p><p><session-config></session-config></p><p>   <session-timeout>60</session-timeout>      <!-- 单位：分钟 --></p><p></p><p>注意：<session-timeout>参数的单位为分钟，而setMaxInactiveInterval(int s)单位为秒。</session-timeout></p><h2 id="1-2-6-Session对浏览器的要求"><a href="#1-2-6-Session对浏览器的要求" class="headerlink" title="1.2.6  Session对浏览器的要求"></a>1.2.6  Session对浏览器的要求</h2><p>虽然Session保存在服务器，对客户端是透明的，它的正常运行仍然需要客户端浏览器的支持。这是因为Session需要使用Cookie作为识别标志。HTTP协议是无状态的，Session不能依据HTTP连接来判断是否为同一客户，因此服务器向客户端浏览器发送一个名为JSESSIONID的Cookie，它的值为该Session的id（也就是HttpSession.getId()的返回值）。Session依据该Cookie来识别是否为同一用户。</p><p>该Cookie为服务器自动生成的，它的maxAge属性一般为–1，表示仅当前浏览器内有效，并且各浏览器窗口间不共享，关闭浏览器就会失效。</p><p>因此同一机器的两个浏览器窗口访问服务器时，会生成两个不同的Session。但是由浏览器窗口内的链接、脚本等打开的新窗口（也就是说不是双击桌面浏览器图标等打开的窗口）除外。这类子窗口会共享父窗口的Cookie，因此会共享一个Session。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;会话（Session）跟踪是Web程序中常用的技术，用来跟踪用户的整个会话。常用的会话跟踪技术是Cookie与Session。Cookie通过在客户端记录信息确定用户身份，Session通过在服务器端记录信息确定用户身份。&lt;/p&gt;
&lt;p&gt;本章将系统地讲述Cookie与Ses
      
    
    </summary>
    
      <category term="php" scheme="https://bingbingliang.github.io/categories/php/"/>
    
    
      <category term="php" scheme="https://bingbingliang.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>密码的强度认证</title>
    <link href="https://bingbingliang.github.io//posts/750c9664/"/>
    <id>https://bingbingliang.github.io//posts/750c9664/</id>
    <published>2015-01-17T16:00:00.000Z</published>
    <updated>2019-06-20T17:03:30.216Z</updated>
    
    <content type="html"><![CDATA[<p>密码强度认证，我的这个demo的简单的规则：</p><ul><li>纯数字或者字母：弱</li><li>数字和字母：中</li><li>数字，字母特殊字符：强</li></ul><p>好了，规则说清楚了直接上代码：<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><!DOCTYPE html>  </span><br><span class="line">< html>  </span><br><span class="line">< head lang="en">  </span><br><span class="line">    < meta charset="UTF-8">  </span><br><span class="line">    < title>密码强度验证</title>  </span><br><span class="line">< /head>  </span><br><span class="line">< body>  </span><br><span class="line">    密码：< input type="text"/><br>  </span><br><span class="line">    < span></span>  </span><br><span class="line">    <s cript src="jq.js"></ script>  </span><br><span class="line">    <s cript type="text/javascript">  </span><br><span class="line">        $("input").blur(function () {  </span><br><span class="line">            var pass = $("input").val();  </span><br><span class="line">            var reg1 = /^[0-9]+$/;  </span><br><span class="line">            var reg2 = /^[a-zA-Z]+$/;  </span><br><span class="line">            var reg3 = /^[a-zA-Z0-9]+$/;  </span><br><span class="line">            var reg4 = /^[a-zA-Z0-9!@#$%^&*()_+-=]+$/;  </span><br><span class="line">  </span><br><span class="line">            if (pass.length < 6) {  </span><br><span class="line">                $("span").text("密码最少六位");  </span><br><span class="line">            } else if (reg1.test(pass) || reg2.test(pass)) {  </span><br><span class="line">                $("span").text("弱");  </span><br><span class="line">            } else if(reg3.test(pass)) {  </span><br><span class="line">                $("span").text("中");  </span><br><span class="line">            } else if(reg4.test(pass)) {  </span><br><span class="line">                $("span").text("强");  </span><br><span class="line">            } else {  </span><br><span class="line">                $("span").text("密码合格");  </span><br><span class="line">            }  </span><br><span class="line">        });  </span><br><span class="line">    </script>  </span><br><span class="line"></body>  </span><br><span class="line"></html></span><br></pre></td></tr></tbody></table></figure><p></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;密码强度认证，我的这个demo的简单的规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;纯数字或者字母：弱&lt;/li&gt;
&lt;li&gt;数字和字母：中&lt;/li&gt;
&lt;li&gt;数字，字母特殊字符：强&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;好了，规则说清楚了直接上代码：&lt;br&gt;&lt;/p&gt;&lt;figure class=&quot;h
      
    
    </summary>
    
      <category term="php" scheme="https://bingbingliang.github.io/categories/php/"/>
    
    
      <category term="php" scheme="https://bingbingliang.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>PHP排序算法</title>
    <link href="https://bingbingliang.github.io//posts/2aaba884/"/>
    <id>https://bingbingliang.github.io//posts/2aaba884/</id>
    <published>2015-01-10T16:00:00.000Z</published>
    <updated>2019-06-20T17:03:30.215Z</updated>
    
    <content type="html"><![CDATA[<p>所谓排序，就是使一串记录，按照其中的某个或某些关键字的大小，递增或递减的排列起来的操作。排序算法，就是如何使得记录按照要求排列的方法。排序算法在很多领域得到相当地重视，尤其是在大量数据的处理方面。一个优秀的算法可以节省大量的资源。在各个领域中考虑到数据的各种限制和规范，要得到一个符合实际的优秀算法，得经过大量的推理和分析。</p><font color="red">分别使用插入排序法，冒泡排序法，选择排序法，快速排序法，将下面数组中的值进行按照从小到大的顺序进行排序操作。</font><p>$arr(12,43,57,32,51,76,36,91,28,46,40);</p><h2 id="1、插入排序法"><a href="#1、插入排序法" class="headerlink" title="1、插入排序法"></a>1、插入排序法</h2><p>分析：既定前面数字已经排好顺序，现在要把第n个数字插入到前面有序的数组中，使得这n个数字也是有序的放入其中，如此反复循环直至全部排好顺序。<br>具体代码实现如下：<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$arr(12,43,57,32,51,76,36,91,28,46,40);</span><br><span class="line">function insertSort($arr) {</span><br><span class="line">    $len=count($arr); </span><br><span class="line">    for($i=1, $i<$len; $i++) {</span><br><span class="line">        $tmp = $arr[$i];</span><br><span class="line">        for($j=$i-1;$j>=0;$j--) {</span><br><span class="line">            if($tmp < $arr[$j]) {</span><br><span class="line">                //比较大小当数字小时交换位置，将后面的数字与前面的数字进行互换操作</span><br><span class="line">                $arr[$j+1] = $arr[$j];</span><br><span class="line">                $arr[$j] = $tmp;</span><br><span class="line">            } else {</span><br><span class="line">                //不需要，直接跳过</span><br><span class="line">                break;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    return $arr;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><h2 id="2、冒泡排序法"><a href="#2、冒泡排序法" class="headerlink" title="2、冒泡排序法"></a>2、冒泡排序法</h2><p>分析：从前往后对相邻的两个数字依次进行比较调整，让较大的数字往下沉，让较小的数字往上升，即每相邻的数字进行对比排序，顺序不符合时将其调换位置。<br>具体代码实现如下：<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$arr(12,43,57,32,51,76,36,91,28,46,40);</span><br><span class="line">function bubbleSort($arr)</span><br><span class="line">{  </span><br><span class="line">  $len=count($arr);</span><br><span class="line">  for($i=1;$i<$len;$i++)</span><br><span class="line">  { //循环比较次数</span><br><span class="line">    for($k=0;$k<$len-$i;$k++)</span><br><span class="line">    {</span><br><span class="line">       if($arr[$k]>$arr[$k+1])</span><br><span class="line">        {</span><br><span class="line">            $tmp=$arr[$k+1];</span><br><span class="line">            $arr[$k+1]=$arr[$k];</span><br><span class="line">            $arr[$k]=$tmp;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  return $arr;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><h2 id="3、选择排序法"><a href="#3、选择排序法" class="headerlink" title="3、选择排序法"></a>3、选择排序法</h2><p>分析：选出最小的一个数字与第一个位置数字交换，之后再剩余的数当中再次找到最小的数字与第二个位置交换，依此循环到倒数第二个数字和最后一个数字比较结束为止。<br>具体代码实现如下：<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$arr(12,43,57,32,51,76,36,91,28,46,40);</span><br><span class="line">function selectSort($arr) {</span><br><span class="line"> $len=count($arr);</span><br><span class="line">    for($i=0; $i<$len-1; $i++) {</span><br><span class="line">        //假设最小值的位置</span><br><span class="line">        $p = $i;</span><br><span class="line">        for($j=$i+1; $j<$len; $j++) {</span><br><span class="line">            //$arr[$p] 已知的最小值</span><br><span class="line">            if($arr[$p] > $arr[$j]) {</span><br><span class="line">            //比较发现更小的记录下最小值的位置，并且在下次比较时采用已知的最小值进行比较。</span><br><span class="line">                $p = $j;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        //确定当前最小值的位置，保存到$p中。如果发现最小值的位置与当前假设的位置$i不同，则位置互换即可。</span><br><span class="line">        if($p != $i) {</span><br><span class="line">            $tmp = $arr[$p];</span><br><span class="line">            $arr[$p] = $arr[$i];</span><br><span class="line">            $arr[$i] = $tmp;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    return $arr;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>4、快速排序法</p><p>分析：通过一趟排序将要排序的数据分割成独立的两部分，其中一部分的所有数据都比另外一部分的所有数据都要小，然后再按此方法对这两部分数据分别进行快速排序，整个排序过程可以递归进行，以此达到整个数据变成有序序列。<br>具体代码实现如下：<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$arr(12,43,57,32,51,76,36,91,28,46,40);</span><br><span class="line">function quickSort($arr) {</span><br><span class="line">    //判断是否继续进行</span><br><span class="line">    $length = count($arr);</span><br><span class="line">    if($length <= 1) {</span><br><span class="line">        return $arr;</span><br><span class="line">    }</span><br><span class="line">    //选择第一个数字作为基准</span><br><span class="line">    $base_num = $arr[0];</span><br><span class="line">    //遍历除了基准外的所有数字，按照大小关系放入两个数组内，之后初始化两个数组</span><br><span class="line">    $left_array = array();  //小于基准</span><br><span class="line">    $right_array = array();  //大于基准</span><br><span class="line">    for($i=1; $i<$length; $i++) {</span><br><span class="line">        if($base_num > $arr[$i]) {</span><br><span class="line">            //放入左边数组</span><br><span class="line">            $left_array[] = $arr[$i];</span><br><span class="line">        } else {</span><br><span class="line">            //放入右边数组</span><br><span class="line">            $right_array[] = $arr[$i];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    //分别对两数组进行相同的排序处理方式递归</span><br><span class="line">    $left_array = quick_sort($left_array);</span><br><span class="line">    $right_array = quick_sort($right_array);</span><br><span class="line">    //合并数组</span><br><span class="line">    return array_merge($left_array, array($base_num), $right_array);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;所谓排序，就是使一串记录，按照其中的某个或某些关键字的大小，递增或递减的排列起来的操作。排序算法，就是如何使得记录按照要求排列的方法。排序算法在很多领域得到相当地重视，尤其是在大量数据的处理方面。一个优秀的算法可以节省大量的资源。在各个领域中考虑到数据的各种限制和规范，要得
      
    
    </summary>
    
      <category term="php" scheme="https://bingbingliang.github.io/categories/php/"/>
    
    
      <category term="php" scheme="https://bingbingliang.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>php使用mysql数据库</title>
    <link href="https://bingbingliang.github.io//posts/c36a15d5/"/>
    <id>https://bingbingliang.github.io//posts/c36a15d5/</id>
    <published>2015-01-03T16:00:00.000Z</published>
    <updated>2019-06-20T17:03:30.273Z</updated>
    
    <content type="html"><![CDATA[<h3>咱们先了解一下什么是mysql？先看一看官方的介绍：</h3><p>MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，目前属于Oracle 旗下产品。MySQL 最流行的关系型数据库管理系统，在 WEB 应用方面MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一。<br>MySQL是一种关联数据库管理系统，关联数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。<br>MySQL所使用的 SQL 语言是用于访问数据库的最常用标准化语言。MySQL 软件采用了双授权政策，它分为社区版和商业版，由于其体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，一般中小型网站的开发都选择 MySQL 作为网站数据库。<br>由于其社区版的性能卓越，搭配 PHP 和Apache 可组成良好的开发环境。</p><p><font color="red">表单的代码就不写了，直接上关于数据库方面的代码</font><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//首先来了解一下基本的sql语句</span><br><span class="line">选择：select * from table1 where 范围</span><br><span class="line">插入：insert into table1(field1,field2) values(value1,value2)</span><br><span class="line">删除：delete from table1 where 范围</span><br><span class="line">更新：update table1 set field1=value1 where 范围</span><br><span class="line">查找：select * from table1 where field1 like '%value1%' ---like的语法很精妙，查资料!</span><br><span class="line">排序：select * from table1 order by field1,field2 [desc]</span><br><span class="line">总数：select count as totalcount from table1</span><br><span class="line">求和：select sum(field1) as sumvalue from table1</span><br><span class="line">平均：select avg(field1) as avgvalue from table1</span><br><span class="line">最大：select max(field1) as maxvalue from table1</span><br><span class="line">最小：select min(field1) as minvalue from table1</span><br></pre></td></tr></tbody></table></figure><p></p><p>通过以上基本的sql语句，我想大家应该对mysql语句有所了解，看下面；<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">//使用pdo连接数据库！</span><br><span class="line">$dsn = "mysql:host=127.0.0.1;dbname=php7";//连接数据库  </span><br><span class="line">$db = new PDO($dsn,'root','root');//数据库账号密码  </span><br><span class="line">$name=$_POST['name'];//接值  </span><br><span class="line">//$name="zhangsan' or 'a' ='a";  </span><br><span class="line">$pwd=$_POST['pwd'];  </span><br><span class="line">$sql="select * from pdo1 where name='$name' and pwd ='$pwd'";  </span><br><span class="line">$sql="select * from pdo1 where name =? and pwd =?";  </span><br><span class="line">$stmt = $db->prepare($sql);  </span><br><span class="line">$exeres = $stmt->execute(array($name, $pwd));  </span><br><span class="line">if ($exeres) {  </span><br><span class="line">    while ($row = $stmt->fetch(PDO::FETCH_ASSOC)){  </span><br><span class="line">        print_r($row);  </span><br><span class="line">    }  </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>//使用mysqli连接数据库！<br>//使用面向对象的方法调用接口<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//创建对象并打开连接，最后一个参数是选择的数据库名称</span><br><span class="line">$mysqli = new mysqli('localhost','root','','volunteer');</span><br><span class="line">//检查连接是否成功</span><br><span class="line">if (mysqli_connect_errno()){</span><br><span class="line">//注意mysqli_connect_error()新特性</span><br><span class="line">die('Unable to connect!'). mysqli_connect_error();</span><br><span class="line">}</span><br><span class="line">$sql = "select * from vol_msg";</span><br><span class="line">//执行sql语句，完全面向对象的</span><br><span class="line">$result = $mysqli->query($sql);</span><br><span class="line">while($row = $result->fetch_array()){</span><br><span class="line">echo $row[0];</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>以上两种连接方式也是最常见的连接方式；以上两种介绍完了；遇到搜索能不能标红？<br>当然可以！来看如下！<br>在表单中遍历的时候，咱们可以使用php的一个函数来完成关键字的标红操作<br>使用str_replace()函数，来看这个函数的定义和用法<br>str_replace() 函数以其他字符替换字符串中的一些字符（区分大小写）。<br>语法</p><p>str_replace(find,replace,string,count)</p><p>参数     描述<br>find     必需。规定要查找的值。<br>replace 必需。规定替换 find 中的值的值。<br>string     必需。规定被搜索的字符串。<br>count     可选。对替换数进行计数的变量。</p><p>具体怎么应用？<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str_replace($key_word, '<font color=red>'.$key_word.'</font>',$content);</span><br></pre></td></tr></tbody></table></figure><p></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3&gt;咱们先了解一下什么是mysql？先看一看官方的介绍：&lt;/h3&gt;

&lt;p&gt;MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，目前属于Oracle 旗下产品。MySQL 最流行的关系型数据库管理系统，在 WEB 应用方面MySQL是最好的 RDBMS (
      
    
    </summary>
    
      <category term="php" scheme="https://bingbingliang.github.io/categories/php/"/>
    
    
      <category term="php" scheme="https://bingbingliang.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Lamp环境下安装及使用coreseek(linux)</title>
    <link href="https://bingbingliang.github.io//posts/7e2598be/"/>
    <id>https://bingbingliang.github.io//posts/7e2598be/</id>
    <published>2014-12-27T16:00:00.000Z</published>
    <updated>2019-06-20T17:03:30.228Z</updated>
    
    <content type="html"><![CDATA[<p>一.首先在你的Linux上先下载一个coreseek的一个linux的安装包,由于官网的下载地址已经不存在所以这里我已经以其他渠道下载完成</p><p>打开linux首先安装如下依赖包;(如果有的话只需要更新)</p><pre><code>yum -y install m4 autoconf automake libtool  yum -y install gcc gcc-c++ wget  yum -y install mysql-devel  </code></pre><p>##mmseg3是一个中文分词插件</p><p>二.如果没有下载的话可以将根本文档带的安装包上传到linux,如果安装包已经放好</p><p> 执行如下命令:</p><pre><code>tar zxvf coreseek-3.2.14.tar.gz               <span style="font-family:Calibri;">                #  </span>解压命令<pre name="code" class="python">make  make install  cd /usr/local/coreseek/etc                         #进入coreseek安装完成的路径  <pre name="code" class="python">cd coreseek-3.2.14                                 # 进入目录  cd mmseg-3.2.14/                                   # 进入中文分词插件  ./bootstrap ./configure --prefix=/usr/local/mmseg3 # 检测配置  make && make install                               #编译 && 编译安装  cd ../csft-3.2.14/                                 # 进入配置目录  sh buildconf.sh                                    # 执行脚本  ./configure --prefix=/usr/local/coreseek   --without-python --without-unixodbc --with-mmseg   --with-mmseg-includes=/usr/local/mmseg3/include/mmseg/   --with-mmseg-libs=/usr/local/mmseg3/lib/ --with-mysql --host=arm   #检测配置  </code></pre><p>三.安装过程需要修改一个配置文件</p><pre><code>vi src/sphinxexpr.cpp  </code></pre><p>四.然后将所有的T val = ExprEval ( this->m_pArg, tMatch )…..修改为:  T val = this->ExprEval ( this->m_pArg, tMatch )(建议大家将此文件拿到本地进行修改)</p><pre><code>make  make install  cd /usr/local/coreseek/etc                         #进入coreseek安装完成的路径  </code></pre><p>五.输入ls会看到3个文件:</p><ul><li>example.sql</li><li>sphinx.conf.dist</li><li>sphinx-min.conf.dist</li></ul><p>其中example.sql是示例sql脚本我们将其导入到数据库中的test数据库中作为测试数据(会创建两张表documents和tags)</p><pre><code>vi sphinx.conf  </code></pre><p>六.输入以下内容:</p><pre><code>source src1     #<span style="color:#000000;">代表数据源里面主要包含了数据库的配置信息，<span style="font-family:Calibri;">src1</span><span style="font-family:宋体;">表示数据源名字</span><span style="font-family:Calibri;">,</span><span style="font-family:宋体;">可以随便写。</span></span>  {      type                    = mysql      sql_host                = 192.168.214.128      sql_user                = root      sql_pass                = root      sql_db                  = test      sql_port                = 3306  # optional, default is 3306      sql_sock                              = /tmp/mysql.sock      sql_query_pre = SET NAMES utf8      sql_query               = SELECT id, group_id, UNIX_TIMESTAMP(date_added) AS date_added, title, content FROM documents      sql_attr_uint           = group_id      sql_attr_timestamp      = date_added      sql_query_info          = SELECT * FROM documents WHERE id=$id  }  index test1      #<span style="color:#000000;">代表为哪个数据源创建索引<span style="font-family:Calibri;">,</span><span style="font-family:宋体;">与</span><span style="font-family:Calibri;">source *** </span><span style="font-family:宋体;">是成对出现的，其中的</span><span style="font-family:Calibri;">source</span><span style="font-family:宋体;">参数的值必须是某一个数据源的名字。</span></span>  {      source                  = src1      path                    = /usr/local/coreseek/var/data/test1      docinfo                 = extern      charset_type            = zh_cn.utf-8      mlock           = 0      morphology      = none      min_word_len        = 1      html_strip      = 0      charset_dictpath        = /usr/local/mmseg3/etc/      ngram_len                    = 0  }  indexer  {      mem_limit               = 32M  }  searchd  {      port                    = 9312      log                     = /usr/local/coreseek/var/log/searchd.log      query_log               = /usr/local/coreseek/var/log/query.log      read_timeout            = 5      max_children            = 30      pid_file                = /usr/local/coreseek/var/log/searchd.pid      max_matches             = 1000      seamless_rotate         = 1      preopen_indexes         = 0      unlink_old              = 1  }  </code></pre><p>其他参数可以查看手册，这里不再赘述。</p><p>七.生成索引:</p><pre><code>/usr/local/coreseek/bin/indexer -c /usr/local/coreseek/etc/sphinx.conf --all   #<span style="color:#000000;">其中参数<span style="font-family:Calibri;">--all</span><span style="font-family:宋体;">表示生成所有索引</span></span>  </code></pre><p>当然也可以是索引的名字例如：/usr/local/coreseek/bin/indexer -c /usr/local/coreseek/etc/sphinx.conf test1</p><p>八.执行后可以在/usr/local/coreseek/var/data目录中看到多出一些文件,是以索引名为文件名的不同的扩展名的文件</p><p>在不启动sphinx的情况下即可测试命令:</p><pre><code><p><span style="color:#000000;"> /usr/local/coreseek/bin/search -c /usr/local/coreseek/etc/sphinx.conf number</span><span style="color:#000000;"> <span style="font-family:Calibri;"> #</span><span style="font-family:宋体;"> 这是开启</span><span style="font-family:Calibri;">sphinx</span><span style="font-family:宋体;">的命令行搜索就是说 </span><span style="font-family:Calibri;">number</span><span style="font-family:宋体;">是你要查询的数据名称</span></span></p><p><span style="color:#000000;"> /usr/local/coreseek/bin/searchd -c /usr/local/coreseek/etc/sphinx.conf<span style="font-family:Calibri;">                # </span>searchd<span style="font-family:宋体;">是开启</span><span style="font-family:Calibri;">sphinx</span><span style="font-family:宋体;">的搜索服务功能</span></span></p>  </code></pre><p>九.在站点域名目录下创建一个文件列如test.PHP</p><p>在test.php文件中写入如下内容:   (注意与test同级需要将本身的sphinxapi类加载进来)</p><pre><code><?php  header("content-type:text/html;charset=utf8");  include'./sphinxapi.php';  $sphinx= new SphinxClient();  $sphinx->SetServer  //('你linux上的ip地址',9312);  $res=$sphinx->Query("搜索字段","*");  //这里的*代表匹配所有定义好的规则  print_r($res);  ?>  </code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一.首先在你的Linux上先下载一个coreseek的一个linux的安装包,由于官网的下载地址已经不存在所以这里我已经以其他渠道下载完成&lt;/p&gt;
&lt;p&gt;打开linux首先安装如下依赖包;(如果有的话只需要更新)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yum -y install 
      
    
    </summary>
    
      <category term="php" scheme="https://bingbingliang.github.io/categories/php/"/>
    
    
      <category term="php" scheme="https://bingbingliang.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>递归实现无限极分类</title>
    <link href="https://bingbingliang.github.io//posts/2444cd2c/"/>
    <id>https://bingbingliang.github.io//posts/2444cd2c/</id>
    <published>2014-12-20T16:00:00.000Z</published>
    <updated>2019-06-20T17:03:30.210Z</updated>
    
    <content type="html"><![CDATA[<p>接下来咱们使用递归来完成无限极分类；<br>好了废话不多说；直接上demo；</p><p>index.php</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">        header("Content-type: text/html; charset=utf-8");  </span><br><span class="line">  </span><br><span class="line">/** </span><br><span class="line"> * 无限极分类 </span><br><span class="line"> */  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">$array = array(  </span><br><span class="line">    1 => array("id" => 1, "name" => "食物", "pid" => 0),  </span><br><span class="line">    2 => array("id" => 2, "name" => "衣服", "pid" => 0),  </span><br><span class="line">    3 => array("id" => 3, "name" => "水果", "pid" => 1),  </span><br><span class="line">    4 => array("id" => 4, "name" => "蔬菜", "pid" => 1),  </span><br><span class="line">    5 => array("id" => 5, "name" => "男装", "pid" => 2),  </span><br><span class="line">    6 => array("id" => 6, "name" => "女装", "pid" => 2),  </span><br><span class="line">    7 => array("id" => 7, "name" => "苹果", "pid" => 3),  </span><br><span class="line">    8 => array("id" => 8, "name" => "葡萄", "pid" => 3),  </span><br><span class="line">    9 => array("id" => 9, "name" => "番茄", "pid" => 4),  </span><br><span class="line">    10 => array("id" => 10, "name" => "土豆", "pid" => 4),  </span><br><span class="line">    11 => array("id" => 11, "name" => "T恤", "pid" => 5),  </span><br><span class="line">    12 => array("id" => 12, "name" => "衬衫", "pid" => 5),  </span><br><span class="line">    13 => array("id" => 13, "name" => "连衣裙", "pid" => 6),  </span><br><span class="line">    14 => array("id" => 14, "name" => "短裤", "pid" => 6),  </span><br><span class="line">);  </span><br><span class="line">  </span><br><span class="line">// 1 递归实现  </span><br><span class="line">function getList ($array, $pid, $tmp = "")  </span><br><span class="line">{  </span><br><span class="line">    for ($i = 1; $i <= count($array); $i++) {  </span><br><span class="line">        if ($array[$i]['pid'] == $pid) {  </span><br><span class="line">            echo $tmp . $array[$i]['name'] . "<br/>";  </span><br><span class="line">            getList($array, $array[$i]['id'], $tmp . "-----");  </span><br><span class="line">        }  </span><br><span class="line">    }  </span><br><span class="line">}  </span><br><span class="line">getList($array, 0);</span><br></pre></td></tr></tbody></table></figure><p>直接访问index.php</p><p>看以下效果！<br><img src="!--￼1-->/img/cookiesession/20160115100126250.png" alt></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;接下来咱们使用递归来完成无限极分类；&lt;br&gt;好了废话不多说；直接上demo；&lt;/p&gt;
&lt;p&gt;index.php&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;sp
      
    
    </summary>
    
      <category term="php" scheme="https://bingbingliang.github.io/categories/php/"/>
    
    
      <category term="php" scheme="https://bingbingliang.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>WebRtc学习资料大全</title>
    <link href="https://bingbingliang.github.io//posts/7e1b13a4/"/>
    <id>https://bingbingliang.github.io//posts/7e1b13a4/</id>
    <published>2014-12-13T16:00:00.000Z</published>
    <updated>2019-06-20T17:03:30.220Z</updated>
    
    <content type="html"><![CDATA[<p>有些需要翻墙才能看</p><p>WebRTC 介绍</p><p>官网在这里：<br>    <a href="https://webrtc.org/" target="_blank" rel="noopener">https://webrtc.org/</a></p><p>然后这里有一个官方的Getting Started：<br>    <a href="https://webrtc.org/start/" target="_blank" rel="noopener">https://webrtc.org/start/</a></p><p>Google关于WebRTC的幻灯片：<br>    <a href="http://io13webrtc.appspot.com/" target="_blank" rel="noopener">http://io13webrtc.appspot.com/</a></p><p>然后是WebRTC的SPEC：<br>    <a href="https://www.w3.org/TR/webrtc/" target="_blank" rel="noopener">https://www.w3.org/TR/webrtc/</a></p><p>WebRTC项目源码地址：<br>    <a href="https://chromium.googlesource.com/external/webrtc" target="_blank" rel="noopener">https://chromium.googlesource.com/external/webrtc</a></p><p>Native开发文档：<br>    <a href="https://webrtc.org/native-code/development/" target="_blank" rel="noopener">https://webrtc.org/native-code/development/</a></p><p>教程</p><p>入门的，首选codelabs的Real time communication with WebRTC：<br>    <a href="https://codelabs.developers.google.com/codelabs/webrtc-web" target="_blank" rel="noopener">https://codelabs.developers.google.com/codelabs/webrtc-web</a></p><p>然后是html5rocks上的基础教程：<br>    <a href="https://www.html5rocks.com/en/tutorials/webrtc/basics/" target="_blank" rel="noopener">https://www.html5rocks.com/en/tutorials/webrtc/basics/</a></p><p>开发文档、入门教程，参考这里：<br>    <a href="https://developer.mozilla.org/en-US/docs/Web/Guide/API/WebRTC/Peer-to-peer_communications_with_WebRTC" target="_blank" rel="noopener">https://developer.mozilla.org/en-US/docs/Web/Guide/API/WebRTC/Peer-to-peer_communications_with_WebRTC</a></p><p>这里，<a href="http://piratefsh.github.io/projects/2015/08/27/webrtc-stun-turn-servers.html" target="_blank" rel="noopener">http://piratefsh.github.io/projects/2015/08/27/webrtc-stun-turn-servers.html</a> 是一个人部署stun和turn server的记录。</p><p>进阶一点的，看这个，比较完整的介绍和实践：<br>    <a href="http://blog.mgechev.com/2014/12/26/multi-user-video-conference-webrtc-angularjs-yeoman/" target="_blank" rel="noopener">http://blog.mgechev.com/2014/12/26/multi-user-video-conference-webrtc-angularjs-yeoman/</a></p><p>还有这个，介绍如何用WebRTC一步一步实现视频会议：<br>    <a href="https://www.cleveroad.com/blog/webrtc-step-by-step-implementation-of-video-conference" target="_blank" rel="noopener">https://www.cleveroad.com/blog/webrtc-step-by-step-implementation-of-video-conference</a></p><p>还找到一个中文版的教程，通过WebRTC实现实时视频通信：</p><ul><li>通过WebRTC实现实时视频通信（一）</li><li>通过WebRTC实现实时视频通信（二）</li><li>通过WebRTC实现实时视频通信（三）</li></ul><p>STUN/TURN/Signaling解决方案</p><p>WebRTC需要Signaling、STUN、TURN等Server，Google有自己的，还有很多开源的，也有收费的。</p><p>免费的：</p><ul><li><p>Signaling Server需要自己实现，如果你用Nodejs和Socket.io的话，比较容易做。<a href="https://codelabs.developers.google.com/codelabs/webrtc-web" target="_blank" rel="noopener">https://codelabs.developers.google.com/codelabs/webrtc-web</a> 这里就有一个示例。</p></li><li><p>Google的STUN服务器：stun:stun.l.google.com:19302</p></li><li><p>restund：<a href="http://www.creytiv.com/restund.html。" target="_blank" rel="noopener">http://www.creytiv.com/restund.html。</a></p></li><li><p>rfc5766-turn-server: <a href="https://code.google.com/p/rfc5766-turn-server" target="_blank" rel="noopener">https://code.google.com/p/rfc5766-turn-server</a> 挪到这里了：<a href="https://github.com/coturn/rfc5766-turn-server/" target="_blank" rel="noopener">https://github.com/coturn/rfc5766-turn-server/</a> 支持STUN和TURN</p></li><li><p><a href="http://www.pjsip.org/" target="_blank" rel="noopener">http://www.pjsip.org/</a>, PJSIP，支持STUN、TURN、ICE。</p></li><li><p><a href="https://nice.freedesktop.org/wiki/" target="_blank" rel="noopener">https://nice.freedesktop.org/wiki/</a> ，libnice，支持ICE和STUN。</p></li><li><p><a href="http://www.stunprotocol.org/" target="_blank" rel="noopener">http://www.stunprotocol.org/</a> ，STUNTMAN，对应的代码，<a href="https://github.com/jselbie/stunserver" target="_blank" rel="noopener">https://github.com/jselbie/stunserver</a></p></li><li><p><a href="https://sourceforge.net/projects/stun/" target="_blank" rel="noopener">https://sourceforge.net/projects/stun/</a> ，STUN client and server</p></li><li><p><a href="https://github.com/coturn/coturn" target="_blank" rel="noopener">https://github.com/coturn/coturn</a> ，C++实现的STUN和TURN服务器，这里有一个安装指南：<a href="https://www.webrtc-experiment.com/docs/TURN-server-installation-guide.html" target="_blank" rel="noopener">https://www.webrtc-experiment.com/docs/TURN-server-installation-guide.html</a></p></li></ul><p>这里有一个WebRTC服务器搭建的文档：<a href="http://io.diveinedu.com/2015/02/05/%E7%AC%AC%E5%85%AD%E7%AB%A0-WebRTC%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA.html" target="_blank" rel="noopener">http://io.diveinedu.com/2015/02/05/%E7%AC%AC%E5%85%AD%E7%AB%A0-WebRTC%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA.html</a></p><p>收费的解决方案：<br>    <a href="https://www.onsip.com/blog/webrtc-server" target="_blank" rel="noopener">https://www.onsip.com/blog/webrtc-server</a></p><p>开源示例</p><p>还有一些开源的示例代码，这个比较全了：<br>    <a href="https://github.com/webrtc/samples" target="_blank" rel="noopener">https://github.com/webrtc/samples</a></p><p>对应的demo在这里（Chrome打开可以看效果）：<br>    <a href="https://webrtc.github.io/samples" target="_blank" rel="noopener">https://webrtc.github.io/samples</a></p><p>回退一级，还有更多资源：<br>    <a href="https://github.com/webrtc" target="_blank" rel="noopener">https://github.com/webrtc</a></p><p>还有一个，SimpleWebRTC：<br>    <a href="https://github.com/andyet/SimpleWebRTC" target="_blank" rel="noopener">https://github.com/andyet/SimpleWebRTC</a></p><p>还有：<br>    <a href="https://github.com/mgechev/angular-webrtc" target="_blank" rel="noopener">https://github.com/mgechev/angular-webrtc</a></p><p>嗯，接下来这个更赞，支持多人视频会议，开源的：<br>    <a href="https://github.com/jitsi" target="_blank" rel="noopener">https://github.com/jitsi</a> ，对应的演示地址<a href="https://meet.jit.si/" target="_blank" rel="noopener">https://meet.jit.si/</a></p><p>世界上第一个基于HTML5的SIP客户端：<a href="https://www.doubango.org/sipml5/" target="_blank" rel="noopener">https://www.doubango.org/sipml5/</a> 。他们的GitHub主页：<a href="https://github.com/DoubangoTelecom/doubango" target="_blank" rel="noopener">https://github.com/DoubangoTelecom/doubango</a></p><p>又找到一个国内的小示例，WebRTC实现网页版多人视频聊天室：<a href="http://www.cnblogs.com/FuzhePan/p/3899551.html" target="_blank" rel="noopener">http://www.cnblogs.com/FuzhePan/p/3899551.html</a> 。看样子是多人聊天室，一对一视频的实现。</p><p>还有一个WebRTC native demo：<a href="http://sourcey.com/webrtc-native-to-browser-video-streaming-example/" target="_blank" rel="noopener">http://sourcey.com/webrtc-native-to-browser-video-streaming-example/</a> ，能够在C++的客户端和浏览器之间视频通信。</p><p>在线演示</p><p>搜集了一些在线演示的示例：<br>    <a href="https://apprtc.appspot.com" target="_blank" rel="noopener">https://apprtc.appspot.com</a><br>    <a href="http://www.simpl.info/getusermedia" target="_blank" rel="noopener">http://www.simpl.info/getusermedia</a><br>    <a href="https://webrtc.github.io/samples" target="_blank" rel="noopener">https://webrtc.github.io/samples</a><br>    <a href="http://webcamtoy.com/app/" target="_blank" rel="noopener">http://webcamtoy.com/app/</a><br>    <a href="http://www.shinydemos.com/facekat/" target="_blank" rel="noopener">http://www.shinydemos.com/facekat/</a><br>    <a href="http://idevelop.ro/ascii-camera/" target="_blank" rel="noopener">http://idevelop.ro/ascii-camera/</a><br>    <a href="https://meet.jit.si/" target="_blank" rel="noopener">https://meet.jit.si/</a> ，多人的视频会议</p><p>围绕WebRTC的框架和服务</p><p>框架，视频通信的：<br>    <a href="https://github.com/webrtc/adapter" target="_blank" rel="noopener">https://github.com/webrtc/adapter</a> ，封装了浏览器差异<br>    <a href="https://github.com/henrikjoreteg/SimpleWebRTC" target="_blank" rel="noopener">https://github.com/henrikjoreteg/SimpleWebRTC</a> ，前面说过这个链接了<br>    <a href="https://github.com/priologic/easyrtc" target="_blank" rel="noopener">https://github.com/priologic/easyrtc</a><br>    <a href="https://github.com/webRTC/webRTC.io" target="_blank" rel="noopener">https://github.com/webRTC/webRTC.io</a></p><p>Peer间传递数据的：<br>    <a href="http://peerjs.com/" target="_blank" rel="noopener">http://peerjs.com/</a><br>    <a href="https://github.com/peer5/sharefest" target="_blank" rel="noopener">https://github.com/peer5/sharefest</a></p><p>服务：<br>    <a href="http://www.tokbox.com/" target="_blank" rel="noopener">http://www.tokbox.com/</a><br>    <a href="http://www.vline.com/" target="_blank" rel="noopener">http://www.vline.com/</a></p><p>RTCMultiConnection，JS封装库和Signaling服务：<br>    <a href="https://github.com/muaz-khan/RTCMultiConnection" target="_blank" rel="noopener">https://github.com/muaz-khan/RTCMultiConnection</a></p><p>图书<br>    《Real-Time Communication with WebRTC》<br>    <a href="https://bloggeek.me/book-webrtc-salvatore-simon/" target="_blank" rel="noopener">https://bloggeek.me/book-webrtc-salvatore-simon/</a><br>    <a href="https://bloggeek.me/best-webrtc-book/" target="_blank" rel="noopener">https://bloggeek.me/best-webrtc-book/</a> ，这里介绍了5本书。</p><p>课程<br>    <a href="https://bloggeek.me/course/webrtc-architecture/" target="_blank" rel="noopener">https://bloggeek.me/course/webrtc-architecture/</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;有些需要翻墙才能看&lt;/p&gt;
&lt;p&gt;WebRTC 介绍&lt;/p&gt;
&lt;p&gt;官网在这里：&lt;br&gt;    &lt;a href=&quot;https://webrtc.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://webrtc.org/&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="php" scheme="https://bingbingliang.github.io/categories/php/"/>
    
    
      <category term="php" scheme="https://bingbingliang.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>memcache(四) 调优</title>
    <link href="https://bingbingliang.github.io//posts/8288fd3b/"/>
    <id>https://bingbingliang.github.io//posts/8288fd3b/</id>
    <published>2014-12-06T16:00:00.000Z</published>
    <updated>2019-06-20T17:03:30.207Z</updated>
    
    <content type="html"><![CDATA[<p>在整理之前，先给大家导入一个概念：</p><p>内存碎片化：在向操作系统不断申请和释放内存的时候，会形成一些很小的内存片段，这种闲置的又没法利用内存的现象。</p><p>memcache存储方式：</p><p>memcache是利用 slab allocator 来管理内存的，呢么我们首先需要明白 slab allocator 是怎么一回事</p><p> slab allocator ：首先将内存划分成若干个 slab<br> class（默认内个1M），然后将每个 slab class 切割成相同的chunk ，需要内存时根据内容大小选择合适的chunk存储数据。如下：</p><p><img src="!--￼1-->/img/cookiesession/20160607102556409.png" alt></p><p>如上chunk分布，如果我们memcache要存储一个100byte的数据，呢么我们会选取空的112byte的这个chunk存储数据，如果112的chunk用完了，并不会去选取144，而是将原有的112chunk中旧的数据覆盖掉或者说是剔除，此处等后面具体讲解。</p><p>由于chunk的大小都是已经提前‘固定’好的，这样就容易造成内存浪费,比如100byte数据存入112byte中，多余的12byte就被浪费掉了，但是chunk的大小又不能自己设置，只能通过增长因子来调节，呢么这个增长因子的大小设置就非常重要了。下面我们介绍下增长因子。</p><p>memcache在启动的时候可以通过 -f 来指定增长因子的大小，默认为1.25，在改参数出现之前增长因子固定是2，因此我们在设置之前需要认真统计缓存大小，根据缓存大小来合理设计增长因子大小。</p><p>下面说一下删除：</p><p>1、惰性删除：数据过期后并不会直接删除缓存中的数据，因此status时，有信息；新值来占用chunk是会当成空的使用；get数据时，数据过去返回空并且删除缓存中数据。</p><p>优点：节省cpu和检测成本</p><p>2、Least Recently Used（LRU）这个就是上面说的覆盖的现象了，当某一chunk全部满了，这个时候会将最近最少使用的chunk中数据挤掉并存入。即便数据是永存生效也有可能被挤掉。</p><p>最后注意几点memcache的限制(默认)</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name：256字节，二进制支持65536字节  </span><br><span class="line">value：1M  </span><br><span class="line">内存限制：32位系统为2G。  </span><br><span class="line">如果缓存数据量大会开启多个实例而不是只用一个实例存储</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在整理之前，先给大家导入一个概念：&lt;/p&gt;
&lt;p&gt;内存碎片化：在向操作系统不断申请和释放内存的时候，会形成一些很小的内存片段，这种闲置的又没法利用内存的现象。&lt;/p&gt;
&lt;p&gt;memcache存储方式：&lt;/p&gt;
&lt;p&gt;memcache是利用 slab allocator 来管
      
    
    </summary>
    
      <category term="php" scheme="https://bingbingliang.github.io/categories/php/"/>
    
    
      <category term="php" scheme="https://bingbingliang.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>memcache(三) 应用场景</title>
    <link href="https://bingbingliang.github.io//posts/99085760/"/>
    <id>https://bingbingliang.github.io//posts/99085760/</id>
    <published>2014-11-29T16:00:00.000Z</published>
    <updated>2019-06-20T17:03:30.218Z</updated>
    
    <content type="html"><![CDATA[<p>在这里简单说下我遇到的memcache的一些应用场景：</p><p>1、对查询结果进行缓存，减少数据库查询次数，降低数据库查询压力；</p><p>2、mysql 主从延迟的数据可以用memcache进行适当处理，作为master和slave之间的过度，根据具体业务进行使用</p><p>3、session存入memcache </p><p>这个重点在这里提一下：</p><p>session默认是存储在服务器的临时文件夹下，量大是IO操作会限制session的存取，这里用memcache来保存session数据，通过缓存操作大大提高了session的存取性能，缺点就是一单服务器宕机，session数据存在memory中会全部丢失，但对于session存储的数据来说影响不是很大，其本身就是临时性数据。下面简述具体流程：</p><p>1、修改配置 save_handler && save_path</p><p>方式一：修改php.ini<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">session.save_handler = memcache  </span><br><span class="line">session.save_path = "tcp://127.0.0.1:11211"</span><br></pre></td></tr></tbody></table></figure><p></p><p>方式二：项目目录下的 .htaccess ：<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php_value session.save_handler "memcache"  </span><br><span class="line">php_value session.save_path  "tcp://127.0.0.1:11211"</span><br></pre></td></tr></tbody></table></figure><p></p><p>方式三：在应用中设置<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ini_set("session.save_handler", "memcache");  </span><br><span class="line">ini_set("session.save_path", "tcp://127.0.0.1:11211");</span><br></pre></td></tr></tbody></table></figure><p></p><p>2、写代码测试：<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">session_start();  </span><br><span class="line">if (!isset($_SESSION['time'])) {  </span><br><span class="line">$_SESSION['time'] = time();  </span><br><span class="line">}  </span><br><span class="line">print $_SESSION['time'];  </span><br><span class="line">print "<br><br>";  </span><br><span class="line">print session_id();</span><br></pre></td></tr></tbody></table></figure><p></p><p>发现session可以正常使用 </p><p>倘若我们想看一下memcache中存储数据，直接用上面获得session_id去memcache中取出查看就好：<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$memcache = memcache_connect('localhost', 11211);  </span><br><span class="line">var_dump($memcache->get('这里是刚才输出的session_id'));</span><br></pre></td></tr></tbody></table></figure><p></p><p>这样我们可以看到具体的memcache中存储的session内容。 </p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在这里简单说下我遇到的memcache的一些应用场景：&lt;/p&gt;
&lt;p&gt;1、对查询结果进行缓存，减少数据库查询次数，降低数据库查询压力；&lt;/p&gt;
&lt;p&gt;2、mysql 主从延迟的数据可以用memcache进行适当处理，作为master和slave之间的过度，根据具体业务进行使
      
    
    </summary>
    
      <category term="php" scheme="https://bingbingliang.github.io/categories/php/"/>
    
    
      <category term="php" scheme="https://bingbingliang.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>memcache(二) php操作memcache</title>
    <link href="https://bingbingliang.github.io//posts/227885b6/"/>
    <id>https://bingbingliang.github.io//posts/227885b6/</id>
    <published>2014-11-22T16:00:00.000Z</published>
    <updated>2019-06-20T17:03:30.205Z</updated>
    
    <content type="html"><![CDATA[<p>php操作memcache，需要先安装memcache扩展，具体安装步骤如下：</p><p>1、安装memcache依赖： libmemcached<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https://launchpad.net/libmemcached/1.0/1.0.4/+download/libmemcached-1.0.4.tar.gz  </span><br><span class="line">tar -xzvf libmemcached-1.0.4.tar.gz  </span><br><span class="line">cd libmemcached-1.0.4  </span><br><span class="line">./configure  </span><br><span class="line">make  </span><br><span class="line">make install</span><br></pre></td></tr></tbody></table></figure><p></p><p>2、安装memcached扩展<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget http://pecl.php.net/get/memcached-2.0.1.tgz  </span><br><span class="line">tar vxzf memcached-2.0.1.tgz  </span><br><span class="line">cd memcache-2.0.1  </span><br><span class="line">phpize  </span><br><span class="line">./configure --enable-memcache --with-php-config=/usr/local/php/bin/php-config  </span><br><span class="line">make  </span><br><span class="line">make install</span><br></pre></td></tr></tbody></table></figure><p></p><p>3、在php.ini增加一行配置<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extension = memcached.so</span><br></pre></td></tr></tbody></table></figure><p></p><p>4、重启apache<br>5、查看phpinfo如果出现memcached扩展信息即安装成功  </p><p>成功后写个php测试<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$m = new Memcached();  </span><br><span class="line">$m->addServer('localhost', 11211);  </span><br><span class="line">$m->set('name', 'zhangsan');  </span><br><span class="line">var_dump($m->get('name'));</span><br></pre></td></tr></tbody></table></figure><p></p><p>简单的测试就这样了 其他命令与命令行操作基本类似，请自行测试！</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;php操作memcache，需要先安装memcache扩展，具体安装步骤如下：&lt;/p&gt;
&lt;p&gt;1、安装memcache依赖： libmemcached&lt;br&gt;&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td 
      
    
    </summary>
    
      <category term="php" scheme="https://bingbingliang.github.io/categories/php/"/>
    
    
      <category term="php" scheme="https://bingbingliang.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>memcache(一)基础篇</title>
    <link href="https://bingbingliang.github.io//posts/cd59a788/"/>
    <id>https://bingbingliang.github.io//posts/cd59a788/</id>
    <published>2014-11-15T16:00:00.000Z</published>
    <updated>2019-06-20T17:03:30.224Z</updated>
    
    <content type="html"><![CDATA[<h2 id="memcache-MC-是一套开源的分布式的高速缓存系统。这里会涉及到两个单词-lt-新人容易搞混，放到最上面说明-gt-："><a href="#memcache-MC-是一套开源的分布式的高速缓存系统。这里会涉及到两个单词-lt-新人容易搞混，放到最上面说明-gt-：" class="headerlink" title="memcache(MC)是一套开源的分布式的高速缓存系统。这里会涉及到两个单词<新人容易搞混，放到最上面说明>："></a>memcache(MC)是一套开源的分布式的高速缓存系统。这里会涉及到两个单词<新人容易搞混，放到最上面说明>：</h2><p>memcache  ：客户端提供数据操作<br>memcached：服务器端提供数据存储</p><h2 id="接下来看下简单的memcached-linux-的搭建"><a href="#接下来看下简单的memcached-linux-的搭建" class="headerlink" title="接下来看下简单的memcached[linux]的搭建"></a>接下来看下简单的memcached[linux]的搭建</h2><p>编译所需要的基本工具(gcc,make,cmake,autoconf,libtool)请提前安装<注意系统时间，可能会导致gcc编译检测时间不通过而无法正常编译><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># yum install gcc make cmake autoconf libtool</span><br></pre></td></tr></tbody></table></figure><p></p><h2 id="之后就是开始步入正式安装了"><a href="#之后就是开始步入正式安装了" class="headerlink" title="之后就是开始步入正式安装了"></a>之后就是开始步入正式安装了</h2><p>下载memcached和libevent最新stable版本(稳定版)<br>安装memcached依赖库  libevent<br>编译memcached(指定libevent路径)</p><p>具体操作如下<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># tar zxvf libevent-2.0.21-stable.tar.gz  </span><br><span class="line"># cd libevent-2.0.21-stable  </span><br><span class="line"># ./configure --prefix=/usr/local/libevent  </span><br><span class="line">如果出错,读报错信息,查看原因,一般是缺少库 # make && make install  </span><br><span class="line"># tar zxvf memcached-1.4.5.tag.gz  </span><br><span class="line"># cd memcached-1.4.5   </span><br><span class="line">#./configure--prefix=/usr/local/memcached --with-libevent=/usr/local/libevent  </span><br><span class="line"># make && make install</span><br></pre></td></tr></tbody></table></figure><p></p><p>启动命令<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># /usr/local/memcached/bin/memcached -m 64 -p 11211 -u nobody -vv</span><br></pre></td></tr></tbody></table></figure><p></p><p>后台运行命令<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># /usr/local/memcached/bin/memcached -m 64 -p 11211 -u nobody -d</span><br></pre></td></tr></tbody></table></figure><p></p><h2 id="以下贴入memcached-命令的参数解释-lt-中文-gt"><a href="#以下贴入memcached-命令的参数解释-lt-中文-gt" class="headerlink" title="以下贴入memcached 命令的参数解释<中文>"></a>以下贴入memcached 命令的参数解释<中文></h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">-p <num>      监听的TCP端口(默认: 11211)  </span><br><span class="line">    -U <num>      监听的UDP端口(默认: 11211, 0表示不监听)  </span><br><span class="line">    -s <file>     用于监听的UNIX套接字路径（禁用网络支持）  </span><br><span class="line">    -a <mask>     UNIX套接字访问掩码，八进制数字（默认：0700）  </span><br><span class="line">    -l <ip_addr>  监听的IP地址。（默认：INADDR_ANY，所有地址）  </span><br><span class="line">    -d            作为守护进程来运行。  </span><br><span class="line">    -r            最大核心文件限制。  </span><br><span class="line">    -u <username> 设定进程所属用户。（只有root用户可以使用这个参数）  </span><br><span class="line">    -m <num>      所有slab class可用内存的上限，以MB为单位。（默认：64MB）  </span><br><span class="line">                  （译者注：也就是分配给该memcached实例的内存大小。）  </span><br><span class="line">    -M            内存用光时报错。（不会删除数据）  </span><br><span class="line">    -c <num>      最大并发连接数。（默认：1024）  </span><br><span class="line">    -k            锁定所有内存页。注意你可以锁定的内存上限。  </span><br><span class="line">                  试图分配更多内存会失败的，所以留意启动守护进程时所用的用户可分配的内存上限。  </span><br><span class="line">                  （不是前面的 -u <username> 参数；在sh下，使用命令"ulimit -S -l NUM_KB"来设置。）  </span><br><span class="line">    -v            提示信息（在事件循环中打印错误/警告信息。）  </span><br><span class="line">    -vv           详细信息（还打印客户端命令/响应）  </span><br><span class="line">    -vvv          超详细信息（还打印内部状态的变化）  </span><br><span class="line">    -h            打印这个帮助信息并退出。  </span><br><span class="line">    -i            打印memcached和libevent的许可。  </span><br><span class="line">    -P <file>     保存进程ID到指定文件，只有在使用 -d 选项的时候才有意义。  </span><br><span class="line">    -f <factor>   不同slab class里面的chunk大小的增长倍率。（默认：1.25）  </span><br><span class="line">                  （译者注：每个slab class里面有相同数量个slab page，每个slab page里面有chunk，且在当前slab class内的chunk大小固定。  </span><br><span class="line">                  而不同slab class里的chunk大小不一致，具体差异就是根据这个参数的倍率在增长，直到分配的内存用尽。）  </span><br><span class="line">    -n <bytes>    chunk的最小空间（默认：48）  </span><br><span class="line">                  (译者注：chunk数据结构本身需要消耗48个字节，所以一个chunk实际消耗的内存是n+48。)  </span><br><span class="line">    -L            尝试使用大内存页（如果可用的话）。提高内存页尺寸可以减少"页表缓冲（TLB）"丢失次数，提高运行效率。  </span><br><span class="line">                  为了从操作系统获得大内存页，memcached会把全部数据项分配到一个大区块。  </span><br><span class="line">    -D <char>     使用 <char> 作为前缀和ID的分隔符。  </span><br><span class="line">                  这个用于按前缀获得状态报告。默认是":"（冒号）。  </span><br><span class="line">                  如果指定了这个参数，则状态收集会自动开启；如果没指定，则需要用命令"stats detail on"来开启。  </span><br><span class="line">    -t <num>      使用的线程数（默认：4）  </span><br><span class="line">    -R            每个连接可处理的最大请求数。  </span><br><span class="line">    -C            禁用CAS。  </span><br><span class="line">    -b            设置后台日志队列的长度（默认：1024）  </span><br><span class="line">    -B            绑定协议 - 可能值：ascii,binary,auto（默认）</span><br></pre></td></tr></tbody></table></figure><p>好了，到这里基本安装完成了，哪么咱们简单操作下吧！</p><p>打开终端通过telnet连接memcached(一定要注意千万别把开启memcached的终端关闭)<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 格式 telnet host port  </span><br><span class="line">host:IP 本机可以用localhost或者127.0.0.1  </span><br><span class="line">port:端口号 开启时有制定 默认为 11211  </span><br><span class="line">eg： # telnet 127.0.0.1 11211</span><br></pre></td></tr></tbody></table></figure><p></p><h2 id="以下是常用命令及其参数"><a href="#以下是常用命令及其参数" class="headerlink" title="以下是常用命令及其参数"></a>以下是常用命令及其参数</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">1、增: add 往内存增加一行新记录  </span><br><span class="line">add name value expire   </span><br><span class="line">eg: add name 1 0 4  </span><br><span class="line">expire：有效时间 单位秒 eg: time()+30; 如果为0则不自动失效【缓存最长时间默认是30天 到期会失效，不到30天也有可能被覆盖或者说是被挤掉】  </span><br><span class="line">lenth     缓存长度，单位是字节。  </span><br><span class="line">2、删：delete 删除  </span><br><span class="line">delete name [time seconds] 删除指定的name  </span><br><span class="line">3、改：replace 替换  </span><br><span class="line">replace name flag expire length  </span><br><span class="line">4、查  get name  返回name的值  </span><br><span class="line">5、set 是设置和修改值  </span><br><span class="line">    set name flag expire leng 时  </span><br><span class="line">    如果服务器无此name ----> 增加的效果  </span><br><span class="line">    如果服务器有此name ----> 修改的效果.  </span><br><span class="line">6、incr,decr命令:增加/减少值的大小 语法: incr/decr name num  </span><br><span class="line">  示例:  </span><br><span class="line">  set age 0 0 2  </span><br><span class="line">  28  </span><br><span class="line">  stored  </span><br><span class="line">  get age  </span><br><span class="line">  value age 0 2  </span><br><span class="line">  28  </span><br><span class="line">  end  </span><br><span class="line">  incr age 1  </span><br><span class="line">  29  </span><br><span class="line">  incr age 2  </span><br><span class="line">  31  </span><br><span class="line">  decr age 1  </span><br><span class="line">  30  </span><br><span class="line">  decr age 2  </span><br><span class="line">  28  </span><br><span class="line">注意:incr,decr操作是把值理解为 32 位无符号来+-操作的.值在[0-2^32-1]范围内   </span><br><span class="line">7、统计命令: stats  </span><br><span class="line">把 memcached当前的运行信息统计出来stats   </span><br><span class="line">8、flush_all清空所有的存储对象</span><br></pre></td></tr></tbody></table></figure><p>memcache基本讲解到这里就结束了 实践出真理，请动手操作吧！</p><p>最后提一点缓存命中率：</p><p>命中率是指: (查询到数据的次数/查询总数)*100% </p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;memcache-MC-是一套开源的分布式的高速缓存系统。这里会涉及到两个单词-lt-新人容易搞混，放到最上面说明-gt-：&quot;&gt;&lt;a href=&quot;#memcache-MC-是一套开源的分布式的高速缓存系统。这里会涉及到两个单词-lt-新人容易搞混，放到最上面说明-
      
    
    </summary>
    
      <category term="php" scheme="https://bingbingliang.github.io/categories/php/"/>
    
    
      <category term="php" scheme="https://bingbingliang.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>inotify+rsync安装配置 文件同步</title>
    <link href="https://bingbingliang.github.io//posts/b27858b5/"/>
    <id>https://bingbingliang.github.io//posts/b27858b5/</id>
    <published>2014-11-08T16:00:00.000Z</published>
    <updated>2019-06-20T17:03:30.208Z</updated>
    
    <content type="html"><![CDATA[<p>1.两台机器192.168.1.2，192.168.1.3，想把192.168.1.2的数据同步到192.168.1.3中</p><p>2.测试开始，可以先关闭防火墙和内核Linux的selinux的防火墙,避免防火墙影响（两台服务器均操作）</p><p>关闭防火墙，例如centos7，其他系统版本自己查询如何关闭<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl stop firewalld.service #停止firewall  </span><br><span class="line">$ systemctl disable firewalld.service #禁止firewall开机启动</span><br></pre></td></tr></tbody></table></figure><p></p><p>关闭linux的selinux防火墙</p><p>永久性关闭：生效需要重启</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/selinux/config  </span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></tbody></table></figure><p>临时性关闭：生效无需重启</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ setenforce 0</span><br></pre></td></tr></tbody></table></figure><p>3.安装rsync（两台服务器均操作）</p><p>前往rsync官网下载最新版本 <a href="http://rsync.samba.org/ftp/rsync/src" target="_blank" rel="noopener">http://rsync.samba.org/ftp/rsync/src</a>  找到最新的rsync-<em>.</em>.*.tar.gz<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ tar zxvf rsync-*.*.*.tar.gz  </span><br><span class="line">$ cd rsync-*.*.*  </span><br><span class="line">$ ./configure --prefix=/usr/local/rsync  </span><br><span class="line">$ make && make install</span><br></pre></td></tr></tbody></table></figure><p></p><p>4.配置rsyncd.conf (192.168.1.3)<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">#pid文件的存放位置  </span><br><span class="line">pid file = /var/run/rsync.pid  </span><br><span class="line">#日志文件位置，启动rsync后自动产生这个文件，无需提前创建  </span><br><span class="line">log file = /var/log/rsync.log  </span><br><span class="line">#支持max connections参数的锁文件  </span><br><span class="line">lock file=/var/run/rsync.lock  </span><br><span class="line">#用户认证配置文件，里面保存用户名称和密码  </span><br><span class="line">secrets file = /etc/rsync.pw  </span><br><span class="line">#rsync启动时欢迎信息页面文件位置  </span><br><span class="line">motd file = /etc/rsyncd.motd  </span><br><span class="line">transfer logging = yes  </span><br><span class="line">log format = %t %a %m %f %b  </span><br><span class="line">syslog facility = local3  </span><br><span class="line">#自定义名称  </span><br><span class="line">[data]  </span><br><span class="line">#设置需要同步的目录  </span><br><span class="line">path = /data/test/  </span><br><span class="line">#模块名称与[data]自定义名称相同  </span><br><span class="line">comment = data  </span><br><span class="line">exclude = blank.png ; spinner.gif ; downsimple.png ; rails.png ; WEB-INF/  </span><br><span class="line">#默认端口  </span><br><span class="line">port = 873  </span><br><span class="line">#设置rsync运行权限为root  </span><br><span class="line">uid = root  </span><br><span class="line">#设置rsync运行权限为root  </span><br><span class="line">gid = root  </span><br><span class="line">#设置超时时间  </span><br><span class="line">timeout = 600  </span><br><span class="line">#最大连接数  </span><br><span class="line">max connections = 200  </span><br><span class="line">#默认为true，修改为no，增加对目录文件软连接的备份  </span><br><span class="line">use chroot = no  </span><br><span class="line">#设置rsync服务端文件为读写权限  </span><br><span class="line">read only = no  </span><br><span class="line">#不显示rsync服务端资源列表  </span><br><span class="line">list = no  </span><br><span class="line">#允许进行数据同步的客户端IP地址  </span><br><span class="line">hosts allow = 192.168.1.2</span><br></pre></td></tr></tbody></table></figure><p></p><p>4.可选：可以设置多个目录(192.168.1.3)<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#增加test1目录  </span><br><span class="line">[test1]  </span><br><span class="line">path = /data/test1  </span><br><span class="line">list = yes  </span><br><span class="line">ignore errors  </span><br><span class="line">comment = ucweb-file system  </span><br><span class="line">secrets file = /etc/rsync.pw  </span><br><span class="line">exclude = blank.png ; spinner.gif ; downsimple.png ; rails.png ; WEB-INF/</span><br></pre></td></tr></tbody></table></figure><p></p><p>5.建立密码认证文件(192.168.1.3)</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/rsync.pw  </span><br><span class="line">root:123456</span><br></pre></td></tr></tbody></table></figure><p>配置rsyncd.motd文件，开始传送的时候会显示（192.168.1.3）<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/rsyncd.motd  </span><br><span class="line">###############################  </span><br><span class="line">#                             #  </span><br><span class="line">#        start rsync          #  </span><br><span class="line">#                             #  </span><br><span class="line">###############################</span><br></pre></td></tr></tbody></table></figure><p></p><p>5.启动rsync（两台服务器均操作）<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/local/rsync/bin/rsync --daemon --config=/etc/rsyncd.conf</span><br></pre></td></tr></tbody></table></figure><p></p><p>开机启动rsync<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ echo '/usr/local/rsync/bin/rsync --daemon --config=/etc/rsyncd.conf'>>/etc/rc.d/rc.local</span><br></pre></td></tr></tbody></table></figure><p></p><p>6.建立密码认证文件（192.168.1.2）<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/rsync.pw  </span><br><span class="line">123456</span><br></pre></td></tr></tbody></table></figure><p></p><p>7.测试开始（在192.168.1.2）</p><p>先打开192.168.1.2上的/data/test/创建一个test.PHP测试文件，执行下面的命令<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/local/rsync/bin/rsync -avH --port=873 --progress --delete /data/test/ root@192.168.1.3::data --password-file=/etc/rsync.pw</span><br></pre></td></tr></tbody></table></figure><p></p><p>查看192.168.1.3上/data/test目录下是否有同步过来的test.php</p><p>8.安装inotify-tools（192.168.1.2）<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://cloud.github.com/downloads/rvoicilas/inotify-tools/inotify-tools-3.14.tar.gz  </span><br><span class="line">$ tar zxvf inotify-tools-3.14.tar.gz   </span><br><span class="line">$ cd inotify-tools-3.14  </span><br><span class="line">$ ./configure --prefix=/usr/local/inotify  </span><br><span class="line">$ make && make install</span><br></pre></td></tr></tbody></table></figure><p></p><p>9.查看是否安装成功<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ll /usr/local/inotify/bin/inotifywa*</span><br></pre></td></tr></tbody></table></figure><p></p><p>10.新建一个inotify.sh设置文件同步/root/inotify.sh,如果下面代码不管用可参考<a href="https://github.com/rvoicilas/inotify-tools/wiki#info" target="_blank" rel="noopener">https://github.com/rvoicilas/inotify-tools/wiki#info</a></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># get the current path</span><br><span class="line">CURPATH=`pwd`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/usr/local/inotify/bin/inotifywait -mr --timefmt '%d/%m/%y %H:%M' --format '%T %w %f' \</span><br><span class="line">-e close_write /data/test | while read date time dir file; do</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       FILECHANGE=${dir}${file}</span><br><span class="line">       # convert absolute path to relative</span><br><span class="line">       FILECHANGEREL=`echo "$FILECHANGE" | sed 's_'$CURPATH'/__'`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       rsync -avH --port=873 --progress --delete /data/test/ root@192.168.1.3::data --password-file=/etc/rsync.pw</span><br><span class="line">        echo "At ${time} on ${date}, file $FILECHANGE was backed up via rsync"</span><br><span class="line">done</span><br></pre></td></tr></tbody></table></figure><p>11.可执行权限与后台无输出运行<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 /root/inotify.sh</span><br><span class="line"></span><br><span class="line">sh /root/inotify.sh >/dev/null 2>&1 &</span><br></pre></td></tr></tbody></table></figure><p></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.两台机器192.168.1.2，192.168.1.3，想把192.168.1.2的数据同步到192.168.1.3中&lt;/p&gt;
&lt;p&gt;2.测试开始，可以先关闭防火墙和内核Linux的selinux的防火墙,避免防火墙影响（两台服务器均操作）&lt;/p&gt;
&lt;p&gt;关闭防火墙，例
      
    
    </summary>
    
      <category term="php" scheme="https://bingbingliang.github.io/categories/php/"/>
    
    
      <category term="php" scheme="https://bingbingliang.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>PHP运算逻辑说明</title>
    <link href="https://bingbingliang.github.io//posts/89f46af4/"/>
    <id>https://bingbingliang.github.io//posts/89f46af4/</id>
    <published>2014-11-01T16:00:00.000Z</published>
    <updated>2019-06-20T17:03:30.202Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="PHP-运算逻辑说明"><a href="#PHP-运算逻辑说明" class="headerlink" title="PHP 运算逻辑说明"></a>PHP 运算逻辑说明</h2><p><strong>PHP if…elseif…else 语句</strong></p><p>示例说明:</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line"><span class="keyword">if</span>(condition_001){</span><br><span class="line">语句;</span><br><span class="line">} <span class="keyword">elseif</span> (condition_002){</span><br><span class="line">语句;</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">语句;</span><br><span class="line">}</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><p><strong>PHP Switch语句</strong></p><p>示例说明:</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line"><span class="keyword">switch</span> (expression)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">case</span> label1:</span><br><span class="line">code to be executed <span class="keyword">if</span> expression = label1;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> label2:</span><br><span class="line">code to be executed of expression = label2;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">code to be executed</span><br><span class="line"><span class="keyword">if</span> expression is different</span><br><span class="line">from both label1 <span class="keyword">and</span> label2;</span><br><span class="line">}</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><p><strong>注意</strong>这个匹配语句不仅仅匹配数值和逻辑符类型,还可以匹配字符串类型;</p><p><strong>PHP while语句</strong></p><p>示例: </p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line"><span class="keyword">while</span> (条件为真)</span><br><span class="line">{</span><br><span class="line">要执行的代码;</span><br><span class="line">}</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><p><strong>PHP for 语句</strong></p><p>示例:</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line"><span class="keyword">for</span>(init counter; test counter; increment counter){</span><br><span class="line">code to be executed;</span><br><span class="line">}</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><p><strong>参数:</strong></p><ul><li>init counter:初始化循环计数器的值</li><li>test counter: 评估每个循环迭代,如果值为TRUE.继续循环,如果它的值为FALSE,循环结束.</li><li>increment counter : 增加循环计数器的值</li></ul><p><strong>PHP foreach 语句</strong></p><p>foreach 循环只适用于数据,病用于便利数组中的每个键/值对;</p><p>示例:</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line"><span class="keyword">foreach</span> ($arrary <span class="keyword">as</span> $value){</span><br><span class="line">code to be executed;</span><br><span class="line">}</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><p><strong>PHP 函数语句</strong></p><p>在PHP中创建用于定义函数</p><p>示例:</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">functionName</span><span class="params">()</span></span>{</span><br><span class="line">要执行的代码;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">**注意**:</span><br><span class="line"></span><br><span class="line">* 定义函数的声明需要以<span class="string">"function"</span>开头;</span><br><span class="line">* 函数名能够以字母或者下划线(而非数字);</span><br><span class="line">* 函数名对大小写敏感(变量名字也是对大小写敏感的,PHP内建关键字不区分大小写)</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><p><strong>PHP 函数参数</strong></p><p>示例1:</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setHeight</span><span class="params">($minHeight=<span class="number">50</span>)</span></span>{</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"The height is : $minHeight <br>"</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">setHeight(<span class="number">350</span>);</span><br><span class="line">setHeight(); <span class="comment">//将使用默认参数50</span></span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;PHP-运算逻辑说明&quot;&gt;&lt;a href=&quot;#PHP-运算逻辑说明&quot; class=&quot;headerlink&quot; title=&quot;PHP 运算逻辑说明&quot;&gt;&lt;/a&gt;PHP 运算逻辑说明&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;PHP if…elsei
      
    
    </summary>
    
      <category term="php" scheme="https://bingbingliang.github.io/categories/php/"/>
    
    
      <category term="php" scheme="https://bingbingliang.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>PHP超全局变量</title>
    <link href="https://bingbingliang.github.io//posts/2f14e44/"/>
    <id>https://bingbingliang.github.io//posts/2f14e44/</id>
    <published>2014-10-25T16:00:00.000Z</published>
    <updated>2019-06-20T17:03:29.574Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="PHP-全局变量-超全局变量"><a href="#PHP-全局变量-超全局变量" class="headerlink" title="PHP 全局变量-超全局变量"></a>PHP 全局变量-超全局变量</h3><p>PHP 中的许多预定义变量都是”超全局的”,这意味着他们在一个脚本的全部作用域都可用.在函数或方法中无需执行 <strong>global $variable</strong>,就可以访问他们.</p><p>这些超全局变量是:</p><ul><li><strong>$GLOBALS</strong></li><li><strong>$_SERVER</strong></li><li><strong>$_REQUEST</strong></li><li><strong>$_POST</strong></li><li><strong>$_GET</strong></li><li><strong>$_FILES</strong></li><li><strong>$_ENV</strong></li><li><strong>$_COOKIE</strong></li><li><strong>$_SESSION</strong></li></ul><p><strong>$GLOBAL</strong> —引用全局作用域中可用的全部变量</p><p><strong>$GLOBAL</strong> 这种全局变量用于在PHP脚本中的任意未知访问全局变量(从函数或方法中均可).PHP在名为$GLOBAL[index]的数组中存储了所有的全局变量,变量的名字就是数组的键.</p><p>示例:</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line">$x = <span class="number">75</span>;</span><br><span class="line">$y = <span class="number">25</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addition</span><span class="params">()</span></span>{</span><br><span class="line">$GLOBALS[<span class="string">'z'</span>] = $GLOBALS[<span class="string">'x'</span>] + $GLOBALS[<span class="string">'y'</span>];</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">addition();</span><br><span class="line"><span class="keyword">echo</span> $z;</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><p><strong>$_SERVER</strong></p><p>$_SERVER 这种超全局变量保存关于报头,路径和脚本位置的信息.</p><table><thead><tr><th style="text-align:center">元素/代码</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">$_SERVER[‘PHP_SELF’]</td><td style="text-align:center">返回当前执行脚本的文件名</td></tr><tr><td style="text-align:center">$_SERVER[‘GATWAY_INTERFACE’]</td><td style="text-align:center">返回服务器使用的CGI规范的版本</td></tr><tr><td style="text-align:center">$_SERVER[‘SERVER_ADDR’]</td><td style="text-align:center">返回当前运行脚本所在服务器的IP地址</td></tr><tr><td style="text-align:center">$_SERVER[‘SERVER_NAME’]</td><td style="text-align:center">返回当前运行脚本所在服务器的主机名（比如　daodaoliang.github.io）</td></tr><tr><td style="text-align:center">$_SERVER[‘SERVER_SOFTWARE’]</td><td style="text-align:center">返回服务器标识字符串(比如Apache/2.2.24)</td></tr><tr><td style="text-align:center">$_SERVER[‘SERVER_PROTOCOL’]</td><td style="text-align:center">返回当前通信协议的名称和版本(例如：”HTTP/1.0”)</td></tr><tr><td style="text-align:center">$SERVER[‘REQUEST_METHOD’]</td><td style="text-align:center">返回访问页面使用的请求方法(例如POST)</td></tr><tr><td style="text-align:center">$SERVER[‘REQUEST_TIME’]</td><td style="text-align:center">返回请求开始时间戳例如1575457898</td></tr><tr><td style="text-align:center">$SERVER[‘QUERY_STRING’]</td><td style="text-align:center">返回查询字符串，如果时通过查询字符串访问此页面</td></tr><tr><td style="text-align:center">$SERVER[‘HTTP_ACCEPT’]</td><td style="text-align:center">返回来自当前请求的请求头</td></tr><tr><td style="text-align:center">$SERVER[‘HTTP_ACCEPT_CHARSET’]</td><td style="text-align:center">返回来自当前请求的accept＿charset头(例如 utf-8,ISO-8859-1)</td></tr><tr><td style="text-align:center">$SERVER[‘HTTP_HOST’]</td><td style="text-align:center">返回当前请求的Host头</td></tr><tr><td style="text-align:center">$SERVER[‘HTTP_REFERER’]</td><td style="text-align:center">放回当前页面完整的ＵＲＬ(不可靠，因为不是所有用户代理都支持)</td></tr><tr><td style="text-align:center">$SERVER[‘HTTPS’]</td><td style="text-align:center">是否通过安全HTTP协议查询脚本</td></tr><tr><td style="text-align:center">$SERVER[‘REMOVE_ADDR’]</td><td style="text-align:center">返回浏览当前页面的用户的IP地址</td></tr><tr><td style="text-align:center">$SERVER[‘REMOVE_HOST’]</td><td style="text-align:center">返回当前页面的用户的主机名</td></tr><tr><td style="text-align:center">$SERVER[‘REMOVE_PORT’]</td><td style="text-align:center">返回用户级其上链接到ＷＥＢ服务器所使用的端口号</td></tr><tr><td style="text-align:center">$SERVER[‘SCRIPT_FILENAME’]</td><td style="text-align:center">当前当前执行脚本的绝对路径</td></tr><tr><td style="text-align:center">$SERVER[‘SERVER_ADMIN’]</td><td style="text-align:center">该值致命了Apache服务器配置文件中的SERVR_ADMIN参数</td></tr><tr><td style="text-align:center">$SERVER[‘SERVER_PORT’]</td><td style="text-align:center">返回服务器使用的端口，默认时’80’</td></tr><tr><td style="text-align:center">$SERVER[‘SERVER_SIGNATURE’]</td><td style="text-align:center">返回服务器版本和虚拟主机名</td></tr><tr><td style="text-align:center">$SERVER[‘PATH_TRANSLATED’]</td><td style="text-align:center">当前脚本所在文件系统(非文档根目录)的基本路径</td></tr><tr><td style="text-align:center">$SERVER[‘SCRIPT_NAME’]</td><td style="text-align:center">返回当前脚本的路径</td></tr><tr><td style="text-align:center">$SERVER[‘SCRIPT_URL’]</td><td style="text-align:center">返回当前页面的URL</td></tr></tbody></table><p><strong>_REQUEST</strong></p><p>PHP $＿REQUEST　用于收集HTML 表单提交的数据</p><p>示例：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">html</span>></span></span><br><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"<?php echo $_SERVER[PHP_SELF];?>"</span>></span></span><br><span class="line">Name:<span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"fname"</span>></span></span><br><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>></span></span><br><span class="line"><span class="tag"></<span class="name">form</span>></span></span><br><span class="line"><span class="php"><span class="meta"><?php</span></span></span><br><span class="line"><span class="php">$name = $_REQUEST[<span class="string">'fname'</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $name</span></span><br><span class="line"><span class="php"><span class="meta">?></span></span></span><br><span class="line"><span class="tag"></<span class="name">body</span>></span></span><br><span class="line"><span class="tag"></<span class="name">html</span>></span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;PHP-全局变量-超全局变量&quot;&gt;&lt;a href=&quot;#PHP-全局变量-超全局变量&quot; class=&quot;headerlink&quot; title=&quot;PHP 全局变量-超全局变量&quot;&gt;&lt;/a&gt;PHP 全局变量-超全局变量&lt;/h3&gt;&lt;p&gt;PHP 
      
    
    </summary>
    
      <category term="php" scheme="https://bingbingliang.github.io/categories/php/"/>
    
    
      <category term="php" scheme="https://bingbingliang.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>PHP表单处理</title>
    <link href="https://bingbingliang.github.io//posts/9b8896cd/"/>
    <id>https://bingbingliang.github.io//posts/9b8896cd/</id>
    <published>2014-10-18T16:00:00.000Z</published>
    <updated>2019-06-20T17:03:29.566Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="表单处理"><a href="#表单处理" class="headerlink" title="表单处理"></a>表单处理</h2><p><strong>一个简单的表单</strong></p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><html></span><br><span class="line"><body></span><br><span class="line"><form action=<span class="string">"welcome.php"</span> method=<span class="string">"post"</span>></span><br><span class="line">Name: <input type=<span class="string">"text"</span> name=<span class="string">"name"</span>><br></span><br><span class="line">E-mail: <input type=<span class="string">"text"</span> name=<span class="string">"email"</span>><br></span><br><span class="line"><input type=<span class="string">"submit"</span>></span><br><span class="line"></form></span><br><span class="line"></body></span><br><span class="line"></html></span><br></pre></td></tr></tbody></table></figure><p><strong>welcome.php脚本源码</strong></p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><html></span><br><span class="line"><body></span><br><span class="line">Welcom <span class="meta"><?php</span> <span class="keyword">echo</span> $_POST[<span class="string">'name'</span>];<span class="meta">?></span><br></span><br><span class="line">Your email address is:<span class="meta"><?php</span> <span class="keyword">echo</span> $_POST[<span class="string">'email'</span>];<span class="meta">?></span></span><br><span class="line"></body></span><br><span class="line"></html></span><br></pre></td></tr></tbody></table></figure><p><strong>GET vs POST</strong></p><p>GET 和 POST 都创建数组(例如，array(key=>balue,key2=>value2,key3=>value3,…)).次数组包含键/值对，其中的键时表单控件的名称，而值时来自用户输入的数据．</p><p>GET 和　POST 被视作$_GET 和　$_POST.它们是超全局变量，这意味着对他们的访问无需考虑作用域，无需特殊代码，能够从任何函数,类，或者文件访问它们；</p><ul><li>$_GET是通过URl参数传递到当前脚本的变量数组；</li><li>$_POST是通过HTTP POST　传递到当前脚本的变量数组；</li></ul><p><strong>带有验证的表单</strong></p><p>示例：</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><!DOCTYPE HTML></span><br><span class="line"><html></span><br><span class="line"><head></span><br><span class="line"><style></span><br><span class="line">.error {color:<span class="comment">#FF0000;}</span></span><br><span class="line"></style></span><br><span class="line"></head></span><br><span class="line"><body></span><br><span class="line"><span class="meta"><?php</span></span><br><span class="line">$nameErr = $emailErr = $genderErr = $websiteErr = <span class="string">""</span>;</span><br><span class="line">$name = $email = $gender = $comment = $website = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[REQUEST_METHOD] == <span class="string">"POST"</span>) {</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">'name'</span>])){</span><br><span class="line">$nameErr = <span class="string">"姓名时必填的"</span>;</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">$name = test_input($_POST[<span class="string">'name'</span>]);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">'email'</span>])) {</span><br><span class="line">$emailErr = <span class="string">"电邮是必填的"</span>;</span><br><span class="line">}　<span class="keyword">else</span> {</span><br><span class="line">$email = test_input($_POST[<span class="string">'email'</span>]);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">'website'</span>])) {</span><br><span class="line">$website = <span class="string">""</span>;</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">$website = test_input($_POST[<span class="string">'website'</span>]);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($_post[<span class="string">'comment'</span>])) {</span><br><span class="line">$comment = <span class="string">""</span>;</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">$commment = test_input($_POST[<span class="string">'comment'</span>]);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">'gender'</span>])) {</span><br><span class="line">$genderErr = <span class="string">"性别是必须的"</span>；</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">$gender = test_input($_POST[<span class="string">'gender'</span>]);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test_input</span><span class="params">($data)</span> </span>{</span><br><span class="line">$data = trim($data);</span><br><span class="line">$data = stripslashes($data);</span><br><span class="line">$data = htmlspecoalchars($data);</span><br><span class="line"><span class="keyword">return</span> $data;</span><br><span class="line">}</span><br><span class="line"><span class="meta">?></span></span><br><span class="line"><h2PHP 测试例子</h2></span><br><span class="line"><p><span class="error"> * 必需字段</span></p></span><br><span class="line"><form method = <span class="string">"post"</span> action = <span class="string">"<?php echo htmlspecialchars($_SERVER[PHP_SELF]);?>"</span>></span><br><span class="line">姓名：<input type = <span class="string">"text"</span> name = <span class="string">"name"</span>></span><br><span class="line"><span class = "error"> * <?php echo $nameErr;?> </span></span><br><span class="line"><br><br></span><br><span class="line">电邮：<input type = <span class="string">"text"</span> name = <span class="string">"email"</span>></span><br><span class="line"><span class = "error">* <?php echo $emailErr;?> </span></span><br><span class="line"><br><br></span><br><span class="line">网址：<input type = <span class="string">"text"</span> name = <span class="string">"website"</span>></span><br><span class="line"><span class = "error"><?php echo $websiteErr;?></span></span><br><span class="line"><br><br></span><br><span class="line">评论：<testarea name = <span class="string">"comment"</span> rows = <span class="string">"5"</span> cols = <span class="string">"40"</span>></textarea></span><br><span class="line"><br><br> </span><br><span class="line">性别：</span><br><span class="line"><input type = <span class="string">"radio"</span> name=<span class="string">"gender"</span> value=<span class="string">"female"</span>>女性</span><br><span class="line"><input type = <span class="string">"radio"</span> name=<span class="string">"gender"</span> value=<span class="string">"male"</span>>男性</span><br><span class="line"><span class="error">* <?php echo $genderErr;?></span></span><br><span class="line"><br><br></span><br><span class="line"><input type = <span class="string">"submit"</span> name = <span class="string">"submit"</span> value = <span class="string">"提交"</span>></span><br><span class="line"></form></span><br><span class="line"></span><br><span class="line"><span class="meta"><?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"<h2>您的输入：</h2>"</span>;</span><br><span class="line"><span class="keyword">echo</span> $name;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"<br>"</span>;</span><br><span class="line"><span class="keyword">echo</span> $email;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"<br>"</span>;</span><br><span class="line"><span class="keyword">echo</span> $website;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"<br>"</span>;</span><br><span class="line"><span class="keyword">echo</span> $comment;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"<br>"</span>;</span><br><span class="line"><span class="keyword">echo</span> $gender;</span><br><span class="line"><span class="meta">?></span></span><br><span class="line"></body></span><br><span class="line"></html></span><br></pre></td></tr></tbody></table></figure><p><strong>PHP - 验证　Name,E-mail,以及URL</strong> </p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line">$nameErr = $emailErr = $genderErr = $websiteErr = <span class="string">""</span>;</span><br><span class="line">$name = $email = $gender = $comment = $website = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">"REQUEST_METHOD"</span>] == <span class="string">"POST"</span>){</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">'name'</span>])){</span><br><span class="line">$nameErr = <span class="string">"name is required"</span>;</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">$name = test_input($_POST[<span class="string">'name'</span>]);</span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">"/^[a-zA-Z ]*$/"</span>,$name)) {</span><br><span class="line">$nameErr = <span class="string">"Only letters and white space allowed"</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">'email'</span>])){</span><br><span class="line">$emailErr = <span class="string">"Email is required"</span>;</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line"><span class="comment">#email = test_input($_POST['email']);</span></span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">"/([\w\-]+\@[\w\-]+\.[\w\-]+)/"</span>,$email)) {</span><br><span class="line">$emailErr = <span class="string">"Invaild email format"</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">'website'</span>])){</span><br><span class="line">$website = <span class="string">""</span>;</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">$website = test_input($_POST[<span class="string">'website'</span>]);</span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">"/\b(?:(?:https?|ftp):\/\/|www\.)[-a-z0-9+&@#\/%?=~_|!:,.;]*[-a-z0-9+&@#\/%=~_|]/i"</span>,$website)) {</span><br><span class="line">$websiteErr ＝<span class="string">"Invaild URL"</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">'comment'</span>])) {</span><br><span class="line">$comment = <span class="string">""</span>;</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">$comment = test_input($_POST[<span class="string">'comment'</span>]);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">'gender'</span>])) {</span><br><span class="line">$genderErr = <span class="string">"Gender is required"</span>;</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">$gender = test_input($_POST[<span class="string">'gender'</span>]);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;表单处理&quot;&gt;&lt;a href=&quot;#表单处理&quot; class=&quot;headerlink&quot; title=&quot;表单处理&quot;&gt;&lt;/a&gt;表单处理&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;一个简单的表单&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;
      
    
    </summary>
    
      <category term="php" scheme="https://bingbingliang.github.io/categories/php/"/>
    
    
      <category term="php" scheme="https://bingbingliang.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>php生成优惠码</title>
    <link href="https://bingbingliang.github.io//posts/ce88736e/"/>
    <id>https://bingbingliang.github.io//posts/ce88736e/</id>
    <published>2014-10-11T16:00:00.000Z</published>
    <updated>2019-06-20T17:03:29.580Z</updated>
    
    <content type="html"><![CDATA[<h2 id="首先我们先搞清楚什么是促销-优惠-折扣码？它有什么用作；"><a href="#首先我们先搞清楚什么是促销-优惠-折扣码？它有什么用作；" class="headerlink" title="首先我们先搞清楚什么是促销/优惠/折扣码？它有什么用作；"></a>首先我们先搞清楚什么是促销/优惠/折扣码？它有什么用作；</h2><p>每一个电子商务网站，现在有一种或多种类型的优惠/折扣/优惠券系统，给大家分享一下如何在PHP生成唯一的促销/折扣码。主要是实现一个优惠码系统，可用于跟踪用户来自某些特定的来源，例如有些主机促销的时候链接到别的页面会有优惠码生成，还有更多的促销代码等。因此，今天将讨论这样一个优惠码的实现过程。</p><h2 id="考虑的需求"><a href="#考虑的需求" class="headerlink" title="考虑的需求"></a>考虑的需求</h2><ul><li>代码应该很容易记住，因此保持短的长度是一个好主意，使用户可以很容易地记住它</li><li>没有特殊字符！它应该是字母数字组合，因为它会永远是为用户更容易记住</li><li>长度推广/折扣代码的正确。没有一个标准的长度，因为它取决于你想生成的长度，例如，如果你想生成1000代码的代码，那么你需要在至少4个字符代码。促销/优惠码长度通常为4到8个字符，但它取决于您的要求。</li></ul><p>那好吧，让我们开始吧！让我们来看看代码，然后我会详细解释。它很容易</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">/** </span><br><span class="line">* @param int $no_of_codes//定义一个int类型的参数 用来确定生成多少个优惠码 </span><br><span class="line">* @param array $exclude_codes_array//定义一个exclude_codes_array类型的数组 </span><br><span class="line">* @param int $code_length //定义一个code_length的参数来确定优惠码的长度 </span><br><span class="line">* @return array//返回数组 </span><br><span class="line">*/  </span><br><span class="line">function generate_promotion_code($no_of_codes,$exclude_codes_array='',$code_length =6)  </span><br><span class="line">{  </span><br><span class="line">$characters = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";  </span><br><span class="line">$promotion_codes = array();//这个数组用来接收生成的优惠码  </span><br><span class="line">for($j = 0 ; $j < $no_of_codes; $j++)  </span><br><span class="line">    {  </span><br><span class="line">$code = "";  </span><br><span class="line">for ($i = 0; $i < $code_length; $i++)  </span><br><span class="line">    {  </span><br><span class="line">$code .= $characters[mt_rand(0, strlen($characters)-1)];  </span><br><span class="line">    }  </span><br><span class="line">//如果生成的6位随机数不再我们定义的$promotion_codes函数里面  </span><br><span class="line">if(!in_array($code,$promotion_codes))  </span><br><span class="line">    {  </span><br><span class="line">if(is_array($exclude_codes_array))//  </span><br><span class="line">    {  </span><br><span class="line">if(!in_array($code,$exclude_codes_array))//排除已经使用的优惠码  </span><br><span class="line">    {  </span><br><span class="line">$promotion_codes[$j] = $code;//将生成的新优惠码赋值给promotion_codes数组  </span><br><span class="line">}  </span><br><span class="line">else  </span><br><span class="line">    {  </span><br><span class="line">$j--;  </span><br><span class="line">  }  </span><br><span class="line">}  </span><br><span class="line">else  </span><br><span class="line">    {  </span><br><span class="line">$promotion_codes[$j] = $code;//将优惠码赋值给数组  </span><br><span class="line">   }  </span><br><span class="line">}  </span><br><span class="line">else  </span><br><span class="line">     {  </span><br><span class="line">$j--;  </span><br><span class="line">   }  </span><br><span class="line">}  </span><br><span class="line">return $promotion_codes;  </span><br><span class="line">}  </span><br><span class="line">echo 'Promotion / Discount Codes';  </span><br><span class="line">print_r(generate_promotion_code(100,'',6));</span><br></pre></td></tr></tbody></table></figure><h2 id="该代码由三个参数组成"><a href="#该代码由三个参数组成" class="headerlink" title="该代码由三个参数组成"></a>该代码由三个参数组成</h2><ul><li>第一个参数是你要生成优惠码的个数（在这里是生成100个）。</li><li>第二个参数exclude array，确保在当前列表中的生成唯一优惠码，所以如果你已经数据库中有一些未使用的代码，你可以把它传递给exclude。</li><li>最后一个参数是优惠码的的长度。这个函数将返回规定长度的优惠码 这里是6位的优惠码。</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;首先我们先搞清楚什么是促销-优惠-折扣码？它有什么用作；&quot;&gt;&lt;a href=&quot;#首先我们先搞清楚什么是促销-优惠-折扣码？它有什么用作；&quot; class=&quot;headerlink&quot; title=&quot;首先我们先搞清楚什么是促销/优惠/折扣码？它有什么用作；&quot;&gt;&lt;/a&gt;首先
      
    
    </summary>
    
      <category term="php" scheme="https://bingbingliang.github.io/categories/php/"/>
    
    
      <category term="php" scheme="https://bingbingliang.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>PHP日期函数</title>
    <link href="https://bingbingliang.github.io//posts/d239f416/"/>
    <id>https://bingbingliang.github.io//posts/d239f416/</id>
    <published>2014-10-04T16:00:00.000Z</published>
    <updated>2019-06-20T17:03:29.572Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="PHP-日期和时间"><a href="#PHP-日期和时间" class="headerlink" title="PHP 日期和时间"></a>PHP 日期和时间</h2><p><strong>PHP Date() 函数</strong></p><p>PHP Date()　函数把时间戳格式化为更易读的日期和时间．</p><p>语法：</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date(format,timestamp);</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center"><strong><em>format</em></strong></td><td style="text-align:center">必需，规定时间戳的格式</td></tr><tr><td style="text-align:center"><strong><em>timestamp</em></strong></td><td style="text-align:center">可选，规定时间戳，默认是当前时间和日期</td></tr></tbody></table><p><strong>注释</strong>　时间戳时一种字符序列，他表示具体时间发生的日期和事件</p><p><strong><em>format</em></strong></p><ul><li>d - 表示月里的某天(01-31)</li><li>m - 表示月(01-12)</li><li>Y - 表示年(四位数)</li><li>y - 表示年(两位数)</li><li>h - 带有首位零的12小时格式</li><li>i - 带有首位零的分钟</li><li>s - 带有首位零的秒(0-59)</li><li>a - 小写的午前和午后</li></ul><p><strong>时区处理</strong></p><p>如果从代码返回的时不正确的时间，有可能时因为您的服务器位于其他国家或者被设置为不同时区，因此，如果您需要基于具体位置的准确时间，您可以设置要用的时区</p><p>示例：</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line">date_default_timezone_set(<span class="string">"Asia/Shanghai"</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"当前时间时　"</span>．date(<span class="string">'h:i:s'</span>);</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><p><strong>mktime()创建日期</strong></p><p>date() 函数中可选的时间戳参数规定时间戳，如果没有规定时间戳，则使用当前的时间戳，<strong>mktime()</strong>函数返回Unix时间戳，Unix时间戳包含纪元到指定时间的秒数(1970-01-01 00:00:00 GMT)</p><p>语法：</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mktime(huor,minute,second,month,day,year);</span><br></pre></td></tr></tbody></table></figure><p>实例：</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line">$d = mktime(<span class="number">9</span>,<span class="number">31</span>,<span class="number">21</span>,<span class="number">30</span>,<span class="number">1</span>,<span class="number">2015</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"创建的日期是："</span>.date(y-m-d h-i-s,$d);</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><p><strong>通过字符串创建日期</strong></p><p>语法：</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strtotime(time,now);</span><br></pre></td></tr></tbody></table></figure><p>实例：</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line">$d=strtotime(<span class="string">"10:38pm April 15 2015"</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"创建的日期是："</span>.date(<span class="string">"y-m-d h:i:s"</span>,$d);</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;PHP-日期和时间&quot;&gt;&lt;a href=&quot;#PHP-日期和时间&quot; class=&quot;headerlink&quot; title=&quot;PHP 日期和时间&quot;&gt;&lt;/a&gt;PHP 日期和时间&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;PHP Date() 函数&lt;/s
      
    
    </summary>
    
      <category term="php" scheme="https://bingbingliang.github.io/categories/php/"/>
    
    
      <category term="php" scheme="https://bingbingliang.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>PHP文件操作</title>
    <link href="https://bingbingliang.github.io//posts/50a16ad7/"/>
    <id>https://bingbingliang.github.io//posts/50a16ad7/</id>
    <published>2014-09-27T16:00:00.000Z</published>
    <updated>2019-06-20T17:03:29.577Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="PHP-文件处理"><a href="#PHP-文件处理" class="headerlink" title="PHP 文件处理"></a>PHP 文件处理</h2><p><strong>PHP Open File —- fopen()</strong></p><p>说明：</p><p><strong><em>fopen</em></strong> 的第一个参数包含被打开的文件名，第二个参数规定打开文件的模式，如果fopen()没能打开指定文件，下面的例子回升呈一段消息：</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line">$myfile = fopen(<span class="string">"daodaoliang.txt"</span>,<span class="string">'r'</span>)  <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to open file"</span>);</span><br><span class="line">fclose($myfile);</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><p>文件打开模式如下：</p><table><thead><tr><th style="text-align:center">模式</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">r</td><td style="text-align:center">打开文件为只读,文件指针在文件的开头开始</td></tr><tr><td style="text-align:center">w</td><td style="text-align:center">打开文件为只写,删除文件的内容或创建一个新的文件，如果他不存在．文件指针在文件的开头开始</td></tr><tr><td style="text-align:center">a</td><td style="text-align:center">打开文件为只写，文件中的现有数据会被保留，文件指针在文件结尾开始，创建新的文件，如果文件不存在</td></tr><tr><td style="text-align:center">x</td><td style="text-align:center">创建新文件为只写，返回false和错误，如果文件已存在</td></tr><tr><td style="text-align:center">r+</td><td style="text-align:center">打开文件为读写方式，文件指针在文件开头开始</td></tr><tr><td style="text-align:center">w+</td><td style="text-align:center">打开文件为读写，删除文件内容或创建新文件，如果它不存在，文件指针在文件开头开始</td></tr><tr><td style="text-align:center">a+</td><td style="text-align:center">打开文件为读写，文件中已有的数据会被保留，文件指针在文件结尾开始，创建新文件，如果他不存在</td></tr><tr><td style="text-align:center">x+</td><td style="text-align:center">创建新文件为读写，返回false和错误．如果文件已存在</td></tr></tbody></table><p><strong>PHP fread()</strong></p><p><strong><em>fread()</em></strong> 函数读取打开的文件</p><p>fread()的第一个参数包含待读取文件的文件名．第二个参数规定待读取的最大字节数．</p><p>示例：</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line">fread($myfile,filesize(<span class="string">"daodoaliang.txt"</span>));</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><p><strong>PHP 检查文件结尾</strong></p><p><strong><em>feof()</em></strong> 函数检查是否已达到”end-of-file”(EOF)</p><p>feof()对于遍历未知长度的数据很有用</p><p>示例：</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line">$myfile=fopen(<span class="string">"daodaoliang.txt"</span>,<span class="string">"r"</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to open file!"</span>);</span><br><span class="line"><span class="keyword">while</span>(!feof($myfile))　{</span><br><span class="line"><span class="keyword">echo</span> fgets($myfile).<span class="string">"<br>"</span>;</span><br><span class="line">}</span><br><span class="line">fclose($myfile);</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><p><strong>PHP 文件上传</strong></p><p>通过PHP的全局数组 </p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">第一个参数是表单的 input name,第二个下标可以是"name","type","size","tmp_name","error":</span><br><span class="line"></span><br><span class="line">* $_FILES["file"]["name"]-被上传文件的名称；</span><br><span class="line">* $_FILES["file"]["type"]-被上传文件的类型；</span><br><span class="line">* $_FILES["file"]["size"]-被上传文件的大小．以字节计；</span><br><span class="line">* $_FILES["file"]["tmp＿name"]-存储在服务器的文件的临时副本名称</span><br><span class="line">* $_FILES["file"]["error"]-由文件上传导致的错误代码</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line"></span><br><span class="line">```html</span><br><span class="line"><html></span><br><span class="line"><body></span><br><span class="line"><form action="upload_file.php" method="post" enctype="multipart/form-data"></span><br><span class="line"><label for="file">Filename</label></span><br><span class="line"><input type="file" name="file" id="file" /></span><br><span class="line"><br /></span><br><span class="line"><input type="submit" name="submit" value="Submit" /></span><br><span class="line"></form></span><br><span class="line"></body></span><br><span class="line"></html></span><br></pre></td></tr></tbody></table></figure><p></p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line"><span class="keyword">if</span> ((($_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>] == <span class="string">"image/gif"</span>)</span><br><span class="line">|| ($_FILES[<span class="string">"files"</span>][<span class="string">"type"</span>] == <span class="string">"image/jpeg"</span>)</span><br><span class="line">|| ($_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>] == <span class="string">"image/pjpeg"</span>))</span><br><span class="line">&& ($_FILES[<span class="string">"file"</span>][<span class="string">"size"</span>] < <span class="number">20000</span>))</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span> ($_FILES[<span class="string">"file"</span>][<span class="string">"error"</span>] > <span class="number">0</span>){</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Return Code:"</span>.$_FILES[<span class="string">"file"</span>][<span class="string">"error"</span>].<span class="string">"<br/>"</span>;</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Upload:"</span>.$_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>].<span class="string">"<br/>"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Type:"</span>.$_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>].<span class="string">"<br/>"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Size:"</span>.($_FILES[<span class="string">"file"</span>][<span class="string">"size"</span>] / <span class="number">1024</span>).<span class="string">"<br/>"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Temp file:"</span>.$_FILES[<span class="string">"file"</span>][<span class="string">"temp_name"</span>].<span class="string">"<br/>"</span>;</span><br><span class="line"><span class="keyword">if</span> (file_exists(<span class="string">"upload/"</span>.$_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>])){</span><br><span class="line"><span class="keyword">echo</span> $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>].<span class="string">"already exists."</span>;</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">move_upload_file($_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>],<span class="string">"upload/"</span>.$_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>]);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Store in: "</span>.<span class="string">"upload/"</span>.$_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>];</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Invalid file"</span>;</span><br><span class="line">}</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><p><strong>PHP 文件引用</strong></p><p><strong><em>include</em></strong> 和　<strong><em>require</em></strong></p><ul><li>include 语句引用某个文件并且PHP无法找到它时，脚本会继续执行；</li><li>require 语句引用某个文件并且PHP无法找到它时，脚本会终止运行；</li></ul><p>示例：</p><p>test.php</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line">$daodaoliang = <span class="string">"xiaobai"</span>;</span><br><span class="line">$wangxiaowei = <span class="string">"wangxiaowei"</span>;</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"test.php"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"daodaoliang:"</span>.$daodaoliang.<span class="string">"wangxiaowei:"</span>.$wangxiaowei;</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;PHP-文件处理&quot;&gt;&lt;a href=&quot;#PHP-文件处理&quot; class=&quot;headerlink&quot; title=&quot;PHP 文件处理&quot;&gt;&lt;/a&gt;PHP 文件处理&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;PHP Open File —- fop
      
    
    </summary>
    
      <category term="php" scheme="https://bingbingliang.github.io/categories/php/"/>
    
    
      <category term="php" scheme="https://bingbingliang.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>PHP数组</title>
    <link href="https://bingbingliang.github.io//posts/c8368d3d/"/>
    <id>https://bingbingliang.github.io//posts/c8368d3d/</id>
    <published>2014-09-20T16:00:00.000Z</published>
    <updated>2019-06-20T17:03:29.579Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="在PHP-中创建数组"><a href="#在PHP-中创建数组" class="headerlink" title="在PHP 中创建数组"></a>在PHP 中创建数组</h3><p>在 PHP 中,array()函数用于创建数组:</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span>();</span><br></pre></td></tr></tbody></table></figure><p>在 PHP 中,有三种数组类型:</p><ul><li><strong>索引数组</strong>-带有数字索引的数组</li><li><strong>关联数组</strong>-带有指定键的是数组</li><li><strong>多维数组</strong>-包含一个或多个数组的数组</li></ul><p>索引数组示例:</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line">$cars=<span class="keyword">array</span>(<span class="string">"volvo"</span>,<span class="string">"BMW"</span>,<span class="string">"SAAB"</span>);</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><p>或者</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$car[<span class="number">0</span>]=<span class="string">"volov"</span>;</span><br><span class="line">$car[<span class="number">2</span>]=<span class="string">"BMW"</span>;</span><br><span class="line">$car[<span class="number">3</span>]=<span class="string">"SAAB"</span>;</span><br></pre></td></tr></tbody></table></figure><p>关联数组示例:</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line">$age=<span class="keyword">array</span>(<span class="string">"daodaolang"</span>=><span class="string">"10"</span>,<span class="string">"wangxiaowei"</span>=><span class="string">"12"</span>);</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><p>或者</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line">$age[<span class="string">"daodaoliang"</span>] = <span class="string">"23"</span>;</span><br><span class="line">$age[<span class="string">"wangxiaowei"</span>] = <span class="number">22</span>;</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><h3 id="遍历数组"><a href="#遍历数组" class="headerlink" title="遍历数组"></a>遍历数组</h3><p><strong>遍历索引数组</strong></p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line">$test_array = <span class="keyword">array</span>(<span class="string">"daodaoliang"</span>,<span class="string">"test"</span>,<span class="string">"test2"</span>);</span><br><span class="line"><span class="keyword">foreach</span>($test_array <span class="keyword">as</span> $value){</span><br><span class="line"><span class="keyword">echo</span> $value;</span><br><span class="line">}</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><p>或</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line">$test_array = <span class="keyword">array</span>(<span class="string">"test1"</span>,<span class="string">"test2"</span>,<span class="string">"test3"</span>);</span><br><span class="line"><span class="keyword">for</span>($index=<span class="number">0</span>;$index < count($test_array);++$index){</span><br><span class="line"><span class="keyword">echo</span> $test_array[$index];</span><br><span class="line">}</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><p><strong>遍历索引数组</strong></p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line">$age=<span class="keyword">array</span>(<span class="string">"daodaoliang"</span>=><span class="number">23</span>,<span class="string">"wangxiaowei"</span>=><span class="number">34</span>);</span><br><span class="line"><span class="keyword">foreach</span>($age <span class="keyword">as</span> $key => $value){</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"key="</span>.$x.<span class="string">"value="</span>.$value;</span><br><span class="line">}</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><h3 id="PHP-数据排序"><a href="#PHP-数据排序" class="headerlink" title="PHP 数据排序"></a>PHP 数据排序</h3><ul><li>sort() 以剩下对数组进行排序</li><li>rsprt() 以降序对数组排序</li><li>asort() 根据值,以升序对关联数组进行排序</li><li>ksort() 根据健,以升序对关联数组进行排序</li><li>arosrt() 根据值,以降序对关联书序进行排序</li><li>krsort() 根据健,以降序对关联数组进行排序</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;在PHP-中创建数组&quot;&gt;&lt;a href=&quot;#在PHP-中创建数组&quot; class=&quot;headerlink&quot; title=&quot;在PHP 中创建数组&quot;&gt;&lt;/a&gt;在PHP 中创建数组&lt;/h3&gt;&lt;p&gt;在 PHP 中,array()函数用于创
      
    
    </summary>
    
      <category term="php" scheme="https://bingbingliang.github.io/categories/php/"/>
    
    
      <category term="php" scheme="https://bingbingliang.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>PHP异常处理</title>
    <link href="https://bingbingliang.github.io//posts/5b7d88b3/"/>
    <id>https://bingbingliang.github.io//posts/5b7d88b3/</id>
    <published>2014-09-13T16:00:00.000Z</published>
    <updated>2019-06-20T17:03:29.571Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="PHP-异常处理"><a href="#PHP-异常处理" class="headerlink" title="PHP 异常处理"></a>PHP 异常处理</h2><p>暂时没有用到,先不用更新了o(╯□╰)o</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;PHP-异常处理&quot;&gt;&lt;a href=&quot;#PHP-异常处理&quot; class=&quot;headerlink&quot; title=&quot;PHP 异常处理&quot;&gt;&lt;/a&gt;PHP 异常处理&lt;/h2&gt;&lt;p&gt;暂时没有用到,先不用更新了o(╯□╰)o&lt;/p&gt;
&lt;sc
      
    
    </summary>
    
      <category term="php" scheme="https://bingbingliang.github.io/categories/php/"/>
    
    
      <category term="php" scheme="https://bingbingliang.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>PHP变量说明</title>
    <link href="https://bingbingliang.github.io//posts/f1c12ff5/"/>
    <id>https://bingbingliang.github.io//posts/f1c12ff5/</id>
    <published>2014-09-06T16:00:00.000Z</published>
    <updated>2019-06-20T17:03:29.551Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="PHP-变量"><a href="#PHP-变量" class="headerlink" title="PHP 变量"></a><strong>PHP 变量</strong></h2><p><strong>1.变量的相关规则</strong></p><ul><li>变量以 <strong>$</strong> 符号开头,其后是变量名称</li><li>变量名称必须以字母或者下划线开头,不能已数字开头</li><li>变量名称只能包含字母数字字符和下划线(A-z,0-9以及_)</li><li>变量名称对大小写敏感($x与$y是两个不同的变量)</li></ul><p><strong>注意</strong> PHP变量对大小写敏感,PHP保留字对大小写不敏感,PHP变量时一门弱类型的语言;</p><p><strong>2.PHP变量作用域</strong></p><p> 在PHP中,可以在脚本的任意位置对变量进行声明,变量的作用域指的是变量能够被引用的那部分脚本,PHP有三种不容的变量作用域:</p><ul><li><strong>local</strong> (局部)</li><li><strong>global</strong> (全局)</li><li><strong>static</strong> (静态)</li></ul><p><strong>注意</strong> </p><ul><li>默认创建的变量都是 <strong>local</strong> </li><li>若是需要在函数内部访问全局的变量,则需要在函数内部声明 <strong>global</strong> 关键字,以此来使用函数外部的变量,所有的全局变量都放在 <strong>$GLOBALS[index]</strong> 数组中</li><li>函数在执行完后会删除变量,若是想要不删除变量则需要定义 <strong>static</strong> 关键字</li></ul><p><strong>3.PHP数据类型</strong></p><ul><li>字符串</li><li>整数</li><li>浮点数</li><li>逻辑</li><li>数组</li><li>对象</li><li>NULL</li></ul><p><strong>3.1字符串</strong></p><p>字符串是字符序列,比如”hello,world”,字符串可以是引号内的任何文本,您可以使用单引号或双引号.</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line">$x = <span class="string">"hello world!"</span>;</span><br><span class="line"><span class="keyword">echo</span> $x;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"<br>"</span>;</span><br><span class="line">$x = <span class="string">'hello world'</span>;</span><br><span class="line"><span class="keyword">echo</span> $x;</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><p><strong>3.2 整数</strong></p><p>可以用三种格式规定整数:十进制,十六进制(前缀是0x)或八进制(前缀0)</p><p>例如下(PHP中用 <strong>var_dump()</strong> 返回变量的数据类型和值)</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line">$x = <span class="number">1234</span>;</span><br><span class="line">var_dump($x);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"<br>"</span>;</span><br><span class="line"></span><br><span class="line">$x = <span class="number">-1234</span>;</span><br><span class="line">var_dump($x);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"<br>"</span>;</span><br><span class="line"></span><br><span class="line">$x = <span class="number">0x1234c</span>;</span><br><span class="line">var_dump($x);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"<br>"</span>;</span><br><span class="line"></span><br><span class="line">$x = <span class="number">01234</span>;</span><br><span class="line">var_dump($x);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"br"</span>;</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><p><strong>3.3 浮点数</strong></p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line">$x = <span class="number">10.123</span>;</span><br><span class="line">var_dump($x);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"<br>"</span>;</span><br><span class="line"></span><br><span class="line">$x = <span class="number">2.4e3</span>;</span><br><span class="line">var_dump($x);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"<br>"</span>;</span><br><span class="line"></span><br><span class="line">$x = <span class="number">8E-5</span>;</span><br><span class="line">var_dump($x);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"<br>"</span>;</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><p><strong>3.4 逻辑符</strong></p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line">$x = <span class="keyword">true</span>;</span><br><span class="line">$y = <span class="keyword">false</span>;</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><p><strong>3.4 PHP 数组</strong></p><p>实例:</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line">$car = <span class="keyword">array</span>(<span class="string">"liujian"</span> , <span class="string">"shi"</span>,<span class="string">"shabi"</span>);</span><br><span class="line">var_dump($car);</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><p><strong>3.5PHP对象</strong></p><p>对象是存储数据和数据处理的方法,类比其他语言的类.</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line"><span class="keyword">var</span> $color;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">car</span><span class="params">($color = <span class="string">"green"</span>)</span></span>{</span><br><span class="line"><span class="keyword">$this</span>->color = $color;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">what_color</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>->color;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><p><strong>3.6 NULL值</strong></p><p>用于初始化或者清空变量</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line">$x = <span class="string">"hello world"</span>;</span><br><span class="line">$x = <span class="keyword">null</span>;</span><br><span class="line">var_dump($x);</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><h2 id="PHP-常量"><a href="#PHP-常量" class="headerlink" title="PHP 常量"></a>PHP 常量</h2><p>与变量不同,常量贯穿整个脚本时自动全局的,定义常量的方法如下:</p><p><strong><em>define()</em></strong></p><ul><li>1.首个参数定义常量的名称</li><li>2.第二个参数定义常量的值</li><li>3.可选的第三个参数规定常量名是否对大小写敏感,默认时false</li></ul><p>实例:</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line">drfine(<span class="string">"test"</span>,<span class="string">"IamTestData"</span>,<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">echo</span> test;</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;PHP-变量&quot;&gt;&lt;a href=&quot;#PHP-变量&quot; class=&quot;headerlink&quot; title=&quot;PHP 变量&quot;&gt;&lt;/a&gt;&lt;strong&gt;PHP 变量&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1.变量的相关规则&lt;/
      
    
    </summary>
    
      <category term="php" scheme="https://bingbingliang.github.io/categories/php/"/>
    
    
      <category term="php" scheme="https://bingbingliang.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Mysql数据库处理</title>
    <link href="https://bingbingliang.github.io//posts/a1857940/"/>
    <id>https://bingbingliang.github.io//posts/a1857940/</id>
    <published>2014-08-30T16:00:00.000Z</published>
    <updated>2019-06-20T17:03:29.552Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="PHP-数据库处理"><a href="#PHP-数据库处理" class="headerlink" title="PHP 数据库处理"></a>PHP 数据库处理</h2><p><strong>安装</strong></p><ul><li>首先安装mysql和php;</li><li>安装PHP5-mysql;</li><li>安装PHP5-gd;</li></ul><p><strong>链接到一个mysql 数据库</strong></p><p>语法:</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_connect(servername,username,password);</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">servername</td><td style="text-align:center">可选,规定要链接服务器,默认是”localhost3306”</td></tr><tr><td style="text-align:center">username</td><td style="text-align:center">可选,规定登陆所使用的用户名.默认值时拥有服务器进程的用户的名称</td></tr><tr><td style="text-align:center">password</td><td style="text-align:center">可选,规定登陆所用的密码,默认是””</td></tr></tbody></table><p><strong>关闭链接</strong></p><p>用法:</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_close(connecttion);</span><br></pre></td></tr></tbody></table></figure><p>示例:</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line">$con=mysql_connect(<span class="string">"localhost"</span>,<span class="string">"daodaoliang"</span>,<span class="string">"123"</span>);</span><br><span class="line"><span class="keyword">if</span> (!$con){</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"coould not connect:"</span>.mysql_error());</span><br><span class="line">}</span><br><span class="line">mysql_close($con);</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><p><strong>创建数据库和创建表</strong></p><p>示例:</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line">$con = mysql_connect(<span class="string">"localhost"</span>,<span class="string">"daodaoliang"</span>,<span class="string">"123"</span>);</span><br><span class="line"><span class="keyword">if</span> (!$con){</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"could not connect"</span>.mysql_error());</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span> (mysql_query(<span class="string">"create database my_db"</span>,$con)) {</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"database created"</span>;</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"error creating database:"</span>.mysql_error();</span><br><span class="line">}</span><br><span class="line">mysql_select_db(<span class="string">"my_db"</span>,$con);</span><br><span class="line">$sql = <span class="string">"create table test (</span></span><br><span class="line"><span class="string">column varchar(10) not null auto_increment,</span></span><br><span class="line"><span class="string">column2 int(11),</span></span><br><span class="line"><span class="string">primary key(column)</span></span><br><span class="line"><span class="string">)"</span>;</span><br><span class="line">mysql_query($sql,$con);</span><br><span class="line">mysql_close($con);</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><p><strong>从数据库中获取数据</strong></p><p>示例:</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line">$con = mysql_connect(<span class="string">"localhost"</span>,<span class="string">"daodaoliang"</span>,<span class="string">"123"</span>);</span><br><span class="line"><span class="keyword">if</span> (!$con) {</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"could not connect :"</span>.mysql_error());</span><br><span class="line">}</span><br><span class="line">mysql_select_db(<span class="string">"my_db"</span>,$con);</span><br><span class="line">$result = mysql_query(<span class="string">"select * from test_table"</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"<table border = '1'></span></span><br><span class="line"><span class="string"><tr></span></span><br><span class="line"><span class="string"><th>column</th></span></span><br><span class="line"><span class="string"><th>eloumn2</th></span></span><br><span class="line"><span class="string"></th></span></span><br><span class="line"><span class="string">"</span>;</span><br><span class="line"><span class="keyword">while</span> ($row = mysql_fetch_array($result)){</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"<tr>"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"<td>"</span>.$row[<span class="string">'column'</span>].<span class="string">"</td>"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"<td>"</span>.$row[<span class="string">'column2'</span>].<span class="string">"</td>"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"</tr>"</span></span><br><span class="line">}</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"</table>"</span>;</span><br><span class="line">mysql_close($con);</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;PHP-数据库处理&quot;&gt;&lt;a href=&quot;#PHP-数据库处理&quot; class=&quot;headerlink&quot; title=&quot;PHP 数据库处理&quot;&gt;&lt;/a&gt;PHP 数据库处理&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;安装&lt;/strong&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="php" scheme="https://bingbingliang.github.io/categories/php/"/>
    
    
      <category term="php" scheme="https://bingbingliang.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>linux一键安装环境</title>
    <link href="https://bingbingliang.github.io//posts/e9c72726/"/>
    <id>https://bingbingliang.github.io//posts/e9c72726/</id>
    <published>2014-08-23T16:00:00.000Z</published>
    <updated>2019-06-20T17:03:29.570Z</updated>
    
    <content type="html"><![CDATA[<p>phpStudy for Linux 支持Apache/Nginx/Tengine/Lighttpd，支持php5.2/5.3/5.4/5.5切换，已经在centos-6.5,debian-7.4.,ubuntu-13.10测试成功</p><h2 id="使用说明："><a href="#使用说明：" class="headerlink" title="使用说明："></a>使用说明：</h2><ul><li>服务进程管理：phpstudy (start|stop|restart|uninstall)</li><li>站点主机管理：phpstudy (add|del|list)</li><li>ftpd用户管理：phpstudy ftp (add|del|list)</li></ul><p>项目地址：<a href="http://lamp.phpstudy.net/" target="_blank" rel="noopener">http://lamp.phpstudy.net/</a></p><h2 id="安装说明："><a href="#安装说明：" class="headerlink" title="安装说明："></a>安装说明：</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -c http://lamp.phpstudy.NET/phpstudy.bin</span><br><span class="line">chmod +x phpstudy.bin    #权限设置 </span><br><span class="line">./phpstudy.bin 　　　　#运行安装</span><br></pre></td></tr></tbody></table></figure><p>选择好PHP的版本安装即可。<br>用时十到几十分钟不等，安装时间取决于电脑的下载速度和配置。<br>也可以事先下载好完整，安装时无需下载。</p><p>##如何切换php版：</p><p>假如你先安装的apache+php5.3<br>想切换成nginx+php5.4<br>你就再走一次./phpstudy.bin<br>但是你会发现有一行是否安装MySQL提示选不安装<br>这样只需要编译nginx+php5.4<br>从而节省时间，这样只需要几分钟即可。<br>< page.date | date_to_string ></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;phpStudy for Linux 支持Apache/Nginx/Tengine/Lighttpd，支持php5.2/5.3/5.4/5.5切换，已经在centos-6.5,debian-7.4.,ubuntu-13.10测试成功&lt;/p&gt;
&lt;h2 id=&quot;使用说明：&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="php" scheme="https://bingbingliang.github.io/categories/php/"/>
    
    
      <category term="php" scheme="https://bingbingliang.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>运算逻辑符号说明</title>
    <link href="https://bingbingliang.github.io//posts/2a45cf5/"/>
    <id>https://bingbingliang.github.io//posts/2a45cf5/</id>
    <published>2014-08-16T16:00:00.000Z</published>
    <updated>2019-06-20T17:03:29.549Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="PHP-算数运算符"><a href="#PHP-算数运算符" class="headerlink" title="PHP 算数运算符"></a>PHP 算数运算符</h2><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">名称</th><th style="text-align:center">例子</th><th style="text-align:center">结果</th></tr></thead><tbody><tr><td style="text-align:center">+</td><td style="text-align:center">加法</td><td style="text-align:center">$x + $y</td><td style="text-align:center">$x 与 $y 求和</td></tr><tr><td style="text-align:center">-</td><td style="text-align:center">减法</td><td style="text-align:center">$x - $y</td><td style="text-align:center">$x 与 $y 的差值</td></tr><tr><td style="text-align:center">*</td><td style="text-align:center">乘法</td><td style="text-align:center">$x * $y</td><td style="text-align:center">$x 与 $y 的乘积</td></tr><tr><td style="text-align:center">/</td><td style="text-align:center">除法</td><td style="text-align:center">$x / $y</td><td style="text-align:center">$x 与 $y 的商数</td></tr><tr><td style="text-align:center">%</td><td style="text-align:center">模数</td><td style="text-align:center">$X % $y</td><td style="text-align:center">$x 与 $y 的模数</td></tr></tbody></table><h2 id="PHP-赋值运算符"><a href="#PHP-赋值运算符" class="headerlink" title="PHP 赋值运算符"></a>PHP 赋值运算符</h2><table><thead><tr><th style="text-align:center">赋值</th><th style="text-align:center">等同于</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">x = y</td><td style="text-align:center">x = y</td><td style="text-align:center">右侧表达式为左侧运算数设置数</td></tr><tr><td style="text-align:center">x += y</td><td style="text-align:center">x = x + y</td><td style="text-align:center">加</td></tr><tr><td style="text-align:center">x -= y</td><td style="text-align:center">x = x - y</td><td style="text-align:center">减</td></tr><tr><td style="text-align:center">x *= y</td><td style="text-align:center">x = x * y</td><td style="text-align:center">乘</td></tr><tr><td style="text-align:center">x /= y</td><td style="text-align:center">x = x / y</td><td style="text-align:center">除</td></tr><tr><td style="text-align:center">x %= y</td><td style="text-align:center">x = x % y</td><td style="text-align:center">模数</td></tr></tbody></table><h2 id="PHP-字符串运算符"><a href="#PHP-字符串运算符" class="headerlink" title="PHP 字符串运算符"></a>PHP 字符串运算符</h2><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">名称</th><th style="text-align:center">例子</th><th style="text-align:center">结果</th></tr></thead><tbody><tr><td style="text-align:center">.</td><td style="text-align:center">串接</td><td style="text-align:center">$txt1 = “hello”; $txt2 = $txt1.”world”;</td><td style="text-align:center">现在 $txt2 包含 “helloworld”</td></tr><tr><td style="text-align:center">.=</td><td style="text-align:center">串接赋值</td><td style="text-align:center">$txt1 = “hello”; $txt1 .= “world”;</td><td style="text-align:center">现在 $txt1 包含 “helloworld”</td></tr></tbody></table><h2 id="PHP-递增-递减运算符"><a href="#PHP-递增-递减运算符" class="headerlink" title="PHP 递增/递减运算符"></a>PHP 递增/递减运算符</h2><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">名称</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">++$x</td><td style="text-align:center">前递增</td><td style="text-align:center">$x 加一递增,然后返回$x</td></tr><tr><td style="text-align:center">$x++</td><td style="text-align:center">后递增</td><td style="text-align:center">返回$x 然后$x 加一递增</td></tr><tr><td style="text-align:center">–$x</td><td style="text-align:center">前递减</td><td style="text-align:center">$x 减一递减 然后返回$x</td></tr><tr><td style="text-align:center">$x–</td><td style="text-align:center">后递减</td><td style="text-align:center">返回$x 然后$x 减一递减</td></tr></tbody></table><h2 id="PHP比较运算符"><a href="#PHP比较运算符" class="headerlink" title="PHP比较运算符"></a>PHP比较运算符</h2><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">名称</th><th style="text-align:center">例子</th><th style="text-align:center">结果</th></tr></thead><tbody><tr><td style="text-align:center">==</td><td style="text-align:center">等于</td><td style="text-align:center">$x == $y</td><td style="text-align:center">如果 $x 等于 $y 则返回 true</td></tr><tr><td style="text-align:center">===</td><td style="text-align:center">全等(完全相同)</td><td style="text-align:center">$x === $y</td><td style="text-align:center">如果 $x 等于 $y 且他们类型相同则返回true</td></tr><tr><td style="text-align:center">!=</td><td style="text-align:center">不等于</td><td style="text-align:center">$x != $y</td><td style="text-align:center">如果 $x 不等于 $y 则返回true</td></tr><tr><td style="text-align:center"><></td><td style="text-align:center">不等于</td><td style="text-align:center">$x != $y</td><td style="text-align:center">如果 $x 不等于 $y 则返回true</td></tr><tr><td style="text-align:center">!==</td><td style="text-align:center">不全等(完全不同)</td><td style="text-align:center">$x !== $y</td><td style="text-align:center">如果$x 不等于 $y 则返回true</td></tr><tr><td style="text-align:center">></td><td style="text-align:center">大于</td><td style="text-align:center">$x > $y</td><td style="text-align:center">如果 $x 大于 $y 则返回true</td></tr><tr><td style="text-align:center"><</td><td style="text-align:center">小于</td><td style="text-align:center">$x < $y</td><td style="text-align:center">如果 $x 小于 $y 则返回true</td></tr><tr><td style="text-align:center">>=</td><td style="text-align:center">大于等于</td><td style="text-align:center">$x >= $y</td><td style="text-align:center">如果 $x 大于等于 $y 则返回true</td></tr><tr><td style="text-align:center"><=</td><td style="text-align:center">小于或等</td><td style="text-align:center">$x <= $y</td><td style="text-align:center">如果 $x 小于等于 $y 则返回true</td></tr></tbody></table><h2 id="PHP-逻辑运算符"><a href="#PHP-逻辑运算符" class="headerlink" title="PHP 逻辑运算符"></a>PHP 逻辑运算符</h2><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">名称</th><th style="text-align:center">例子</th><th style="text-align:center">结果</th></tr></thead><tbody><tr><td style="text-align:center">and</td><td style="text-align:center">与</td><td style="text-align:center">$x and $y</td><td style="text-align:center">如果 $x 和 $y 都为true 则返回true</td></tr><tr><td style="text-align:center">or</td><td style="text-align:center">或</td><td style="text-align:center">$x or $y</td><td style="text-align:center">如果 $x 或者 $y 有一个为true 则返回 true</td></tr><tr><td style="text-align:center">xor</td><td style="text-align:center">异或</td><td style="text-align:center">$x xor $y</td><td style="text-align:center">如果$x和$y仅有一个为true则返回true</td></tr><tr><td style="text-align:center">&&</td><td style="text-align:center">与</td><td style="text-align:center">$x && $y</td><td style="text-align:center">如果$x 和 $y 都为true 则返回true</td></tr><tr><td style="text-align:center">!</td><td style="text-align:center">非</td><td style="text-align:center">!$x</td><td style="text-align:center">如果$x不为true则返回true</td></tr></tbody></table><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;PHP-算数运算符&quot;&gt;&lt;a href=&quot;#PHP-算数运算符&quot; class=&quot;headerlink&quot; title=&quot;PHP 算数运算符&quot;&gt;&lt;/a&gt;PHP 算数运算符&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th st
      
    
    </summary>
    
      <category term="php" scheme="https://bingbingliang.github.io/categories/php/"/>
    
    
      <category term="php" scheme="https://bingbingliang.github.io/tags/php/"/>
    
  </entry>
  
</feed>
